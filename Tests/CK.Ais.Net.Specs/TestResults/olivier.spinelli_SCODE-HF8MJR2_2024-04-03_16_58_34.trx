<?xml version="1.0" encoding="utf-8"?>
<TestRun id="ac2d6cd4-4d36-46ba-86b3-3a8a604dbbf4" name="olivier.spinelli@SCODE-HF8MJR2 2024-04-03 16:58:34" runUser="SIGNATURE\olivier.spinelli" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2024-04-03T16:58:34.8305254+02:00" queuing="2024-04-03T16:58:34.8305257+02:00" start="2024-04-03T16:58:32.5771206+02:00" finish="2024-04-03T16:58:35.7484138+02:00" />
  <TestSettings name="default" id="492743b9-66f6-4962-88df-489e832c18dd">
    <Deployment runDeploymentRoot="olivier.spinelli_SCODE-HF8MJR2_2024-04-03_16_58_34" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="c6f2ebb8-f4d5-433a-95c0-2f3159df9d5e" testId="f64c57db-45db-14ee-9325-bfefefe3d12b" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000002H00000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;38&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002960" startTime="2024-04-03T16:58:35.3741981+02:00" endTime="2024-04-03T16:58:35.3744942+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c6f2ebb8-f4d5-433a-95c0-2f3159df9d5e">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000002H00000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000002H00...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 38&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(38) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf1e25cc-57d4-4bfb-8e59-02004658b143" testId="345259f3-73d0-4c53-0802-118d48837632" testName="RAIMFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009370" startTime="2024-04-03T16:58:35.0578541+02:00" endTime="2024-04-03T16:58:35.0587910+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf1e25cc-57d4-4bfb-8e59-02004658b143">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ffc4e66-ee3c-4849-a823-f1d92f02a5da" testId="21565b41-d5bc-3dc8-e055-ec60f64af315" testName="MultipleLinesWithBlanksInMiddle" computerName="SCODE-HF8MJR2" duration="00:00:00.0014100" startTime="2024-04-03T16:58:35.5363089+02:00" endTime="2024-04-03T16:58:35.5377183+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ffc4e66-ee3c-4849-a823-f1d92f02a5da">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="38138b50-6c0f-4be6-8e93-6e3c30d2d60a" testId="29a1ba45-19af-c014-98df-2265cd94af87" testName="FullMessage(&quot;44`Uu;AvJEF`g14&gt;V0DV@MQ00000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,&quot;311000365&quot;,&quot;2022&quot;,&quot;9&quot;,&quot;10&quot;,&quot;22&quot;,&quot;40&quot;,&quot;47&quot;,&quot;false&quot;,&quot;14.90464&quot;,&quot;35.99721&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0034220" startTime="2024-04-03T16:58:34.8282203+02:00" endTime="2024-04-03T16:58:34.8316415+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="38138b50-6c0f-4be6-8e93-6e3c30d2d60a">
      <Output>
        <StdOut>When I parse '44`Uu;AvJEF`g14&gt;V0DV@MQ00000' with padding 0 as a Base Station Report&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("44`Uu;AvJEF`g14&gt;V...", 0) (0,0s)&#xD;
Then NmeaAisBaseStationReportParser.Type is 4&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TypeIs(BaseStationReport) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Mmsi is 311000365&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_MmsiIs(311000365) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcYear is 2022&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcYearIs(2022) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMonth is 9&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMonthIs(9) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcDay is 10&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcDayIs(10) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcHour is 22&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcHourIs(22) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMinute is 40&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMinuteIs(40) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcSecond is 47&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcSecondIs(47) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionAccuracy is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Longitude10000thMins is 14.90464&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Longitude10000thMinsIs(14,90464) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Latitude10000thMins is 35.99721&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Latitude10000thMinsIs(35,99721) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionFixType is 1&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.SpareBits139 is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RaimFlag is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.CommunicationState is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="127d02b1-496d-43e4-8e7b-b43c77272d99" testId="5354a16e-0db0-9185-51a9-af438f7ce606" testName="AISOrigin(&quot;AIVDM&quot;,&quot;Vdm&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0016820" startTime="2024-04-03T16:58:35.5655313+02:00" endTime="2024-04-03T16:58:35.5672127+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="127d02b1-496d-43e4-8e7b-b43c77272d99">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'AIVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AIVDM") (0,0s)&#xD;
Then the DataOrigin is 'Vdm'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheDataOriginIs(Vdm) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8576ef8f-1428-4807-9bf5-11456a9d8cf6" testId="f6eadebc-e7fc-110f-9fe8-cefb20f3de83" testName="CourseOverGround(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;1330&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:35.0350355+02:00" endTime="2024-04-03T16:58:35.0353805+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8576ef8f-1428-4807-9bf5-11456a9d8cf6">
      <Output>
        <StdOut>When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 1330&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(1330) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e71f068b-5d1b-43c8-86b8-8762d41944a3" testId="5aa227ca-37b5-4886-a84c-180a7b435561" testName="VesselName(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;BOA ODIN&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004240" startTime="2024-04-03T16:58:35.2446843+02:00" endTime="2024-04-03T16:58:35.2451086+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e71f068b-5d1b-43c8-86b8-8762d41944a3">
      <Output>
        <StdOut>When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is BOA ODIN&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("BOA ODIN") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2a6ca098-01f6-4161-a8b8-c6e0ddab6a6f" testId="56538b32-e331-85ad-d5e4-58a1f6cdcc70" testName="Spare(&quot;C000000000000000000000000000000000000000000000000002&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003920" startTime="2024-04-03T16:58:35.1246608+02:00" endTime="2024-04-03T16:58:35.1250527+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2a6ca098-01f6-4161-a8b8-c6e0ddab6a6f">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000002' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c071b37f-dfc8-49b4-83e3-54268e4d19ff" testId="bccd3b6c-49a4-25a1-b2a8-c5f5f0a3b3e3" testName="RegionalReservedBits38_45(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0646793+02:00" endTime="2024-04-03T16:58:35.0650196+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c071b37f-dfc8-49b4-83e3-54268e4d19ff">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d6f92d09-44c2-4e8c-9719-e7b3b6790107" testId="5781079d-e8d6-99b5-8802-857764beb9cc" testName="FullMessage(&quot;;028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000&quot;,&quot;0&quot;,&quot;11&quot;,&quot;0&quot;,&quot;2241071&quot;,&quot;2003&quot;,&quot;1&quot;,&quot;20&quot;,&quot;17&quot;,&quot;37&quot;,&quot;8&quot;,&quot;false&quot;,&quot;3.215745&quot;,&quot;41.96259&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0137260" startTime="2024-04-03T16:58:34.8678000+02:00" endTime="2024-04-03T16:58:34.8815256+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d6f92d09-44c2-4e8c-9719-e7b3b6790107">
      <Output>
        <StdOut>When I parse ';028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Coordinated Universal Time and Date Response&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(";028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Type is 11&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TypeIs(UTCDateResponse) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Mmsi is 2241071&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_MmsiIs(2241071) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcYear is 2003&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcYearIs(2003) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMonth is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMonthIs(1) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcDay is 20&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcDayIs(20) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcHour is 17&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcHourIs(17) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMinute is 37&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMinuteIs(37) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcSecond is 8&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcSecondIs(8) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionAccuracy is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Longitude10000thMins is 3.215745&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Longitude10000thMinsIs(3,215745) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Latitude10000thMins is 41.96259&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Latitude10000thMinsIs(41,96259) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionFixType is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.SpareBits139 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RaimFlag is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.CommunicationState is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ba38fea0-5c51-417a-ac68-eacb5397a1c2" testId="9c78274a-3691-881b-aff2-405e074b0691" testName="ConvertAIS6_BitCharacterToASCII(&quot;43&quot;,&quot;'+'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002330" startTime="2024-04-03T16:58:35.3406593+02:00" endTime="2024-04-03T16:58:35.3408917+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ba38fea0-5c51-417a-ac68-eacb5397a1c2">
      <Output>
        <StdOut>When I convert the AIS character value 43 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(43) (0,0s)&#xD;
Then the converted ASCII value should be '+'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(+) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6db684f7-f998-4447-a1b0-6bb4cc828c11" testId="d9446d00-7f0a-dd64-da7a-072cac8ee7ce" testName="CourseOverGround(&quot;13mSjt7P001KOu6`6:3@0?wJ0&lt;03&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003470" startTime="2024-04-03T16:58:34.9556059+02:00" endTime="2024-04-03T16:58:34.9559530+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6db684f7-f998-4447-a1b0-6bb4cc828c11">
      <Output>
        <StdOut>When I parse '13mSjt7P001KOu6`6:3@0?wJ0&lt;03' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mSjt7P001KOu6`6...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="484e7f44-eb38-446e-97d0-65c550189497" testId="179e1831-a7d2-e5e9-dcbd-0496bdcf2399" testName="ETADay(&quot;53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880&quot;,&quot;2&quot;,&quot;9&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.2018011+02:00" endTime="2024-04-03T16:58:35.2021940+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="484e7f44-eb38-446e-97d0-65c550189497">
      <Output>
        <StdOut>When I parse '53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53QI:t02=oDi`@Q3B...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 9&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(9) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d8ade85b-cdc1-40e0-a04d-b5dbed02991f" testId="1b877b3a-3d9c-faa5-c4cb-8ebfe984d06d" testName="SingleCRLFBlankLineOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0005890" startTime="2024-04-03T16:58:35.5080262+02:00" endTime="2024-04-03T16:58:35.5086149+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d8ade85b-cdc1-40e0-a04d-b5dbed02991f">
      <Output>
        <StdOut>Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d6066db8-7d55-4595-b439-3b53c612eeee" testId="f08334ce-2b65-27b5-1327-876e515dd6dd" testName="AISVersion(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.1676709+02:00" endTime="2024-04-03T16:58:35.1680655+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d6066db8-7d55-4595-b439-3b53c612eeee">
      <Output>
        <StdOut>When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="01e5a170-83a3-488e-9290-a0b3c819b437" testId="20b804c5-cfe6-108b-e212-0a213d381892" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0009530" startTime="2024-04-03T16:58:35.2211428+02:00" endTime="2024-04-03T16:58:35.2220960+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="01e5a170-83a3-488e-9290-a0b3c819b437">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Type is 5&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_TypeIs(StaticAndVoyageRe...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a00b8d3f-7ad2-43f1-8ab1-0c7f5890ff16" testId="2a9f919c-1873-9a58-c5f8-ebc199729872" testName="BandFlag(&quot;B00000000000000000000000P000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004780" startTime="2024-04-03T16:58:35.0311460+02:00" endTime="2024-04-03T16:58:35.0316235+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a00b8d3f-7ad2-43f1-8ab1-0c7f5890ff16">
      <Output>
        <StdOut>When I parse 'B00000000000000000000000P000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanSwitchBands is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanSwitchBands(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e8b2fe02-3d0d-42d2-8ec3-79e82c104ce2" testId="40f46989-e37a-3c03-1afe-33c4839c1077" testName="PositionFixType(&quot;53mE09400000hoC3301&lt;4pAV222222200000000N0h:23t0Ht6CP@000000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2313191+02:00" endTime="2024-04-03T16:58:35.2317155+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e8b2fe02-3d0d-42d2-8ec3-79e82c104ce2">
      <Output>
        <StdOut>When I parse '53mE09400000hoC3301&lt;4pAV222222200000000N0h:23t0Ht6CP@000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mE09400000hoC33...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is 15&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(InternalGnss) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2e24acd6-5e67-40d7-8029-92a76368001a" testId="f1d467f8-6d39-c235-6f4b-fb9069b8d25d" testName="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000w00000000000000000000000000&quot;,&quot;2&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004030" startTime="2024-04-03T16:58:35.1842578+02:00" endTime="2024-04-03T16:58:35.1846611+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2e24acd6-5e67-40d7-8029-92a76368001a">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000w00000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 63&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cb848700-3c60-4fa0-8893-929760425bcf" testId="f76a010a-4805-72f7-f4eb-b89e217953f5" testName="MMSI(&quot;100000P000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003600" startTime="2024-04-03T16:58:34.9695883+02:00" endTime="2024-04-03T16:58:34.9699485+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb848700-3c60-4fa0-8893-929760425bcf">
      <Output>
        <StdOut>When I parse '100000P000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000P0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '2'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="359c31d8-5fa1-4b60-a453-b697a148133c" testId="e4d776fa-6f7b-7b9c-324e-3e0ee4e2cdcb" testName="Destination(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009970" startTime="2024-04-03T16:58:35.1729427+02:00" endTime="2024-04-03T16:58:35.1739398+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="359c31d8-5fa1-4b60-a453-b697a148133c">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="db7c9d92-4808-4cb9-85b3-182da8ca84e9" testId="559b8cfe-17a9-b61e-2a03-945e0b13c6e4" testName="RadioSlotTimeout(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;7&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:34.9928197+02:00" endTime="2024-04-03T16:58:34.9931552+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="db7c9d92-4808-4cb9-85b3-182da8ca84e9">
      <Output>
        <StdOut>When I parse '13P=N7M1@10Ph14SqI7pAW@j0L0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13P=N7M1@10Ph14Sq...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 7&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(7) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4da10786-56e0-4fde-b825-31abb104e776" testId="d0d3782c-7c68-e27f-d2c1-05150844dd0f" testName="ETAMinute(&quot;500000000000000000000000000000000000000000000000s0000000000000000000000&quot;,&quot;2&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2099335+02:00" endTime="2024-04-03T16:58:35.2103307+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4da10786-56e0-4fde-b825-31abb104e776">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000000s0000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 59&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fc41d67b-8a12-4fb0-bb64-43a259073867" testId="64e80ae0-8cb5-53e9-2cfc-4a5219839492" testName="RAIMFlag(&quot;B000000000000000000000004000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004760" startTime="2024-04-03T16:58:35.0588007+02:00" endTime="2024-04-03T16:58:35.0592760+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fc41d67b-8a12-4fb0-bb64-43a259073867">
      <Output>
        <StdOut>When I parse 'B000000000000000000000004000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1ec3a665-9196-4711-88a3-7041a699a6f5" testId="ca45b540-c90e-13bf-fdde-ce3e2fc84842" testName="SingleBit(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3610412+02:00" endTime="2024-04-03T16:58:35.3613407+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1ec3a665-9196-4711-88a3-7041a699a6f5">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8a16ed97-7597-4712-8293-186a5316bfd1" testId="27ef6eeb-32ec-fdc3-c993-9ef868f36954" testName="PartBDimensionToBow(&quot;H000004000000000000000wp0000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003520" startTime="2024-04-03T16:58:35.2720189+02:00" endTime="2024-04-03T16:58:35.2723704+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8a16ed97-7597-4712-8293-186a5316bfd1">
      <Output>
        <StdOut>When I parse 'H000004000000000000000wp0000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 511&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="23dad974-3c00-4162-b6de-d04182fc6838" testId="43713c6c-867b-5b9b-4abc-1502165a3794" testName="AssignedFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018800" startTime="2024-04-03T16:58:35.0272698+02:00" endTime="2024-04-03T16:58:35.0291500+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="23dad974-3c00-4162-b6de-d04182fc6838">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsAssigned is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsAssigned(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e371ce6c-4e18-4e0b-ad86-124f4c5d4300" testId="bc63faa7-3894-7408-c2b8-379a48f22b24" testName="Two_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedAdjacently" computerName="SCODE-HF8MJR2" duration="00:00:00.0009000" startTime="2024-04-03T16:58:35.4237774+02:00" endTime="2024-04-03T16:58:35.4246773+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e371ce6c-4e18-4e0b-ad86-124f4c5d4300">
      <Output>
        <StdOut>When the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
And the line to message adapter receives '\s:99*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99*55\!AIVDM,2...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="95f3859b-5d4e-488f-b1e4-327e12ccd02a" testId="be0539fd-543f-f18c-4ca1-623cf429c1ad" testName="RateOfTurn(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003350" startTime="2024-04-03T16:58:35.0062724+02:00" endTime="2024-04-03T16:58:35.0066070+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="95f3859b-5d4e-488f-b1e4-327e12ccd02a">
      <Output>
        <StdOut>When I parse '13P=N7M1@10Ph14SqI7pAW@j0L0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13P=N7M1@10Ph14Sq...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4953a78a-ba0f-4bd6-b5cb-64bc3756ce4a" testId="964e711f-86cc-8ecb-221c-9a27cc9b9118" testName="SingleLFBlankLineOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0005610" startTime="2024-04-03T16:58:35.5419627+02:00" endTime="2024-04-03T16:58:35.5425239+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4953a78a-ba0f-4bd6-b5cb-64bc3756ce4a">
      <Output>
        <StdOut>Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b07889d6-c4c8-4c01-b3b5-02574b8550d8" testId="a8aaeb99-2d65-884b-8c41-158bc8a9e3e4" testName="ETAHour(&quot;50000000000000000000000000000000000000000000000@00000000000000000000000&quot;,&quot;2&quot;,&quot;16&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004590" startTime="2024-04-03T16:58:35.2046522+02:00" endTime="2024-04-03T16:58:35.2051116+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b07889d6-c4c8-4c01-b3b5-02574b8550d8">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000@00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 16&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(16) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bb8313f6-f5cb-4e53-9202-070b729d9f52" testId="1e47d8a9-e341-71f1-d8ef-63f2889f1647" testName="FullMessage(&quot;;4`Uu;AvJEF`g14&gt;V0DV@MQ00000&quot;,&quot;0&quot;,&quot;11&quot;,&quot;0&quot;,&quot;311000365&quot;,&quot;2022&quot;,&quot;9&quot;,&quot;10&quot;,&quot;22&quot;,&quot;40&quot;,&quot;47&quot;,&quot;false&quot;,&quot;14.90464&quot;,&quot;35.99721&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0028950" startTime="2024-04-03T16:58:34.8815500+02:00" endTime="2024-04-03T16:58:34.8844453+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bb8313f6-f5cb-4e53-9202-070b729d9f52">
      <Output>
        <StdOut>When I parse ';4`Uu;AvJEF`g14&gt;V0DV@MQ00000' with padding 0 as a Coordinated Universal Time and Date Response&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(";4`Uu;AvJEF`g14&gt;V...", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Type is 11&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TypeIs(UTCDateResponse) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Mmsi is 311000365&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_MmsiIs(311000365) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcYear is 2022&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcYearIs(2022) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMonth is 9&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMonthIs(9) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcDay is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcDayIs(10) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcHour is 22&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcHourIs(22) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMinute is 40&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMinuteIs(40) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcSecond is 47&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcSecondIs(47) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionAccuracy is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Longitude10000thMins is 14.90464&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Longitude10000thMinsIs(14,90464) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Latitude10000thMins is 35.99721&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Latitude10000thMinsIs(35,99721) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionFixType is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.SpareBits139 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RaimFlag is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.CommunicationState is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cff33f4e-9183-49f2-9c2a-fb179ed6d4d2" testId="1ad89db8-b4dc-3de3-051b-44471d08e1fe" testName="FullMessage(&quot;:5Tjij10WiuP&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;374125000&quot;,&quot;0&quot;,&quot;271042520&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009930" startTime="2024-04-03T16:58:34.8625807+02:00" endTime="2024-04-03T16:58:34.8635739+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cff33f4e-9183-49f2-9c2a-fb179ed6d4d2">
      <Output>
        <StdOut>When I parse ':5Tjij10WiuP' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":5Tjij10WiuP", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 374125000&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(374125000) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits38 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.DestinationMmsi is 271042520&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_DestinationMmsiIs(271042520) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits70 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits70Is(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="efaf47be-8f42-4609-8756-1878a1dd2459" testId="124ac23c-d5fa-563e-a206-5b06f4012fff" testName="Two_FragmentMessageFragmentsReceivedAdjacently" computerName="SCODE-HF8MJR2" duration="00:00:00.0008540" startTime="2024-04-03T16:58:35.4174107+02:00" endTime="2024-04-03T16:58:35.4182645+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="efaf47be-8f42-4609-8756-1878a1dd2459">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0620ecda-7c65-418c-872a-e90883ecda87" testId="b8bf3de9-96f7-d9d1-6626-c47e7f61f078" testName="Spare(&quot;5=7LHAT000000000000L58A&lt;uT6085B3@000000U0@21140Ht000000000000000000000&lt;&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2413973+02:00" endTime="2024-04-03T16:58:35.2417919+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0620ecda-7c65-418c-872a-e90883ecda87">
      <Output>
        <StdOut>When I parse '5=7LHAT000000000000L58A&lt;uT6085B3@000000U0@21140Ht000000000000000000000&lt;' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5=7LHAT0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="513fb497-27bb-4f34-88c7-929422563b43" testId="8641f56f-c269-6ebd-e4c1-cbc4ae3817a4" testName="PartARepeatIndicator(&quot;H@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:35.2624122+02:00" endTime="2024-04-03T16:58:35.2627621+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="513fb497-27bb-4f34-88c7-929422563b43">
      <Output>
        <StdOut>When I parse 'H@00000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H@000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d6d4bf9a-45e3-4543-a1ce-a0d630a37c42" testId="b48b6dc3-bd8f-ac03-f4f6-aec7b3537837" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004700" startTime="2024-04-03T16:58:34.8415894+02:00" endTime="2024-04-03T16:58:34.8420594+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d6d4bf9a-45e3-4543-a1ce-a0d630a37c42">
      <Output>
        <StdOut>When I parse '8:U&gt;M;P0G@:?&gt;G1?6600' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("8:U&gt;M;P0G@:?&gt;G1?6600", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e6344dbd-35cd-4f4a-af4a-7f1e16346200" testId="c790654b-a31b-6be1-5187-c398d94e7bc3" testName="ConvertAIS6_BitCharacterToASCII(&quot;0&quot;,&quot;'@'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0041290" startTime="2024-04-03T16:58:35.3235824+02:00" endTime="2024-04-03T16:58:35.3277111+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e6344dbd-35cd-4f4a-af4a-7f1e16346200">
      <Output>
        <StdOut>When I convert the AIS character value 0 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(0) (0,0s)&#xD;
Then the converted ASCII value should be '@'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(@) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7048e0b-ba06-42b5-8ad6-3b8ea7e035ed" testId="187b73c3-40df-76a9-05f8-ce2737697880" testName="PartBDimensionToPort(&quot;H000004000000000000000000100&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004750" startTime="2024-04-03T16:58:35.2814395+02:00" endTime="2024-04-03T16:58:35.2819144+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7048e0b-ba06-42b5-8ad6-3b8ea7e035ed">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000100' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1508c13a-b72a-41d9-b7fb-7b2abbc4516e" testId="fe06932c-d038-89a2-641b-72709b0a0f65" testName="RadioSyncState(&quot;1000000000000000000000001000&quot;,&quot;0&quot;,&quot;ToBaseStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005780" startTime="2024-04-03T16:58:34.9970388+02:00" endTime="2024-04-03T16:58:34.9976164+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1508c13a-b72a-41d9-b7fb-7b2abbc4516e">
      <Output>
        <StdOut>When I parse '1000000000000000000000001000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is ToBaseStation&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(ToBaseStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a50fc8c9-e26f-4fa2-a7f4-88855a8abc9d" testId="776f729c-c702-a912-a873-394f7d3a19e6" testName="SpareBitsAt145(&quot;1000000000000000000000008000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0115353+02:00" endTime="2024-04-03T16:58:35.0118778+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a50fc8c9-e26f-4fa2-a7f4-88855a8abc9d">
      <Output>
        <StdOut>When I parse '1000000000000000000000008000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c33eb7bf-5bff-49ac-a3a0-a7f8e46bae73" testId="89492880-8875-cc9a-2241-94825e82827f" testName="FullMessage(&quot;Kk=&gt;UB03fbh:R`7d&quot;,&quot;0&quot;,&quot;27&quot;,&quot;3&quot;,&quot;215197000&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;61099&quot;,&quot;1349&quot;,&quot;16&quot;,&quot;123&quot;,&quot;false&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0019310" startTime="2024-04-03T16:58:34.9494821+02:00" endTime="2024-04-03T16:58:34.9514129+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c33eb7bf-5bff-49ac-a3a0-a7f8e46bae73">
      <Output>
        <StdOut>When I parse 'Kk=&gt;UB03fbh:R`7d' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("Kk=&gt;UB03fbh:R`7d", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RepeatIndicator is 3&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RepeatIndicatorIs(3) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Mmsi is 215197000&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_MmsiIs(215197000) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionAccuracy is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RaimFlag is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.NavigationStatus is 0&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Longitude10thMins is 61099&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Longitude10thMinsIs(61099) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Latitude10thMins is 1349&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Latitude10thMinsIs(1349) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpeedOverGround is 16&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpeedOverGroundIs(16) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.CourseOverGround is 123&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_CourseOverGroundIs(123) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionLatency is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionLatencyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpareBit94 is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpareBit94Is(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d9319c8-71fe-4015-bb16-8e46bbb49f57" testId="a724d7b0-9096-c4bb-ae3b-c3c8e82dc0c4" testName="PartBDimensionToBow(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;16&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:35.2723837+02:00" endTime="2024-04-03T16:58:35.2727290+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d9319c8-71fe-4015-bb16-8e46bbb49f57">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 16&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(16) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="56595235-6836-4f80-9487-94d75a256190" testId="0820d0a4-66da-e2ae-f1de-8724421b2d23" testName="NavigationStatus(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;UnderwayUsingEngine&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:34.9795763+02:00" endTime="2024-04-03T16:58:34.9799188+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56595235-6836-4f80-9487-94d75a256190">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderwayUsingEngine&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e58280ab-b397-482d-afc1-4c0f65b3910e" testId="26bf8d9b-51e6-3bb9-4078-ba15b0a59d82" testName="CallSign(&quot;50000000000100000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005300" startTime="2024-04-03T16:58:35.1698922+02:00" endTime="2024-04-03T16:58:35.1704223+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e58280ab-b397-482d-afc1-4c0f65b3910e">
      <Output>
        <StdOut>When I parse '50000000000100000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000100000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is P@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("P@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e4f596cc-a42d-4b63-b244-3c821d4776e7" testId="126f94db-5658-524c-0d78-06f3fcff65cc" testName="PartBVendorIDITU_R1371_4(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008810" startTime="2024-04-03T16:58:35.3153758+02:00" endTime="2024-04-03T16:58:35.3162562+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e4f596cc-a42d-4b63-b244-3c821d4776e7">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is @@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="24d68613-966a-4f3d-bb6e-dddf1bb83d27" testId="feb0a125-3ead-1893-42b8-d48e39012898" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0005550" startTime="2024-04-03T16:58:34.9220385+02:00" endTime="2024-04-03T16:58:34.9225935+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="24d68613-966a-4f3d-bb6e-dddf1bb83d27">
      <Output>
        <StdOut>When I parse 'A028nBCt@hbs02Gvd0H@2gop2ABb' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028nBCt@hbs02Gvd...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="185662f8-8c6a-4ae8-9954-5dbf2ff61bf9" testId="8f636fe6-13e6-3d3c-268f-3c2189da45c5" testName="ETAMonth(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2155503+02:00" endTime="2024-04-03T16:58:35.2159473+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="185662f8-8c6a-4ae8-9954-5dbf2ff61bf9">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="769a7768-f2f4-41f3-928e-6925281d2466" testId="9657a21e-47cc-a3fb-d50e-f6ba809da636" testName="DimensionToPort(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009460" startTime="2024-04-03T16:58:35.1798613+02:00" endTime="2024-04-03T16:58:35.1808066+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="769a7768-f2f4-41f3-928e-6925281d2466">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c5d1313d-3331-4f39-a119-319241a40cb5" testId="7848174c-191f-1c05-982b-e4eaac58942d" testName="MMSI(&quot;K00000P00000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003660" startTime="2024-04-03T16:58:34.8651699+02:00" endTime="2024-04-03T16:58:34.8655360+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c5d1313d-3331-4f39-a119-319241a40cb5">
      <Output>
        <StdOut>When I parse 'K00000P00000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("K00000P00000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 2&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e8474fd5-53e9-4862-ad54-4db96e22f5da" testId="ce2d554f-d77e-bb59-fa53-00f4d20ce384" testName="SpeedOverGround(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009390" startTime="2024-04-03T16:58:35.1266780+02:00" endTime="2024-04-03T16:58:35.1276170+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e8474fd5-53e9-4862-ad54-4db96e22f5da">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_SpeedOverGroundTenthsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0a953a0-3d7c-4cea-8e2c-dc5d7d26abeb" testId="2014c4b9-731c-91b6-1b1f-975d2a93aa67" testName="MMSI(&quot;24c`1`001kPEGSLR98IP00462D0s&quot;,&quot;0&quot;,&quot;314180000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003540" startTime="2024-04-03T16:58:34.9706945+02:00" endTime="2024-04-03T16:58:34.9710482+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0a953a0-3d7c-4cea-8e2c-dc5d7d26abeb">
      <Output>
        <StdOut>When I parse '24c`1`001kPEGSLR98IP00462D0s' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("24c`1`001kPEGSLR9...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '314180000'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(314180000) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4ea5db74-ebe7-4568-8744-82beb797ee5e" testId="c00ffb1e-9663-1f38-bf7d-f788968fa0cd" testName="PeekMessageTypeWithoutDecodingInFull(&quot;24c`1`001pPEGSLR:=df3@4620SQ&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002400" startTime="2024-04-03T16:58:35.5619153+02:00" endTime="2024-04-03T16:58:35.5621548+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4ea5db74-ebe7-4568-8744-82beb797ee5e">
      <Output>
        <StdOut>When I peek at the payload '24c`1`001pPEGSLR:=df3@4620SQ' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("24c`1`001pPEGSLR:...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c3d43685-b0f8-4caa-92b4-a188465154a8" testId="3a86bebc-66d9-ea34-5337-4cc4983c30fa" testName="FragmentedMessages(&quot;3&quot;,&quot;1&quot;,&quot;0&quot;,&quot;3451&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005610" startTime="2024-04-03T16:58:35.5750527+02:00" endTime="2024-04-03T16:58:35.5756136+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c3d43685-b0f8-4caa-92b4-a188465154a8">
      <Output>
        <StdOut>When I parse a message fragment part 1 of 3 with message id 0 and sentence group id 3451&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(1, 3, "0", "3451") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
And the SentenceGroupId is '3451'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(3451) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="72624082-c84a-4bb8-9ef4-4c30b2fd25ac" testId="94a9edf7-4b7f-a86c-3ba3-89b29ab19da6" testName="IMONumber(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0024510" startTime="2024-04-03T16:58:35.2167850+02:00" endTime="2024-04-03T16:58:35.2192357+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72624082-c84a-4bb8-9ef4-4c30b2fd25ac">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="39553b3f-f51c-495f-be51-01684b5dcda5" testId="e2fbd46a-7239-ec2e-df6d-9594ecb8ed60" testName="DTEReady(&quot;50000000000000000000000000000000000000000000000000000000000000000000008&quot;,&quot;2&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005330" startTime="2024-04-03T16:58:35.1955040+02:00" endTime="2024-04-03T16:58:35.1960372+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="39553b3f-f51c-495f-be51-01684b5dcda5">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000008' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is true&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e4db1530-42d8-45e6-9e95-7e0cebeb9cd1" testId="93ea75b0-5e22-15df-4d35-7f3f8438b9f0" testName="RepeatIndicator(&quot;1@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004660" startTime="2024-04-03T16:58:35.0075433+02:00" endTime="2024-04-03T16:58:35.0080090+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e4db1530-42d8-45e6-9e95-7e0cebeb9cd1">
      <Output>
        <StdOut>When I parse '1@00000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1@000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="65f687d1-bb14-4ccd-ace6-e585535f4cd8" testId="4bcc0343-270f-e408-5ece-373da2debc90" testName="ETAHour(&quot;50000000000000000000000000000000000000000000000G00000000000000000000000&quot;,&quot;2&quot;,&quot;23&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004010" startTime="2024-04-03T16:58:35.2051254+02:00" endTime="2024-04-03T16:58:35.2055264+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="65f687d1-bb14-4ccd-ace6-e585535f4cd8">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000G00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 23&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(23) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="438bd46c-323a-4fea-ab2d-1cffe35f0726" testId="d5c4ef54-0a88-5e17-9876-800c99f55076" testName="DimensionToStarboard(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;18&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1850849+02:00" endTime="2024-04-03T16:58:35.1854831+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="438bd46c-323a-4fea-ab2d-1cffe35f0726">
      <Output>
        <StdOut>When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 18&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(18) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c9e9e5e4-d351-4bad-b82c-25b54a5254dc" testId="57fecdc4-bb9b-44ac-023e-bdf9637ee1ef" testName="RAIMFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.0596516+02:00" endTime="2024-04-03T16:58:35.0599950+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c9e9e5e4-d351-4bad-b82c-25b54a5254dc">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0301e5b0-16b3-4289-ba6d-1dd30ae21379" testId="59b17cf1-cd86-d331-86e5-1f1346149eb2" testName="RaimFlag(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.0027697+02:00" endTime="2024-04-03T16:58:35.0031110+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0301e5b0-16b3-4289-ba6d-1dd30ae21379">
      <Output>
        <StdOut>When I parse '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f17e9ed8-1a74-4a89-a730-bf8b71246d4c" testId="b7b34dea-ee3c-cc24-16c4-1e5aaa5ef52c" testName="ManoeuvreIndicator(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011220" startTime="2024-04-03T16:58:34.9628845+02:00" endTime="2024-04-03T16:58:34.9640066+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f17e9ed8-1a74-4a89-a730-bf8b71246d4c">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NotAvailable&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NotAvailable) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a60e7ef8-5ff6-4c30-86c3-3414e8e721f0" testId="e165a77f-b10d-6a72-6e8c-173f26dd49f6" testName="PositionFixType(&quot;C000000000000000000000000000000000000000000000000080&quot;,&quot;0&quot;,&quot;LoranC&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1077563+02:00" endTime="2024-04-03T16:58:35.1081537+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a60e7ef8-5ff6-4c30-86c3-3414e8e721f0">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000080' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is LoranC&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(LoranC) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3e9687c0-8fb2-4a0f-9712-fae5e9339d7e" testId="678d54f8-c3cb-9b7e-7d78-a6a71d446737" testName="RepeatIndicator(&quot;1h00000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0083787+02:00" endTime="2024-04-03T16:58:35.0087216+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3e9687c0-8fb2-4a0f-9712-fae5e9339d7e">
      <Output>
        <StdOut>When I parse '1h00000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1h000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b5e68681-f3d9-4173-b3c0-80f65ea626f1" testId="32ab807a-7dc2-db46-0ce6-d83e23eff65d" testName="Draught(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009460" startTime="2024-04-03T16:58:35.1882636+02:00" endTime="2024-04-03T16:58:35.1892098+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5e68681-f3d9-4173-b3c0-80f65ea626f1">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2663edcb-c5ca-475a-a578-d96f89b0db8f" testId="e75b09a4-f690-0bad-26f6-bb520b4ba150" testName="PartBDimensionToStern(&quot;H00000400000000000000007w000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:35.2868598+02:00" endTime="2024-04-03T16:58:35.2872087+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2663edcb-c5ca-475a-a578-d96f89b0db8f">
      <Output>
        <StdOut>When I parse 'H00000400000000000000007w000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 511&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ab52d08e-d0e8-4e08-bc30-e08a2ca1d6a4" testId="c08b5769-35c4-b48e-13b3-ec86ac342aaf" testName="MessagePart(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005640" startTime="2024-04-03T16:58:35.2492083+02:00" endTime="2024-04-03T16:58:35.2497721+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ab52d08e-d0e8-4e08-bc30-e08a2ca1d6a4">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H000000000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="85eb44ba-56dc-47d6-aa9a-e66f7bb35fe9" testId="c8a693b7-91ac-3ea8-141e-42915e6cadb6" testName="PositionFixType(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.2309081+02:00" endTime="2024-04-03T16:58:35.2313100+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="85eb44ba-56dc-47d6-aa9a-e66f7bb35fe9">
      <Output>
        <StdOut>When I parse '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is CombinedGpsGlonass&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(CombinedGpsGlonass) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ca49d747-07d2-4caa-8a47-36af1e896d26" testId="5816061d-d874-23aa-0a6b-658e62ffb9dd" testName="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009650" startTime="2024-04-03T16:58:35.1827345+02:00" endTime="2024-04-03T16:58:35.1836995+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca49d747-07d2-4caa-8a47-36af1e896d26">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3f7aa165-e86a-4eaa-82a9-4c136c290c40" testId="072ec24f-e6cc-df82-a1ed-b84eca07b73a" testName="RadioSyncState(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;UtcIndirect&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003690" startTime="2024-04-03T16:58:34.9983714+02:00" endTime="2024-04-03T16:58:34.9987403+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3f7aa165-e86a-4eaa-82a9-4c136c290c40">
      <Output>
        <StdOut>When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcIndirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcIndirect) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e577f479-2af6-47e9-b20f-b62778c096a5" testId="9882346a-b984-690e-ba88-56e115b2c8e0" testName="RadioSyncState(&quot;13oaO&lt;5000PG1VhS?rC3ajf&gt;1000&quot;,&quot;0&quot;,&quot;ToBaseStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018090" startTime="2024-04-03T16:58:34.9987489+02:00" endTime="2024-04-03T16:58:35.0005581+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e577f479-2af6-47e9-b20f-b62778c096a5">
      <Output>
        <StdOut>When I parse '13oaO&lt;5000PG1VhS?rC3ajf&gt;1000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oaO&lt;5000PG1VhS?...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is ToBaseStation&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(ToBaseStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ba5646ff-7887-4a8f-9746-ddf60dc3eaa4" testId="05c1327a-1a2f-a0cb-d372-2f5425d30d5f" testName="ETAHour(&quot;50000000000000000000000000000000000000000000000H00000000000000000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.2055392+02:00" endTime="2024-04-03T16:58:35.2059320+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ba5646ff-7887-4a8f-9746-ddf60dc3eaa4">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000H00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 24&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(24) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5e7bad51-b234-4949-bd03-631bd107a8f5" testId="c9b212d6-7ea6-5806-b2f3-6655bc5c22fd" testName="FullMessage(&quot;=8156b@iuus2&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;538003113&quot;,&quot;0&quot;,&quot;209582000&quot;,&quot;2&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0497150" startTime="2024-04-03T16:58:34.6882706+02:00" endTime="2024-04-03T16:58:34.7379056+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5e7bad51-b234-4949-bd03-631bd107a8f5">
      <Output>
        <StdOut>When I parse '=8156b@iuus2' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=8156b@iuus2", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.RepeatIndicator is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.Mmsi is 538003113&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_MmsiIs(538003113) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SpareBits38 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi1 is 209582000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi1Is(209582000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi1 is 2&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi1Is(2) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi2 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMms21Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi2 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi2Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi4Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi4Is(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e35ac176-69bc-4c20-9e89-378774e62ce1" testId="26477b6e-5439-5e66-f49e-f495e0563c09" testName="Padding" computerName="SCODE-HF8MJR2" duration="00:00:00.0009480" startTime="2024-04-03T16:58:35.5815960+02:00" endTime="2024-04-03T16:58:35.5825435+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e35ac176-69bc-4c20-9e89-378774e62ce1">
      <Output>
        <StdOut>When I parse a message with padding of 3&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPaddingOf(3) (0,0s)&#xD;
Then the padding is 3&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenThePaddingIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b140f607-9eec-479d-af4b-59d544c03d64" testId="5dadd8e8-7883-f461-61b9-6b9c366256f7" testName="RepeatIndicator(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.0087303+02:00" endTime="2024-04-03T16:58:35.0090743+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b140f607-9eec-479d-af4b-59d544c03d64">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b892d1c5-8b69-42fe-9b09-8489193bfae0" testId="45c455f8-b14e-dd94-570f-270cbc20636f" testName="PeekMessageTypeWithoutDecodingInFull(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005520" startTime="2024-04-03T16:58:35.5610862+02:00" endTime="2024-04-03T16:58:35.5616379+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b892d1c5-8b69-42fe-9b09-8489193bfae0">
      <Output>
        <StdOut>When I peek at the payload '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 1&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a25a3099-f8ff-42d2-8970-d9da1a5abd88" testId="647bd5c8-589d-99b8-475e-41e2fac8d593" testName="Draught(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004010" startTime="2024-04-03T16:58:35.1932672+02:00" endTime="2024-04-03T16:58:35.1936677+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a25a3099-f8ff-42d2-8970-d9da1a5abd88">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5845e16a-99ca-4290-afcb-f8c9745cc420" testId="67fc7f9e-9d65-77e1-1624-abbde7245def" testName="NavigationStatus(&quot;100000:000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForWig&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:34.9774306+02:00" endTime="2024-04-03T16:58:34.9777806+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5845e16a-99ca-4290-afcb-f8c9745cc420">
      <Output>
        <StdOut>When I parse '100000:000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000:0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForWig&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2580d793-adfe-439e-8a5a-b5de9f968b47" testId="b3ed4072-c962-5dfa-d39f-11e0681c06a1" testName="TimeStamp(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;44&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:35.0208682+02:00" endTime="2024-04-03T16:58:35.0212075+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2580d793-adfe-439e-8a5a-b5de9f968b47">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 44&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(44) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bc1f1eb8-8a4f-473f-9267-13662e0fc821" testId="805e8292-98ae-b04a-4b05-67ca68dc269a" testName="SpeedOverGround(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;23&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0711636+02:00" endTime="2024-04-03T16:58:35.0715069+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc1f1eb8-8a4f-473f-9267-13662e0fc821">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 23&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(23) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="767be603-4fca-44f7-a9c2-ff8a1d8edb4c" testId="9154bd0b-cdb4-1ae4-e831-66303f378d25" testName="ConvertAIS6_BitCharacterToASCII(&quot;42&quot;,&quot;'*'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0016200" startTime="2024-04-03T16:58:35.3390304+02:00" endTime="2024-04-03T16:58:35.3406500+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="767be603-4fca-44f7-a9c2-ff8a1d8edb4c">
      <Output>
        <StdOut>When I convert the AIS character value 42 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(42) (0,0s)&#xD;
Then the converted ASCII value should be '*'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(*) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ba3c90cb-6b25-4d23-ba81-b758e012267a" testId="20603a81-31b0-498c-6673-028a9e86a79f" testName="FullMessage(&quot;@02=VgPoD@C43h00&quot;,&quot;0&quot;,&quot;16&quot;,&quot;0&quot;,&quot;2320062&quot;,&quot;0&quot;,&quot;232014129&quot;,&quot;60&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0072030" startTime="2024-04-03T16:58:34.8017009+02:00" endTime="2024-04-03T16:58:34.8089038+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ba3c90cb-6b25-4d23-ba81-b758e012267a">
      <Output>
        <StdOut>When I parse '@02=VgPoD@C43h00' with padding 0 as a Assigned mode command&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.WhenIParseWithNmeaAisAssignedModeCommandParser("@02=VgPoD@C43h00", 0) (0,0s)&#xD;
Then NmeaAisAssignedModeCommandParser.Type is 16&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_TypeIs(AssignmentModeCom...) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.RepeatIndicator is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.Mmsi is 2320062&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_MmsiIs(2320062) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBits38 is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiA is 232014129&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiAIs(232014129) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetA is 60&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetAIs(60) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementA is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementAIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiB is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiBIs(null) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetB is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetBIs(null) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementB is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementBIs(null) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBitsAtEndAIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0ce61fe-b399-4a9c-b381-9f679aa0b8f3" testId="df0ac554-d270-05ed-4643-2acc7af7ab4c" testName="FullMessage(&quot;Kp15Li@1D=MeT5T@&quot;,&quot;0&quot;,&quot;27&quot;,&quot;3&quot;,&quot;538008773&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;21557&quot;,&quot;-18744&quot;,&quot;11&quot;,&quot;68&quot;,&quot;false&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0022740" startTime="2024-04-03T16:58:34.9471944+02:00" endTime="2024-04-03T16:58:34.9494681+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0ce61fe-b399-4a9c-b381-9f679aa0b8f3">
      <Output>
        <StdOut>When I parse 'Kp15Li@1D=MeT5T@' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("Kp15Li@1D=MeT5T@", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RepeatIndicator is 3&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RepeatIndicatorIs(3) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Mmsi is 538008773&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_MmsiIs(538008773) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionAccuracy is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RaimFlag is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.NavigationStatus is 0&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Longitude10thMins is 21557&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Longitude10thMinsIs(21557) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Latitude10thMins is -18744&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Latitude10thMinsIs(-18744) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpeedOverGround is 11&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpeedOverGroundIs(11) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.CourseOverGround is 68&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_CourseOverGroundIs(68) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionLatency is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionLatencyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpareBit94 is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpareBit94Is(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a0c0b274-25d6-4b48-92ef-5770bf0f6a0b" testId="30718773-f372-66d2-06db-c3c03587c845" testName="SpeedOverGround(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003470" startTime="2024-04-03T16:58:35.0708043+02:00" endTime="2024-04-03T16:58:35.0711513+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a0c0b274-25d6-4b48-92ef-5770bf0f6a0b">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bb9e74b3-9ed9-4d88-baa9-0ab9d906e8b0" testId="93ab3a69-f633-08ba-95eb-6ad667187fb0" testName="PartBDimensionToStarboard(&quot;H0000040000000000000000000w0&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:35.2843923+02:00" endTime="2024-04-03T16:58:35.2847408+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bb9e74b3-9ed9-4d88-baa9-0ab9d906e8b0">
      <Output>
        <StdOut>When I parse 'H0000040000000000000000000w0' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 63&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d5a77beb-e689-4c28-93ab-943976011908" testId="597b879c-dd99-f679-d4c7-0bc4c1461ffb" testName="RadioSlotTimeout(&quot;13@njcg000PeVI&gt;Pu9Hnul9D0D1M&quot;,&quot;0&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:34.9921237+02:00" endTime="2024-04-03T16:58:34.9924600+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d5a77beb-e689-4c28-93ab-943976011908">
      <Output>
        <StdOut>When I parse '13@njcg000PeVI&gt;Pu9Hnul9D0D1M' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@njcg000PeVI&gt;Pu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ebf27c57-478e-4bb4-85a9-756b0e92c2ce" testId="4d0b3289-d1f5-af6b-a4da-64225c845580" testName="TrueHeading(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.0265357+02:00" endTime="2024-04-03T16:58:35.0268772+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ebf27c57-478e-4bb4-85a9-756b0e92c2ce">
      <Output>
        <StdOut>When I parse '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="23ffd304-1d25-4eda-98e7-bf4789fe99e5" testId="361265ac-04d1-3d5e-b926-84ad5d23a317" testName="PartARepeatIndicator(&quot;H@0000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003579" startTime="2024-04-03T16:58:35.2620447+02:00" endTime="2024-04-03T16:58:35.2624031+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="23ffd304-1d25-4eda-98e7-bf4789fe99e5">
      <Output>
        <StdOut>When I parse 'H@0000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H@000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6312526d-4f83-4c00-bce4-99da7061bf25" testId="7b37bf3b-774f-446b-8274-f853f2e9f3e4" testName="FullMessage(&quot;=5@jof1HMrCPF7NTph&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;353155000&quot;,&quot;0&quot;,&quot;371059000&quot;,&quot;0&quot;,&quot;371059000&quot;,&quot;3&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0032550" startTime="2024-04-03T16:58:34.7391536+02:00" endTime="2024-04-03T16:58:34.7424091+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6312526d-4f83-4c00-bce4-99da7061bf25">
      <Output>
        <StdOut>When I parse '=5@jof1HMrCPF7NTph' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=5@jof1HMrCPF7NTph", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.RepeatIndicator is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.Mmsi is 353155000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_MmsiIs(353155000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SpareBits38 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi1 is 371059000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi1Is(371059000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi1 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi1Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi2 is 371059000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMms21Is(371059000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi2 is 3&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi2Is(3) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi4Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi4Is(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a7bea8a-eb17-4b9a-a5f0-2f3e1054a62e" testId="b99c2ecb-0e7d-5306-84e6-fcf5e3052987" testName="ConvertAIS6_BitCharacterToASCII(&quot;10&quot;,&quot;'J'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002230" startTime="2024-04-03T16:58:35.3303811+02:00" endTime="2024-04-03T16:58:35.3306039+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a7bea8a-eb17-4b9a-a5f0-2f3e1054a62e">
      <Output>
        <StdOut>When I convert the AIS character value 10 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(10) (0,0s)&#xD;
Then the converted ASCII value should be 'J'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(J) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c13531a3-0116-4dd3-8dc2-bfe6a2eac580" testId="78ca5cfe-7f25-a252-6d84-279a9fe58296" testName="Destination(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004200" startTime="2024-04-03T16:58:35.1749545+02:00" endTime="2024-04-03T16:58:35.1753745+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c13531a3-0116-4dd3-8dc2-bfe6a2eac580">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d8bbaafb-7326-4d85-b4b4-dd7b3bfe9d54" testId="a85a301a-5531-1628-0928-9e745146f8a3" testName="MMSI(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;257034600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.2244483+02:00" endTime="2024-04-03T16:58:35.2248439+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d8bbaafb-7326-4d85-b4b4-dd7b3bfe9d54">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 257034600&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(257034600) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3f24115f-6c51-48a2-bc60-39a2d5edae6f" testId="ae00ee5d-0aee-cfee-b677-fef41fe9ddec" testName="FullMessage(&quot;6&gt;oNma0JOJtL078NuS1`s6mQ0vCv048@0002P1401`0000000000&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;997701028&quot;,&quot;0&quot;,&quot;111111111&quot;,&quot;false&quot;,&quot;false&quot;,&quot;1&quot;,&quot;50&quot;,&quot;4&quot;,&quot;8NuS1`s6mQ0vCv048@0002P1401`0000000000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0053180" startTime="2024-04-03T16:58:34.7574966+02:00" endTime="2024-04-03T16:58:34.7628148+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3f24115f-6c51-48a2-bc60-39a2d5edae6f">
      <Output>
        <StdOut>When I parse '6&gt;oNma0JOJtL078NuS1`s6mQ0vCv048@0002P1401`0000000000' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;oNma0JOJtL078Nu...", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Mmsi is 997701028&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_MmsiIs(997701028) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DestinationMmsi is 111111111&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DestinationMmsiIs(111111111) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DAC is 1&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DACIs(1) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.FI is 50&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_FIIs(50) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationDataPadding is 4&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationData is 8NuS1`s6mQ0vCv048@0002P1401`0000000000&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataIs("8NuS1`s6mQ0vCv048...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e56e5824-03f5-4910-8e11-0ffd527452b8" testId="34de4405-2a0d-09a1-0be2-8fab262cb629" testName="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3582796+02:00" endTime="2024-04-03T16:58:35.3585797+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e56e5824-03f5-4910-8e11-0ffd527452b8">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000000P' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ae84a8c2-a2b0-4c6c-914f-70724577ecfc" testId="cd7e4ea1-ab5b-78be-3f64-c940661dfcf4" testName="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;3&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3561064+02:00" endTime="2024-04-03T16:58:35.3564063+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae84a8c2-a2b0-4c6c-914f-70724577ecfc">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88f6a89d-c712-450e-8202-4e814e35262c" testId="84de66bf-3f7e-7e37-8cab-45b5955855a2" testName="TrueHeading(&quot;C000000000000000000000P00000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005210" startTime="2024-04-03T16:58:35.1314841+02:00" endTime="2024-04-03T16:58:35.1320048+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88f6a89d-c712-450e-8202-4e814e35262c">
      <Output>
        <StdOut>When I parse 'C000000000000000000000P00000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TrueHeadingDegrees is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TrueHeadingDegreesIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2a220c5c-4919-48e5-8310-e4feca81563a" testId="d63f2ec8-e90e-14e6-7597-3d1d1676c0f7" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3723493+02:00" endTime="2024-04-03T16:58:35.3726502+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2a220c5c-4919-48e5-8310-e4feca81563a">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000000000000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="437d21c0-1ea0-4056-8f9c-70f8fbba4a29" testId="07ea9a45-7ff5-a587-df80-042c5630ac19" testName="ShipType(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011580" startTime="2024-04-03T16:58:35.1213011+02:00" endTime="2024-04-03T16:58:35.1224587+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="437d21c0-1ea0-4056-8f9c-70f8fbba4a29">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.ShipType is NotAvailable&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_ShipTypeIs(NotAvailable) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dc51fb67-4c46-4318-8d28-1cdb340d7520" testId="d8a1a05c-d4f6-06f9-1743-0dd92c1c5565" testName="PartBMMSI(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008850" startTime="2024-04-03T16:58:35.2899586+02:00" endTime="2024-04-03T16:58:35.2908435+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc51fb67-4c46-4318-8d28-1cdb340d7520">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="da40250e-bf27-4ecc-b089-3673b9e663a4" testId="33856094-da52-21b4-2a57-1287f35706b8" testName="ETADay(&quot;55AQcl42D&gt;PTQ3G7C63NmL5HE&gt;2222222222221J28B545en08im@DQ2CQp43k0D`1CD4cP&quot;,&quot;2&quot;,&quot;27&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.2022061+02:00" endTime="2024-04-03T16:58:35.2026036+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="da40250e-bf27-4ecc-b089-3673b9e663a4">
      <Output>
        <StdOut>When I parse '55AQcl42D&gt;PTQ3G7C63NmL5HE&gt;2222222222221J28B545en08im@DQ2CQp43k0D`1CD4cP' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("55AQcl42D&gt;PTQ3G7C...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 27&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(27) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49f0b920-9348-46e9-8bd9-5abcd74d9a5c" testId="a88ada19-9d3d-a3db-ebff-91a30e2921b2" testName="ShipType(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;PortTender&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.2374112+02:00" endTime="2024-04-03T16:58:35.2378131+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49f0b920-9348-46e9-8bd9-5abcd74d9a5c">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is PortTender&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(PortTender) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a3d4435-6eb7-4ba5-85d7-3e4d5c67a78c" testId="d3cf6644-051c-5037-c245-352d8d1884da" testName="PartBDimensionToBow(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;10&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0077000" startTime="2024-04-03T16:58:35.2727414+02:00" endTime="2024-04-03T16:58:35.2804412+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a3d4435-6eb7-4ba5-85d7-3e4d5c67a78c">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 10&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(10) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10d3b100-287a-4bfb-947d-c208362e4e65" testId="3ca231b4-9037-4aaf-4dd4-af8ec42d4d76" testName="MMSI(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;257149920&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0521845+02:00" endTime="2024-04-03T16:58:35.0525244+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10d3b100-287a-4bfb-947d-c208362e4e65">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 257149920&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(257149920) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="69a817cb-1e7e-429c-8063-7c275f17201a" testId="f20f1ba3-f4d3-99e3-9367-30f14257930d" testName="FullMessage(&quot;&lt;9N`1nBD@=8L7??4P41IQP5D1PD?PBFPilrhh&lt;DP`ED3Pckrhha0&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;636092889&quot;,&quot;0&quot;,&quot;621819015&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot;GOOD DAY! ETA TO RV 14:00LT (UTC +3:00)@\&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0013580" startTime="2024-04-03T16:58:34.7778020+02:00" endTime="2024-04-03T16:58:34.7791602+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="69a817cb-1e7e-429c-8063-7c275f17201a">
      <Output>
        <StdOut>When I parse '&lt;9N`1nBD@=8L7??4P41IQP5D1PD?PBFPilrhh&lt;DP`ED3Pckrhha0' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;9N`1nBD@=8L7??4P...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Mmsi is 636092889&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_MmsiIs(636092889) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.DestinationMmsi is 621819015&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_DestinationMmsiIs(621819015) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RetransmitIs(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SafetyRelatedText is "GOOD DAY! ETA TO RV 14:00LT (UTC +3:00)@"&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SafetyRelatedTextIs(""GOOD DAY! ETA TO...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="558aa2b9-93c0-499e-99ad-70b07d31dddb" testId="7811b6b5-18a0-a328-c386-1775049d7a35" testName="PartBVendorIDITU_R1371_4(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;SMT&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003220" startTime="2024-04-03T16:58:35.3174054+02:00" endTime="2024-04-03T16:58:35.3177270+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="558aa2b9-93c0-499e-99ad-70b07d31dddb">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is SMT&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("SMT") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd91b65c-ee93-4fc7-ab3b-e074ea5496d6" testId="4039bcd1-f776-f008-dbc6-126045adabf2" testName="DimensionToStern(&quot;50000000000000000000000000000000000000000010000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005250" startTime="2024-04-03T16:58:35.1864665+02:00" endTime="2024-04-03T16:58:35.1869918+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd91b65c-ee93-4fc7-ab3b-e074ea5496d6">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000010000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c091f175-cc68-4854-8c54-3339628bc16d" testId="df2570f6-8c66-0b24-2d68-8978a49e151c" testName="PartAName(&quot;H00000000000000000000000010&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@P&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003710" startTime="2024-04-03T16:58:35.2591029+02:00" endTime="2024-04-03T16:58:35.2594737+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c091f175-cc68-4854-8c54-3339628bc16d">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000010' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is @@@@@@@@@@@@@@@@@@@P&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("@@@@@@@@@@@@@@@@@@@P") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0d8adbe3-9602-4942-9dd8-3423823ec8d2" testId="8e13f186-4e37-725b-5e7c-8de4564ccc72" testName="ConvertAIS6_BitCharacterToASCII(&quot;19&quot;,&quot;'S'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3324475+02:00" endTime="2024-04-03T16:58:35.3326684+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0d8adbe3-9602-4942-9dd8-3423823ec8d2">
      <Output>
        <StdOut>When I convert the AIS character value 19 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(19) (0,0s)&#xD;
Then the converted ASCII value should be 'S'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(S) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="26bf9fc9-76d9-4997-a8b1-2dd3cfac8c1f" testId="d0ad6cfb-ad29-f883-04cb-111ddf6971a3" testName="RegionalReservedBits38_45(&quot;B000000400000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004760" startTime="2024-04-03T16:58:35.0634702+02:00" endTime="2024-04-03T16:58:35.0639458+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="26bf9fc9-76d9-4997-a8b1-2dd3cfac8c1f">
      <Output>
        <StdOut>When I parse 'B000000400000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000004000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ca40708e-675a-44af-8fda-b403e27be660" testId="9206f15c-242b-d067-e74e-fd85f45ad31d" testName="PositionFixType(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009640" startTime="2024-04-03T16:58:35.1054332+02:00" endTime="2024-04-03T16:58:35.1063969+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca40708e-675a-44af-8fda-b403e27be660">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Undefined&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Undefined) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4342d8c4-d34e-440c-b789-f8ea8332b1cf" testId="d7d4a0f8-d8cd-ac68-71c7-8dafcbbd97fb" testName="ConvertAIS6_BitCharacterToASCII(&quot;31&quot;,&quot;'_'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.3352600+02:00" endTime="2024-04-03T16:58:35.3356555+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4342d8c4-d34e-440c-b789-f8ea8332b1cf">
      <Output>
        <StdOut>When I convert the AIS character value 31 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(31) (0,0s)&#xD;
Then the converted ASCII value should be '_'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(_) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ac8f1c21-1941-478a-9476-4c3a94bbb0c2" testId="f018392c-b69f-1819-ee39-41471671512a" testName="AISTalkerId(&quot;ARVDM&quot;,&quot;ReceivingStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002270" startTime="2024-04-03T16:58:35.5698690+02:00" endTime="2024-04-03T16:58:35.5700957+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac8f1c21-1941-478a-9476-4c3a94bbb0c2">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'ARVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ARVDM") (0,0s)&#xD;
Then the AisTalker is 'ReceivingStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(ReceivingStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="56d176c6-95ac-4afd-8be0-497623d6ab80" testId="c9a7ed33-28a5-5f4d-54c8-fddee0e768ea" testName="MMSI(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;258590000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003600" startTime="2024-04-03T16:58:34.9703259+02:00" endTime="2024-04-03T16:58:34.9706859+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56d176c6-95ac-4afd-8be0-497623d6ab80">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '258590000'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(258590000) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="26ce6c9a-ce81-400a-bd3d-c850051d2449" testId="fbd36d80-d7cc-8951-ec77-526b58a5e8ff" testName="ConvertAIS6_BitCharacterToASCII(&quot;1&quot;,&quot;'A'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007520" startTime="2024-04-03T16:58:35.3277253+02:00" endTime="2024-04-03T16:58:35.3284775+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="26ce6c9a-ce81-400a-bd3d-c850051d2449">
      <Output>
        <StdOut>When I convert the AIS character value 1 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(1) (0,0s)&#xD;
Then the converted ASCII value should be 'A'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(A) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="35455e9f-a79b-49c3-b529-5f6e94c9638a" testId="cfc29afc-a387-dd8b-5641-4cae3d060e7f" testName="DimensionToPort(&quot;5000000000000000000000000000000000000000000w000000000000000000000000000&quot;,&quot;2&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005160" startTime="2024-04-03T16:58:35.1813636+02:00" endTime="2024-04-03T16:58:35.1818798+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="35455e9f-a79b-49c3-b529-5f6e94c9638a">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000w000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 63&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="453e219f-b989-4064-98d3-b7dfc18ce4f2" testId="dba5a901-a55c-b2bd-b537-bf3a2387f350" testName="Spare(&quot;50000000000000000000000000000000000000000000000000000000000000000000004&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005320" startTime="2024-04-03T16:58:35.2404451+02:00" endTime="2024-04-03T16:58:35.2409767+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="453e219f-b989-4064-98d3-b7dfc18ce4f2">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000004' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6a0ab0a4-223f-4b6e-bcd0-f383033cfd2e" testId="2f249456-5732-16b7-398d-97da594e4794" testName="MessagePart(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002660" startTime="2024-04-03T16:58:35.2507832+02:00" endTime="2024-04-03T16:58:35.2510491+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6a0ab0a4-223f-4b6e-bcd0-f383033cfd2e">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H3mhO30PDT@V04pU@4000000000' with padding 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9240c618-9798-4469-868f-76217c63e4ba" testId="dde45fa6-e37f-b1de-99ed-78dcd17dd7a7" testName="PartBCallSign(&quot;H000004000000001234567000000&quot;,&quot;0&quot;,&quot;ABCDEFG&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:35.2695223+02:00" endTime="2024-04-03T16:58:35.2698715+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9240c618-9798-4469-868f-76217c63e4ba">
      <Output>
        <StdOut>When I parse 'H000004000000001234567000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000012...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is ABCDEFG&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("ABCDEFG") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="196da310-f89d-4240-bb85-d942226a58d8" testId="9b24d73c-fd0b-ba63-9a82-9ff440d3f23a" testName="SpareBitsAt145(&quot;100000000000000000000000H000&quot;,&quot;0&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003340" startTime="2024-04-03T16:58:35.0129455+02:00" endTime="2024-04-03T16:58:35.0132798+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="196da310-f89d-4240-bb85-d942226a58d8">
      <Output>
        <StdOut>When I parse '100000000000000000000000H000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 6&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(6) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d948d57-cba5-4fd0-bb48-0e33918bdeba" testId="e566e537-c657-37d3-8b8a-29152d9047e0" testName="TagBlockPresent" computerName="SCODE-HF8MJR2" duration="00:00:00.0008900" startTime="2024-04-03T16:58:35.5864426+02:00" endTime="2024-04-03T16:58:35.5873326+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d948d57-cba5-4fd0-bb48-0e33918bdeba">
      <Output>
        <StdOut>When I parse a message with a tag block&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithATagBlock() (0,0s)&#xD;
Then the TagBlockWithoutDelimiters property should match the tag block without the delimiters&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTagBlockWithoutDelimitersPropertyShouldMatchTheTagBlockWithoutTheDelimiters() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="526fb6ab-4525-417d-bba9-94b04f0e0557" testId="19e65515-b261-324b-14cd-3cfaa165995a" testName="RepeatIndicator(&quot;5P000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004010" startTime="2024-04-03T16:58:35.2332564+02:00" endTime="2024-04-03T16:58:35.2336573+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="526fb6ab-4525-417d-bba9-94b04f0e0557">
      <Output>
        <StdOut>When I parse '5P000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5P000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5947a2f5-b66b-45c8-93f4-0bdd990d91a3" testId="d1648a77-d498-d52e-97e2-9218ca631910" testName="NmeaTagBlockSingleLine(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007370" startTime="2024-04-03T16:58:35.5537911+02:00" endTime="2024-04-03T16:58:35.5545281+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5947a2f5-b66b-45c8-93f4-0bdd990d91a3">
      <Output>
        <StdOut>When I parse 's:ASS,c:1706745485*72' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:ASS,c:170674548...", False, Nmea) (0,0s)&#xD;
Then the Source is ASS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("ASS") (0,0s)&#xD;
And the Timestamp is 1706745485&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706745485) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="53562f2d-72df-4eee-956d-6243687c16c7" testId="efbba2b1-a781-6038-8fe8-2e8bc601c820" testName="CourseOverGround(&quot;1000000000000000000&gt;40000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003660" startTime="2024-04-03T16:58:34.9548679+02:00" endTime="2024-04-03T16:58:34.9552339+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53562f2d-72df-4eee-956d-6243687c16c7">
      <Output>
        <StdOut>When I parse '1000000000000000000&gt;40000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(3600) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="35366b9e-7eee-4683-ab31-7df879b6afee" testId="de8da467-3292-2c7e-887b-61925ff6c58a" testName="ConvertAIS6_BitCharacterToASCII(&quot;34&quot;,&quot;'\&quot;'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002830" startTime="2024-04-03T16:58:35.3361885+02:00" endTime="2024-04-03T16:58:35.3364711+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="35366b9e-7eee-4683-ab31-7df879b6afee">
      <Output>
        <StdOut>When I convert the AIS character value 34 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(34) (0,0s)&#xD;
Then the converted ASCII value should be '"'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4203146c-3256-48c6-a45d-4b4dca39208d" testId="af07cb37-69be-87db-644c-e58392c2f942" testName="Destination(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;TRONDHEIM&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004180" startTime="2024-04-03T16:58:35.1758201+02:00" endTime="2024-04-03T16:58:35.1762379+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4203146c-3256-48c6-a45d-4b4dca39208d">
      <Output>
        <StdOut>When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is TRONDHEIM&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("TRONDHEIM") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="48afcfb6-cc4a-4e34-9621-fc2c2c48aa80" testId="772c977b-9a60-0304-43a3-4bb5f19b1e16" testName="FullMessage(&quot;95M2oQ@41Tr4L4H@eRvQ;2h20000&quot;,&quot;0&quot;,&quot;9&quot;,&quot;0&quot;,&quot;366000005&quot;,&quot;16&quot;,&quot;100&quot;,&quot;true&quot;,&quot;-49749876&quot;,&quot;17523450&quot;,&quot;300&quot;,&quot;11&quot;,&quot;0&quot;,&quot;0&quot;,&quot;true&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0114420" startTime="2024-04-03T16:58:35.1502396+02:00" endTime="2024-04-03T16:58:35.1616817+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="48afcfb6-cc4a-4e34-9621-fc2c2c48aa80">
      <Output>
        <StdOut>When I parse '95M2oQ@41Tr4L4H@eRvQ;2h20000' with padding 0 as a Standard Search and Rescue Aircraft Position Report&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.WhenIParseWithNmeaAisStandardSearchAndRescueAircraftPositionReportParser("95M2oQ@41Tr4L4H@e...", 0) (0,0s)&#xD;
Then NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Type is 9&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.RepeatIndicator is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Mmsi is 366000005&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_MmsiIs(366000005) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Altitude is 16&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_AltitudeIs(16) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.SpeedOverGround is 100&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_SpeedOverGroundIs(100) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.PositionAccuracy is true&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Longitude10000thMins is -49749876&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_Is(-49749876) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Latitude10000thMins is 17523450&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_Latitude10000thMinsIs(17523450) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.CourseOverGround10thDegrees is 300&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_CourseOverGround10thDegreesIs(300) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.TimeStampSecond is 11&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_TimeStampSecondIs(11) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.AltitudeSensor is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_AltitudeSensorIs(Gnss) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.SpareBits135 is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_SpareBits135Is(0) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.DTE is true&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_DTEIs(True) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.SpareBits143 is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_SpareBits143Is(0) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.AssignedMode is false&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.RaimFlag is false&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.CommunicationStateSelector is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_CommunicationStateSelectorIs(Sotdma) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.CommunicationState is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_CommunicationStateIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="698b1ce2-a74a-4dae-ac87-01dc71aab9a4" testId="54f19680-fed7-f01e-948a-3235a655b51b" testName="FullMessage(&quot;@02a4KQD2cFP&lt;P0000000500&quot;,&quot;0&quot;,&quot;16&quot;,&quot;0&quot;,&quot;2770030&quot;,&quot;0&quot;,&quot;352497000&quot;,&quot;200&quot;,&quot;0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018670" startTime="2024-04-03T16:58:34.8089156+02:00" endTime="2024-04-03T16:58:34.8107829+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="698b1ce2-a74a-4dae-ac87-01dc71aab9a4">
      <Output>
        <StdOut>When I parse '@02a4KQD2cFP&lt;P0000000500' with padding 0 as a Assigned mode command&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.WhenIParseWithNmeaAisAssignedModeCommandParser("@02a4KQD2cFP&lt;P000...", 0) (0,0s)&#xD;
Then NmeaAisAssignedModeCommandParser.Type is 16&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_TypeIs(AssignmentModeCom...) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.RepeatIndicator is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.Mmsi is 2770030&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_MmsiIs(2770030) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBits38 is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiA is 352497000&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiAIs(352497000) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetA is 200&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetAIs(200) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementA is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementAIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiB is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiBIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetB is 20&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetBIs(20) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementB is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementBIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBitsAtEnd is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBitsAtEndAIs(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fa09d009-bd95-43a2-9491-8e594c8316dc" testId="b4d2cf55-8eee-3bd4-a69c-9552453dfd80" testName="LongitudeAndLatitude(&quot;B000000000000000004000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004690" startTime="2024-04-03T16:58:35.0445949+02:00" endTime="2024-04-03T16:58:35.0450639+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fa09d009-bd95-43a2-9491-8e594c8316dc">
      <Output>
        <StdOut>When I parse 'B000000000000000004000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="339630a3-6a9b-4835-a697-991da281475c" testId="6803eb75-8cd3-f12d-bf82-4c52a27c5f5a" testName="TimeStamp(&quot;B0000000000000000000000P0000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004700" startTime="2024-04-03T16:58:35.0724660+02:00" endTime="2024-04-03T16:58:35.0729356+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="339630a3-6a9b-4835-a697-991da281475c">
      <Output>
        <StdOut>When I parse 'B0000000000000000000000P0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="347fc6ef-43e6-467c-983a-81d2c2383479" testId="cda159b9-68c5-e199-f96e-bdbd1994bb82" testName="TagBlockNotPresent" computerName="SCODE-HF8MJR2" duration="00:00:00.0009540" startTime="2024-04-03T16:58:35.5854753+02:00" endTime="2024-04-03T16:58:35.5864295+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="347fc6ef-43e6-467c-983a-81d2c2383479">
      <Output>
        <StdOut>When I parse a message with no tag block&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithNoTagBlock() (0,0s)&#xD;
Then the TagBlockWithoutDelimiters property's Length should be 0&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTagBlockWithoutDelimitersLengthShouldBe(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="318531cf-9077-4c5f-bf1c-b88faa511363" testId="42fb2d05-7365-d814-9fa8-4b6805f28f5a" testName="DisplayFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009060" startTime="2024-04-03T16:58:35.0382671+02:00" endTime="2024-04-03T16:58:35.0391731+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="318531cf-9077-4c5f-bf1c-b88faa511363">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6ecbeb5-3f76-47fb-834c-226ca892bb03" testId="fd55b306-5114-b928-4f2b-11887f0d8203" testName="DSCFlag(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003550" startTime="2024-04-03T16:58:35.0418078+02:00" endTime="2024-04-03T16:58:35.0421627+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6ecbeb5-3f76-47fb-834c-226ca892bb03">
      <Output>
        <StdOut>When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="812f107b-5e9e-4cea-83fd-9c7acccafbc7" testId="e2f90c57-1ae6-ae87-0b1c-ca096841f0b6" testName="TrueHeading(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008910" startTime="2024-04-03T16:58:35.0747561+02:00" endTime="2024-04-03T16:58:35.0756469+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="812f107b-5e9e-4cea-83fd-9c7acccafbc7">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="62f36a78-93f9-475d-8c0b-ce7d86259710" testId="047388df-83c4-3a87-4405-1c3b99517335" testName="SpeedOverGround(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;1023&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.0175174+02:00" endTime="2024-04-03T16:58:35.0178615+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="62f36a78-93f9-475d-8c0b-ce7d86259710">
      <Output>
        <StdOut>When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1023) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="67d4eb33-0148-477e-a60f-7f54cd6be590" testId="a67aee9f-e97c-78f7-f186-a0dbd2589049" testName="SingleLineWithNon_StandardTagBlockFieldWithExceptionsEnabled" computerName="SCODE-HF8MJR2" duration="00:00:00.0015010" startTime="2024-04-03T16:58:35.5165622+02:00" endTime="2024-04-03T16:58:35.5180635+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="67d4eb33-0148-477e-a60f-7f54cd6be590">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that an unrecognized field is present&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenTheMessageErrorReportShouldIncludeAnExceptionReportingThatAnUnrecognizedFieldIsPresent(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c4853983-0443-476e-823b-27945592f572" testId="7a7cd104-7ed9-c88a-8a4f-2d87243e42a6" testName="PositionAccuracy(&quot;C000000008000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005270" startTime="2024-04-03T16:58:35.1048704+02:00" endTime="2024-04-03T16:58:35.1053976+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c4853983-0443-476e-823b-27945592f572">
      <Output>
        <StdOut>When I parse 'C000000008000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000080000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionAccuracyIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="773510d8-047e-49ba-8f7c-2465ce40a241" testId="a81de4ee-7aab-e81a-5560-c1f4faaef599" testName="LongitudeAndLatitude(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0014189" startTime="2024-04-03T16:58:35.0425483+02:00" endTime="2024-04-03T16:58:35.0439676+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="773510d8-047e-49ba-8f7c-2465ce40a241">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="52bc5258-f794-4807-b4c5-a61bc3668e45" testId="72e599a5-ffae-234c-14f5-6f09e0450aee" testName="SingleBit(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;60&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3613491+02:00" endTime="2024-04-03T16:58:35.3616475+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="52bc5258-f794-4807-b4c5-a61bc3668e45">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13nW5&lt;00000IoPlSbE`:P8EH0534' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7b6e70f5-c470-4cef-93df-fb540fdcee7a" testId="30286ba8-3f49-ca95-c9b7-28de3aa4f583" testName="ConvertAIS6_BitCharacterToASCII(&quot;46&quot;,&quot;'.'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002240" startTime="2024-04-03T16:58:35.3413668+02:00" endTime="2024-04-03T16:58:35.3415906+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b6e70f5-c470-4cef-93df-fb540fdcee7a">
      <Output>
        <StdOut>When I convert the AIS character value 46 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(46) (0,0s)&#xD;
Then the converted ASCII value should be '.'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(.) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5dc886e2-491c-44d4-9a7e-dd9cfcd99dfb" testId="6c939327-e182-1879-4613-457890dd9ee8" testName="SpareBitsAt145(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008990" startTime="2024-04-03T16:58:35.0101435+02:00" endTime="2024-04-03T16:58:35.0110428+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5dc886e2-491c-44d4-9a7e-dd9cfcd99dfb">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e87df31c-7032-4d42-96c7-f56b1cb6c32c" testId="b1a72e91-1a36-124e-f8a0-694b86250c95" testName="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000100000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;32&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003040" startTime="2024-04-03T16:58:35.3704675+02:00" endTime="2024-04-03T16:58:35.3707711+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e87df31c-7032-4d42-96c7-f56b1cb6c32c">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000000000000000000000100000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 32&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(32) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d3e74718-95bd-4f89-a9ad-e803e92c5c22" testId="27a15858-e462-192b-de2b-d3f0ddbd57b4" testName="NavigationStatus(&quot;1000003000000000000000000000&quot;,&quot;0&quot;,&quot;RestrictedManoeuverability&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003680" startTime="2024-04-03T16:58:34.9729243+02:00" endTime="2024-04-03T16:58:34.9732927+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d3e74718-95bd-4f89-a9ad-e803e92c5c22">
      <Output>
        <StdOut>When I parse '1000003000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000030000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is RestrictedManoeuverability&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(RestrictedManoeuv...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c77ce142-b151-482f-bd32-d9c1b4a8ae21" testId="f2df8e2f-dd46-b40f-af79-547388f599c1" testName="Signed8_BitInteger(&quot;00000000h0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003190" startTime="2024-04-03T16:58:35.3490628+02:00" endTime="2024-04-03T16:58:35.3493817+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c77ce142-b151-482f-bd32-d9c1b4a8ae21">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000h0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000h00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c298531a-95ae-42ba-bbf6-40c89cfdf10b" testId="6e21064b-3b3e-7f8e-1e67-fc76c97802da" testName="PartBUnitModelCode(&quot;H000004000040000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005150" startTime="2024-04-03T16:58:35.3095809+02:00" endTime="2024-04-03T16:58:35.3100967+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c298531a-95ae-42ba-bbf6-40c89cfdf10b">
      <Output>
        <StdOut>When I parse 'H000004000040000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000400000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b1fd51cc-0151-4cf5-aca8-50239ac5bbc8" testId="5058a9d6-b9ef-7fef-c417-14cf926f34a3" testName="LongitudeAndLatitute(&quot;C0000000000000P0000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006489" startTime="2024-04-03T16:58:35.0948548+02:00" endTime="2024-04-03T16:58:35.0955040+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1fd51cc-0151-4cf5-aca8-50239ac5bbc8">
      <Output>
        <StdOut>When I parse 'C0000000000000P0000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000P00...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(1) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="027e8bf4-6055-4d09-9428-a3a647e04cd4" testId="3a6d09e3-297b-f869-8fc3-126c4b92e2e4" testName="PartASpare(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004650" startTime="2024-04-03T16:58:35.2647585+02:00" endTime="2024-04-03T16:58:35.2652233+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="027e8bf4-6055-4d09-9428-a3a647e04cd4">
      <Output>
        <StdOut>When I parse 'H000000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1b8ad3f5-4ad0-49f1-860e-8b9610339a61" testId="77314d58-01e3-55d0-6dcf-cb0e66fdf3e2" testName="DisplayFlag(&quot;B000000000000000000000020000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004710" startTime="2024-04-03T16:58:35.0391869+02:00" endTime="2024-04-03T16:58:35.0396581+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1b8ad3f5-4ad0-49f1-860e-8b9610339a61">
      <Output>
        <StdOut>When I parse 'B000000000000000000000020000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="73368e7b-e7e1-4e23-89aa-cacc18570a8c" testId="e0d21fdd-0b03-b702-79f3-12bd88e2b542" testName="ETAHour(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009910" startTime="2024-04-03T16:58:35.2026375+02:00" endTime="2024-04-03T16:58:35.2036286+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="73368e7b-e7e1-4e23-89aa-cacc18570a8c">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="16fd2927-62cc-4268-982b-c6646f0ed82f" testId="321b9524-f118-ccd2-b63b-ac508e63d626" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004800" startTime="2024-04-03T16:58:34.7644307+02:00" endTime="2024-04-03T16:58:34.7649109+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="16fd2927-62cc-4268-982b-c6646f0ed82f">
      <Output>
        <StdOut>When I parse '6&gt;kKL=000000&gt;d`u06?D000' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;kKL=000000&gt;d`u0...", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b3bb3f1b-120f-4d76-bdf5-bbb65fe0e089" testId="2e650580-d267-47c9-9121-7685c2c0122a" testName="DimensionToStern(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009370" startTime="2024-04-03T16:58:35.1855153+02:00" endTime="2024-04-03T16:58:35.1864526+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b3bb3f1b-120f-4d76-bdf5-bbb65fe0e089">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7123e92-06ff-412a-9f5a-c073f02f9614" testId="509d4f3c-0258-20c0-4756-eff8e7493d35" testName="NavigationStatus(&quot;1000002000000000000000000000&quot;,&quot;0&quot;,&quot;NotUnderCommand&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003730" startTime="2024-04-03T16:58:34.9725394+02:00" endTime="2024-04-03T16:58:34.9729119+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7123e92-06ff-412a-9f5a-c073f02f9614">
      <Output>
        <StdOut>When I parse '1000002000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000020000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotUnderCommand&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotUnderCommand) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f315d2d6-8f75-40c9-983e-ac40229de83c" testId="9aea0d68-87c6-4e42-f950-ddbefdd83cf6" testName="RadioChannelCode(&quot;B&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:35.5846342+02:00" endTime="2024-04-03T16:58:35.5849726+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f315d2d6-8f75-40c9-983e-ac40229de83c">
      <Output>
        <StdOut>When I parse a message with a radio channel code of 'B'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("B") (0,0s)&#xD;
Then the ChannelCode is 'B'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(B) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dfcb086d-875d-4873-be05-d00dbcde291b" testId="6a2f65f5-9494-3f28-cae6-42d4ffe0fac1" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;8&quot;,&quot;30&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0012190" startTime="2024-04-03T16:58:35.3766632+02:00" endTime="2024-04-03T16:58:35.3778824+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dfcb086d-875d-4873-be05-d00dbcde291b">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 8&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 8) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 30&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(30) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a84383a-bbbe-4eb3-88f6-67df536937de" testId="b45e4ad6-a253-51a9-7fb4-e6b7c9355458" testName="PositionFixType(&quot;500000000000000000000000000000000000000000000P0000000000000000000000000&quot;,&quot;0&quot;,&quot;Galileo&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2296837+02:00" endTime="2024-04-03T16:58:35.2300806+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a84383a-bbbe-4eb3-88f6-67df536937de">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000P0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Galileo&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Galileo) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="472f65f2-d5a7-45e3-9783-b3d7f4d2c544" testId="9dc6bdaf-5281-8e53-8cf5-d6edebab3bb8" testName="RegionalReservedBits139_142(&quot;C0000000000000000000000@0000000000000000000000000000&quot;,&quot;0&quot;,&quot;8&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0019650" startTime="2024-04-03T16:58:35.1136167+02:00" endTime="2024-04-03T16:58:35.1155821+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="472f65f2-d5a7-45e3-9783-b3d7f4d2c544">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000@0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 8&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="498ed8eb-7dad-4023-946d-34b98f84f868" testId="79994107-4692-be33-6d60-41927ecc9baf" testName="AISVersion(&quot;50000040000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007100" startTime="2024-04-03T16:58:35.1661152+02:00" endTime="2024-04-03T16:58:35.1668251+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="498ed8eb-7dad-4023-946d-34b98f84f868">
      <Output>
        <StdOut>When I parse '50000040000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000040000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ec45d2eb-0d08-4e71-9848-485bb26a3a5c" testId="3c0d3867-163e-0645-9dc4-fba288dea674" testName="ShipType(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;CargoAll&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2378254+02:00" endTime="2024-04-03T16:58:35.2382225+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec45d2eb-0d08-4e71-9848-485bb26a3a5c">
      <Output>
        <StdOut>When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is CargoAll&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(CargoAll) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a7e61ea8-542d-4e1b-8dac-a245b9c42456" testId="fb70d808-27c7-04c4-0102-52c38b810ebe" testName="PositionFixType(&quot;500000000000000000000000000000000000000000000D0000000000000000000000000&quot;,&quot;0&quot;,&quot;Chayka&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.2284545+02:00" endTime="2024-04-03T16:58:35.2288521+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a7e61ea8-542d-4e1b-8dac-a245b9c42456">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000D0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Chayka&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Chayka) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="729de461-2fb1-48ab-8bd9-1843c6dded16" testId="52ae657b-56e0-d342-c0a9-dd9f545029ad" testName="NavigationStatus(&quot;13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForHsc&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:34.9825056+02:00" endTime="2024-04-03T16:58:34.9828540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="729de461-2fb1-48ab-8bd9-1843c6dded16">
      <Output>
        <StdOut>When I parse '13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m`0o9P4hPTEKLQ&gt;...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForHsc&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0174399a-896d-429f-960d-23acd3542a8a" testId="5bec235c-b822-8eb6-ed81-3161aa6c5e46" testName="UnsignedAligned6_BitInteger(&quot;400000000000c000000000000000&quot;,&quot;0&quot;,&quot;72&quot;,&quot;43&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3660493+02:00" endTime="2024-04-03T16:58:35.3663484+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0174399a-896d-429f-960d-23acd3542a8a">
      <Output>
        <StdOut>Given an NMEA AIS payload of '400000000000c000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("400000000000c0000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 72&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 72) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 43&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(43) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a7699d29-3014-474a-bbb3-9b947207bbb3" testId="636fd18c-bb17-9ef4-d2bd-88b547119285" testName="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3564190+02:00" endTime="2024-04-03T16:58:35.3567195+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a7699d29-3014-474a-bbb3-9b947207bbb3">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="94eb4f3d-473c-4861-8521-4f2647b0ba87" testId="a9ebcf75-a817-e431-5e1e-1b6610bc5839" testName="MessagePart(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002610" startTime="2024-04-03T16:58:35.2510615+02:00" endTime="2024-04-03T16:58:35.2513227+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="94eb4f3d-473c-4861-8521-4f2647b0ba87">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="68fd4f88-2935-4582-9305-75127bc5fcc2" testId="da8d8202-c59b-56b2-a443-b08269f53f46" testName="LongitudeAndLatitute(&quot;C000000007wwwwP0000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005130" startTime="2024-04-03T16:58:35.0960448+02:00" endTime="2024-04-03T16:58:35.0965581+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="68fd4f88-2935-4582-9305-75127bc5fcc2">
      <Output>
        <StdOut>When I parse 'C000000007wwwwP0000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C000000007wwwwP00...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is -1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(-1) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10fb2e4a-1289-4a3f-a7a9-40986f68bf30" testId="13b6d395-8f0f-3bde-edb3-12edc2fe7e61" testName="IMONumber(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;6522945&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.2207184+02:00" endTime="2024-04-03T16:58:35.2211202+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10fb2e4a-1289-4a3f-a7a9-40986f68bf30">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 6522945&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(6522945) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7e0f3010-4332-43e1-8849-7679d0ee0011" testId="9d71603e-c3c8-b540-bc7d-03271d97686d" testName="TimeStamp(&quot;C000000000000000000000MP0000000000000000000000000000&quot;,&quot;0&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003990" startTime="2024-04-03T16:58:35.1300688+02:00" endTime="2024-04-03T16:58:35.1304679+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e0f3010-4332-43e1-8849-7679d0ee0011">
      <Output>
        <StdOut>When I parse 'C000000000000000000000MP0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TimeStampSecond is 59&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TimeStampSecondIs(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ee54f7ce-a2cd-489f-9f79-d6889181624b" testId="82ed057d-7398-d676-5207-8e72a6631a09" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;1&quot;,&quot;110&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3519680+02:00" endTime="2024-04-03T16:58:35.3522679+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee54f7ce-a2cd-489f-9f79-d6889181624b">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 1) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 110&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(110) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9490fff0-9674-48d7-b811-95735ec6c5b2" testId="3d1acc2a-11a8-3a07-f553-9a213b1db218" testName="VesselName(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;VISION OF THE FJORDS&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004450" startTime="2024-04-03T16:58:35.2466038+02:00" endTime="2024-04-03T16:58:35.2470491+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9490fff0-9674-48d7-b811-95735ec6c5b2">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is VISION OF THE FJORDS&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("VISION OF THE FJORDS") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c2d2f800-2f55-4d1f-ac23-0b9d6bc21ea6" testId="98ccd8d7-0d52-6896-c7a1-9cbdd87734d6" testName="ConvertAIS6_BitCharacterToASCII(&quot;24&quot;,&quot;'X'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002250" startTime="2024-04-03T16:58:35.3336227+02:00" endTime="2024-04-03T16:58:35.3338479+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c2d2f800-2f55-4d1f-ac23-0b9d6bc21ea6">
      <Output>
        <StdOut>When I convert the AIS character value 24 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(24) (0,0s)&#xD;
Then the converted ASCII value should be 'X'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(X) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bc68397c-2a61-45e1-b4f4-b0bbbd39db3f" testId="02b15256-76bd-543a-81b0-124e6cd71cda" testName="Draught(&quot;50000000000000000000000000000000000000000000000000P00000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004100" startTime="2024-04-03T16:58:35.1897681+02:00" endTime="2024-04-03T16:58:35.1901777+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc68397c-2a61-45e1-b4f4-b0bbbd39db3f">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000P00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="55ddb34e-6a85-4965-a428-f6389a61f518" testId="6a0027da-5bdf-7929-ad57-372b4b750f35" testName="NavigationStatus(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;RestrictedManoeuverability&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:34.9806263+02:00" endTime="2024-04-03T16:58:34.9809709+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="55ddb34e-6a85-4965-a428-f6389a61f518">
      <Output>
        <StdOut>When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is RestrictedManoeuverability&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(RestrictedManoeuv...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ac6c7c44-2936-4c1b-ab25-44477e846dcb" testId="a71d5b0a-55d1-a684-ce6e-a29739e6138e" testName="ConvertAIS6_BitCharacterToASCII(&quot;56&quot;,&quot;'8'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002200" startTime="2024-04-03T16:58:35.3436612+02:00" endTime="2024-04-03T16:58:35.3438813+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac6c7c44-2936-4c1b-ab25-44477e846dcb">
      <Output>
        <StdOut>When I convert the AIS character value 56 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(56) (0,0s)&#xD;
Then the converted ASCII value should be '8'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="423433ac-6c99-4e19-ba30-c34090fadf82" testId="152c4fcd-7252-9f39-561e-59c1df217945" testName="NavigationStatus(&quot;13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;&quot;,&quot;0&quot;,&quot;EngagedInFishing&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:34.9817963+02:00" endTime="2024-04-03T16:58:34.9821415+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="423433ac-6c99-4e19-ba30-c34090fadf82">
      <Output>
        <StdOut>When I parse '13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mTRV701F23hFp`V...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is EngagedInFishing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(EngagedInFishing) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a0abe62-1e2e-4ec3-87f0-866fe5c7157f" testId="63f4c05e-1a3f-0836-418d-e5e62946c1aa" testName="UnsignedAligned6_BitInteger(&quot;40000000000O0000000000000000&quot;,&quot;0&quot;,&quot;66&quot;,&quot;31&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003330" startTime="2024-04-03T16:58:35.3663604+02:00" endTime="2024-04-03T16:58:35.3666929+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a0abe62-1e2e-4ec3-87f0-866fe5c7157f">
      <Output>
        <StdOut>Given an NMEA AIS payload of '40000000000O0000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("40000000000O00000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 66&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 66) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 31&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(31) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="728157e5-00e4-42c7-9883-798d1e7739ec" testId="eebe7cd9-c3cb-f5d9-b9e8-a7420e9160d7" testName="PartAMMSI(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;257695500&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.2565368+02:00" endTime="2024-04-03T16:58:35.2568789+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="728157e5-00e4-42c7-9883-798d1e7739ec">
      <Output>
        <StdOut>When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 257695500&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(257695500) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a134cd05-9dd8-40dd-b995-53a01567183c" testId="49525ade-cb8a-55fd-e77b-770181083b65" testName="CourseOverGround(&quot;13mVWJ2P01P`jBlTMPsN4?v22&lt;0G&quot;,&quot;0&quot;,&quot;3600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:34.9570323+02:00" endTime="2024-04-03T16:58:34.9573786+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a134cd05-9dd8-40dd-b995-53a01567183c">
      <Output>
        <StdOut>When I parse '13mVWJ2P01P`jBlTMPsN4?v22&lt;0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mVWJ2P01P`jBlTM...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(3600) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="48c2db02-1d0d-48e5-a33c-229ca9bbeefe" testId="023a340e-a495-c32c-2a2d-e3f5d7e165e6" testName="ConvertAIS6_BitCharacterToASCII(&quot;33&quot;,&quot;'!'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002620" startTime="2024-04-03T16:58:35.3359165+02:00" endTime="2024-04-03T16:58:35.3361780+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="48c2db02-1d0d-48e5-a33c-229ca9bbeefe">
      <Output>
        <StdOut>When I convert the AIS character value 33 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(33) (0,0s)&#xD;
Then the converted ASCII value should be '!'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(!) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c0e3e900-ae66-4166-b4aa-93e01eb8df8d" testId="c6402895-8bf3-30db-72bf-ee8383db1fa6" testName="SpareBitsAt145(&quot;13n@kJ0000PIk0@Sc2==PDQd`53L&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003350" startTime="2024-04-03T16:58:35.0139763+02:00" endTime="2024-04-03T16:58:35.0143117+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0e3e900-ae66-4166-b4aa-93e01eb8df8d">
      <Output>
        <StdOut>When I parse '13n@kJ0000PIk0@Sc2==PDQd`53L' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13n@kJ0000PIk0@Sc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7a2c16d5-9687-497c-bf5d-2f31e5683f3c" testId="7dbc60c4-4373-6985-98f6-be866679a32b" testName="Payload" computerName="SCODE-HF8MJR2" duration="00:00:00.0010420" startTime="2024-04-03T16:58:35.5825565+02:00" endTime="2024-04-03T16:58:35.5835988+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7a2c16d5-9687-497c-bf5d-2f31e5683f3c">
      <Output>
        <StdOut>When I parse a message with a payload of 'B3m:H900AP@b:79ae6:&lt;OwnUoP06'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPayloadOf("B3m:H900AP@b:79ae...") (0,0s)&#xD;
Then the payload is 'B3m:H900AP@b:79ae6:&lt;OwnUoP06'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenThePayloadIs("B3m:H900AP@b:79ae...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="864905b2-0256-41da-a9b5-3733eaa0a953" testId="0d48b321-accb-8cef-c7d2-870cb25d1952" testName="DimensionToPort(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003990" startTime="2024-04-03T16:58:35.1818926+02:00" endTime="2024-04-03T16:58:35.1822910+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="864905b2-0256-41da-a9b5-3733eaa0a953">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2fcca770-50fe-4584-bf4a-2fe39e1e815d" testId="88245270-bb54-735c-b41a-c033dad5a2d2" testName="ManoeuvreIndicator(&quot;100000000000000000000001P000&quot;,&quot;0&quot;,&quot;NotDefinedBySpec&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003720" startTime="2024-04-03T16:58:34.9650596+02:00" endTime="2024-04-03T16:58:34.9654316+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2fcca770-50fe-4584-bf4a-2fe39e1e815d">
      <Output>
        <StdOut>When I parse '100000000000000000000001P000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NotDefinedBySpec&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NotDefinedBySpec) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f5b1c94d-730c-4a27-aa31-91664d0cfc0d" testId="bb3a5fae-a743-8009-1c2c-30541e552257" testName="AssignedFlag(&quot;B000000000000000000000008000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006450" startTime="2024-04-03T16:58:35.0291643+02:00" endTime="2024-04-03T16:58:35.0298088+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f5b1c94d-730c-4a27-aa31-91664d0cfc0d">
      <Output>
        <StdOut>When I parse 'B000000000000000000000008000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsAssigned is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsAssigned(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b6c0fecd-275b-4a8f-b228-29d0149741c5" testId="3c40b779-01f3-f4b8-cc92-c0335ecc455f" testName="Message22Flag(&quot;B00000000000000000000000@000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004830" startTime="2024-04-03T16:58:35.0474613+02:00" endTime="2024-04-03T16:58:35.0479440+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b6c0fecd-275b-4a8f-b228-29d0149741c5">
      <Output>
        <StdOut>When I parse 'B00000000000000000000000@000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d1ca92a1-676d-46df-a1ce-e35d0af5740b" testId="6c13e3d8-7ebd-634f-673c-0e19d4dc5450" testName="CourseOverGround(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;1601&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:34.9563182+02:00" endTime="2024-04-03T16:58:34.9566669+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d1ca92a1-676d-46df-a1ce-e35d0af5740b">
      <Output>
        <StdOut>When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 1601&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(1601) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="400e1d6a-eeb7-493a-9fa1-2805e9d25755" testId="49fcf1b2-6edd-ed5c-7138-e5ffecbb05f1" testName="Draught(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;102&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003940" startTime="2024-04-03T16:58:35.1940837+02:00" endTime="2024-04-03T16:58:35.1944778+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="400e1d6a-eeb7-493a-9fa1-2805e9d25755">
      <Output>
        <StdOut>When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 102&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(102) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3917adc4-edf3-48f7-bd8d-88418e40f31a" testId="53cd430e-0767-38f6-5caa-582fcf2ab532" testName="CSUnitFlag(&quot;B000000000000000000000040000&quot;,&quot;0&quot;,&quot;Cstdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005960" startTime="2024-04-03T16:58:35.0369234+02:00" endTime="2024-04-03T16:58:35.0375190+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3917adc4-edf3-48f7-bd8d-88418e40f31a">
      <Output>
        <StdOut>When I parse 'B000000000000000000000040000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Cstdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Cstdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="069092e0-9e7e-4297-88c3-956f73397c71" testId="50ededf9-3f7e-fc9a-9d02-1c40afd11853" testName="DimensionToPort(&quot;C000000000000000000000000000000000000000000000000P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005230" startTime="2024-04-03T16:58:35.0870369+02:00" endTime="2024-04-03T16:58:35.0875599+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="069092e0-9e7e-4297-88c3-956f73397c71">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000P00' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToPort is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToPortIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e862ff48-4e1a-46d3-a7b2-4034377aeafd" testId="c476bd87-46cc-55ec-0afc-0ee1f96595b0" testName="RepeatIndicator(&quot;BCm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:35.0679492+02:00" endTime="2024-04-03T16:58:35.0682942+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e862ff48-4e1a-46d3-a7b2-4034377aeafd">
      <Output>
        <StdOut>When I parse 'BCm?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("BCm?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="500e6470-beb8-4331-9d03-4e79870b4b96" testId="91358b4e-2d29-1192-d1ba-563032ec4754" testName="ETAMonth(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2159566+02:00" endTime="2024-04-03T16:58:35.2163518+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="500e6470-beb8-4331-9d03-4e79870b4b96">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 5&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d1194330-d4e0-457d-9c41-3ff905693e9a" testId="f697d8de-1295-8c02-3d1a-5730e5d5c0d9" testName="ETAHour(&quot;53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003920" startTime="2024-04-03T16:58:35.2059444+02:00" endTime="2024-04-03T16:58:35.2063366+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d1194330-d4e0-457d-9c41-3ff905693e9a">
      <Output>
        <StdOut>When I parse '53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mg2o400000hOSGO...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88a654dd-6515-49a2-8816-85f5d7f6a88d" testId="bda8a6b6-60af-8b36-56f7-510a085964e2" testName="Spare(&quot;C00000000000000000000000000000000000000000000000000?&quot;,&quot;0&quot;,&quot;15&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003869" startTime="2024-04-03T16:58:35.1262619+02:00" endTime="2024-04-03T16:58:35.1266489+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88a654dd-6515-49a2-8816-85f5d7f6a88d">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000000000?' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 15&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(15) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="44d8c295-3a93-4430-bbbc-c05cb8f207c1" testId="08567abd-2ee7-1452-cc20-ca2d49debdd5" testName="CallSign(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009650" startTime="2024-04-03T16:58:35.1689129+02:00" endTime="2024-04-03T16:58:35.1698780+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="44d8c295-3a93-4430-bbbc-c05cb8f207c1">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is @@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2e994ae2-c944-4a08-ada2-5c1b2fcc4711" testId="888fe45a-f7d5-3444-ef43-8ab3896d4a7c" testName="ConvertAIS6_BitCharacterToASCII(&quot;25&quot;,&quot;'Y'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002390" startTime="2024-04-03T16:58:35.3338561+02:00" endTime="2024-04-03T16:58:35.3340946+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2e994ae2-c944-4a08-ada2-5c1b2fcc4711">
      <Output>
        <StdOut>When I convert the AIS character value 25 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(25) (0,0s)&#xD;
Then the converted ASCII value should be 'Y'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(Y) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d165e9b3-b018-4001-beeb-56303a1262a9" testId="469ffce6-b0be-9f13-4b85-e39790b88e1d" testName="DSCFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008900" startTime="2024-04-03T16:58:35.0404148+02:00" endTime="2024-04-03T16:58:35.0413044+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d165e9b3-b018-4001-beeb-56303a1262a9">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c9f241c9-6af5-4216-a6b4-b1b650f5a42e" testId="b3603fb8-b01f-e636-b3b2-815f3d2282d6" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000001400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;17&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3735829+02:00" endTime="2024-04-03T16:58:35.3738813+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c9f241c9-6af5-4216-a6b4-b1b650f5a42e">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000001400000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000001400...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(17) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b83b6818-9c22-46f8-b7b0-1f38058b752f" testId="aba19db0-7fd8-f103-2f47-f4947250c1be" testName="ConvertAIS6_BitCharacterToASCII(&quot;26&quot;,&quot;'Z'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3341028+02:00" endTime="2024-04-03T16:58:35.3343236+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b83b6818-9c22-46f8-b7b0-1f38058b752f">
      <Output>
        <StdOut>When I convert the AIS character value 26 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(26) (0,0s)&#xD;
Then the converted ASCII value should be 'Z'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(Z) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7ba6131b-8a86-4cad-ba63-d1b3154bb1fb" testId="4fa87240-6be7-c557-1146-deb2877c6b30" testName="RepeatIndicator(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009530" startTime="2024-04-03T16:58:35.0650547+02:00" endTime="2024-04-03T16:58:35.0660080+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ba6131b-8a86-4cad-ba63-d1b3154bb1fb">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f2e3320b-b7a6-47a0-86a9-f2f9167d8106" testId="d0cb2b1a-640b-cb08-528d-e5506b132ea2" testName="AISVersion(&quot;50000080000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004090" startTime="2024-04-03T16:58:35.1668393+02:00" endTime="2024-04-03T16:58:35.1672484+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f2e3320b-b7a6-47a0-86a9-f2f9167d8106">
      <Output>
        <StdOut>When I parse '50000080000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000080000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="874eabfd-64c5-4ad4-9ff1-9604194f779f" testId="c8d94c85-217c-7de3-5d79-63f993898555" testName="EmptyFile" computerName="SCODE-HF8MJR2" duration="00:00:00.0021460" startTime="2024-04-03T16:58:35.5244261+02:00" endTime="2024-04-03T16:58:35.5265716+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="874eabfd-64c5-4ad4-9ff1-9604194f779f">
      <Output>
        <StdOut>Given no content&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenNoContent() (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
And INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6db55114-6532-4246-93bb-234958381b22" testId="39835474-c23a-0357-9d98-c66ed3b78236" testName="PartBSerialNumber(&quot;H000004000000020000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004180" startTime="2024-04-03T16:58:35.3005498+02:00" endTime="2024-04-03T16:58:35.3009677+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6db55114-6532-4246-93bb-234958381b22">
      <Output>
        <StdOut>When I parse 'H000004000000020000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000200...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="debaec99-5964-4e03-b1ef-9044cd262e60" testId="60e8c0a2-01de-0c70-a0ec-2bd12f188c71" testName="MultipleLines" computerName="SCODE-HF8MJR2" duration="00:00:00.0014290" startTime="2024-04-03T16:58:35.4982815+02:00" endTime="2024-04-03T16:58:35.4997099+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="debaec99-5964-4e03-b1ef-9044cd262e60">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ad37784e-2e51-4f74-aad3-1a4dbcaf7e94" testId="2f58c993-fa10-ded5-1568-481030cb968f" testName="ConvertAIS6_BitCharacterToASCII(&quot;51&quot;,&quot;'3'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3425169+02:00" endTime="2024-04-03T16:58:35.3427376+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ad37784e-2e51-4f74-aad3-1a4dbcaf7e94">
      <Output>
        <StdOut>When I convert the AIS character value 51 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(51) (0,0s)&#xD;
Then the converted ASCII value should be '3'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e407f8c9-4e92-46be-a689-ed5f7eb90a96" testId="1806a801-45ca-e2d6-481b-b9db5e179773" testName="FullMessage(&quot;6&gt;oHhp000000&gt;da30000@00&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;997601504&quot;,&quot;0&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;235&quot;,&quot;10&quot;,&quot;4&quot;,&quot;a30000@00&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0099919" startTime="2024-04-03T16:58:34.7474822+02:00" endTime="2024-04-03T16:58:34.7574742+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e407f8c9-4e92-46be-a689-ed5f7eb90a96">
      <Output>
        <StdOut>When I parse '6&gt;oHhp000000&gt;da30000@00' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;oHhp000000&gt;da30...", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Mmsi is 997601504&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_MmsiIs(997601504) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DestinationMmsi is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DestinationMmsiIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DAC is 235&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DACIs(235) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.FI is 10&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_FIIs(10) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationDataPadding is 4&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationData is a30000@00&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataIs("a30000@00") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a321fe1-62f5-49e8-915f-6946c2d0efcc" testId="24f2e515-f6c4-b384-48d7-ebc7d46b1072" testName="TrueHeading(&quot;1000000000000000000000200000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004710" startTime="2024-04-03T16:58:35.0228486+02:00" endTime="2024-04-03T16:58:35.0233191+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a321fe1-62f5-49e8-915f-6946c2d0efcc">
      <Output>
        <StdOut>When I parse '1000000000000000000000200000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="94e64f75-6092-4f66-9dec-7d0d196dc0ad" testId="f2e82c15-888e-1f07-9ea4-c3ec2f89ca75" testName="IECTagBlockSingleLineWithGroup" computerName="SCODE-HF8MJR2" duration="00:00:00.0014460" startTime="2024-04-03T16:58:35.5496635+02:00" endTime="2024-04-03T16:58:35.5511098+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="94e64f75-6092-4f66-9dec-7d0d196dc0ad">
      <Output>
        <StdOut>When I parse '1G2:7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("1G2:7764,s:AIS,c:...", False, IEC) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="64f2404c-b42a-4fba-a97c-f9acdce60dfe" testId="839a5105-1f29-8cd7-59d6-7db4c115ed2f" testName="ETAMonth(&quot;50000000000000000000000000000000000000000000020000000000000000000000000&quot;,&quot;2&quot;,&quot;8&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.2147326+02:00" endTime="2024-04-03T16:58:35.2151250+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="64f2404c-b42a-4fba-a97c-f9acdce60dfe">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000020000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 8&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cce3f27a-6f8f-4250-b2bb-3a89f3ef8aef" testId="37a0febe-8c68-5733-dc6c-6a87aaaf111f" testName="UnsignedAligned6_BitInteger(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;0&quot;,&quot;18&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3648144+02:00" endTime="2024-04-03T16:58:35.3651122+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cce3f27a-6f8f-4250-b2bb-3a89f3ef8aef">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(18) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4b19edf1-3fca-4443-bfd4-ed6182e56d83" testId="923c683d-3832-13ef-fba0-99eb35a73d99" testName="FullMessage(&quot;D02;bMhRl@fq6DA6DB0i6D0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;2288247&quot;,&quot;0&quot;,&quot;557&quot;,&quot;1&quot;,&quot;0&quot;,&quot;750&quot;,&quot;1125&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1125&quot;,&quot;288&quot;,&quot;3&quot;,&quot;0&quot;,&quot;1125&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0127190" startTime="2024-04-03T16:58:34.8853555+02:00" endTime="2024-04-03T16:58:34.8980741+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4b19edf1-3fca-4443-bfd4-ed6182e56d83">
      <Output>
        <StdOut>When I parse 'D02;bMhRl@fq6DA6DB0i6D0' with padding 0 as a Data link management message&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.WhenIParseWithNmeaAisDataLinkManagementMessageParser("D02;bMhRl@fq6DA6D...", 0) (0,0s)&#xD;
Then NmeaAisDataLinkManagementMessageParser.Type is 20&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_TypeIs(DataLinkManagemen...) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Mmsi is 2288247&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_MmsiIs(2288247) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBits38 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset1 is 557&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset1Is(557) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber1 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber1Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout1 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout1Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment1 is 750&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment1Is(750) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset2 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset2Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber2 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber2Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout2 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout2Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment2 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment2Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset3 is 288&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset3Is(288) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber3 is 3&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber3Is(3) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout3 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout3Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment3 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment3Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBitsAtEnd is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBitsAtEndAIs(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f48d891c-a317-4c7c-aa2f-8e38d27f5303" testId="de6627ad-15e5-30f9-1318-ea5613250e56" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;16&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002960" startTime="2024-04-03T16:58:35.3797548+02:00" endTime="2024-04-03T16:58:35.3800502+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f48d891c-a317-4c7c-aa2f-8e38d27f5303">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 16&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 16) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c5b55a1a-b4d3-4c29-b129-2433c0b224f5" testId="288e331f-dd13-e90a-6db1-d3ccaf6157b9" testName="ETAHour(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;12&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.2067539+02:00" endTime="2024-04-03T16:58:35.2071502+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c5b55a1a-b4d3-4c29-b129-2433c0b224f5">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 12&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(12) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c64b9e34-1420-4510-b975-2c07797a6b41" testId="f6d3c818-2378-97f3-6dd0-e9412954d170" testName="DimensionToStarboard(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003990" startTime="2024-04-03T16:58:35.1846737+02:00" endTime="2024-04-03T16:58:35.1850723+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c64b9e34-1420-4510-b975-2c07797a6b41">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9c7af05a-25e0-46ed-88e2-87c969b0a98f" testId="210dd2f2-f6e5-7324-9d3b-0b6365bf71c4" testName="MultipleCRLFBlankLinesOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0023280" startTime="2024-04-03T16:58:35.4949381+02:00" endTime="2024-04-03T16:58:35.4972662+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c7af05a-25e0-46ed-88e2-87c969b0a98f">
      <Output>
        <StdOut>Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b701e2f6-e4b8-4913-9b34-488a2072919d" testId="ca38d60f-263b-6c21-df05-c79882baf833" testName="SpeedOverGround(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009180" startTime="2024-04-03T16:58:35.0690196+02:00" endTime="2024-04-03T16:58:35.0699378+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b701e2f6-e4b8-4913-9b34-488a2072919d">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="57c84cad-7f28-4c1f-9093-a39613bb38d8" testId="8b2f87e0-a176-53e2-38fd-811cdd2a11e2" testName="LongitudeAndLatitute(&quot;C000000000000000004000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005140" startTime="2024-04-03T16:58:35.0955177+02:00" endTime="2024-04-03T16:58:35.0960319+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57c84cad-7f28-4c1f-9093-a39613bb38d8">
      <Output>
        <StdOut>When I parse 'C000000000000000004000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ceed2a33-93be-4428-bbf8-3ca000e796e0" testId="fe4aec47-605e-5a1d-4b60-5cb80fd16085" testName="LongitudeAndLatitude(&quot;B0000000000000P0000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005999" startTime="2024-04-03T16:58:35.0439815+02:00" endTime="2024-04-03T16:58:35.0445810+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ceed2a33-93be-4428-bbf8-3ca000e796e0">
      <Output>
        <StdOut>When I parse 'B0000000000000P0000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000P00...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(1) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5d14ea4b-ad28-49b7-8f1f-30bf10cb38c3" testId="cd218e62-906a-0437-5a38-b921aaff7b1e" testName="VesselName(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009820" startTime="2024-04-03T16:58:35.2418217+02:00" endTime="2024-04-03T16:58:35.2428036+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5d14ea4b-ad28-49b7-8f1f-30bf10cb38c3">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7dc41a8-0eef-42a4-bece-90a4620d4ff4" testId="5a305fcb-7da2-d366-74b1-77cc61e7bfac" testName="CourseOverGround(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008930" startTime="2024-04-03T16:58:35.0320187+02:00" endTime="2024-04-03T16:58:35.0329118+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7dc41a8-0eef-42a4-bece-90a4620d4ff4">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="acd8b8e9-cc0f-41a3-97c2-2099c7f9cc41" testId="44be0c2c-36c0-437d-8e12-8d4046318e29" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0005090" startTime="2024-04-03T16:58:34.8008628+02:00" endTime="2024-04-03T16:58:34.8013715+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="acd8b8e9-cc0f-41a3-97c2-2099c7f9cc41">
      <Output>
        <StdOut>When I parse 'Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("Evlt&lt;Cf50QUaWW@97...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cce31100-4d37-4506-b097-d12f4fd764e1" testId="73781839-e391-f846-4ded-b9e602f19ac5" testName="NavigationStatus(&quot;13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForWig&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:34.9828628+02:00" endTime="2024-04-03T16:58:34.9832064+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cce31100-4d37-4506-b097-d12f4fd764e1">
      <Output>
        <StdOut>When I parse '13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mClB:Oi&lt;Pi:U4U5...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForWig&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="01819bd8-44f0-41fe-99fd-97a828efaf78" testId="a03d9afd-4326-5e24-0e7e-ac2f20f591a3" testName="UnsignedMisaligned6_BitInteger(&quot;10000000000000000000001d0000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;54&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3710952+02:00" endTime="2024-04-03T16:58:35.3713971+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="01819bd8-44f0-41fe-99fd-97a828efaf78">
      <Output>
        <StdOut>Given an NMEA AIS payload of '10000000000000000000001d0000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 54&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(54) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f152a532-21a9-4375-8c8c-33d77abf06c5" testId="56bd4a5b-9e83-03fd-8e58-a9a6f004a9f7" testName="Name(&quot;C00000000000000000000001suv0000000000000000000000000&quot;,&quot;0&quot;,&quot;=&gt;?@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004130" startTime="2024-04-03T16:58:35.1034517+02:00" endTime="2024-04-03T16:58:35.1038644+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f152a532-21a9-4375-8c8c-33d77abf06c5">
      <Output>
        <StdOut>When I parse 'C00000000000000000000001suv0000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is '=&gt;?@@@@@@@@@@@@@@@@@'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("=&gt;?@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="79bce66a-af03-4fe4-875e-6dcea8e6cfba" testId="05eca697-b5c4-7c26-1a4c-074f93a061ee" testName="RegionalReservedBits139_140(&quot;B0000000000000000000000@0000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003510" startTime="2024-04-03T16:58:35.0614290+02:00" endTime="2024-04-03T16:58:35.0617794+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="79bce66a-af03-4fe4-875e-6dcea8e6cfba">
      <Output>
        <StdOut>When I parse 'B0000000000000000000000@0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="128a960c-9041-46c8-9b3c-0d955c461593" testId="7f02808f-10c5-a699-3eea-c833d77861ff" testName="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000:0&quot;,&quot;0&quot;,&quot;Chayka&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003920" startTime="2024-04-03T16:58:35.1081628+02:00" endTime="2024-04-03T16:58:35.1085550+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="128a960c-9041-46c8-9b3c-0d955c461593">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000000000:0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Chayka&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Chayka) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a88b132c-d87a-4c7c-b1c9-b6a39741e4ad" testId="e54eb199-13ef-3101-0972-2525e1643532" testName="DimensionToStern(&quot;500000000000000000000000000000000000000007w0000000000000000000000000000&quot;,&quot;2&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004040" startTime="2024-04-03T16:58:35.1870051+02:00" endTime="2024-04-03T16:58:35.1874091+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a88b132c-d87a-4c7c-b1c9-b6a39741e4ad">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000007w0000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 511&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fb5ab28b-aa25-43cf-8eb9-bddad0f47315" testId="012638aa-ef08-c200-88a1-fe71c9167a59" testName="FullMessage(&quot;88uQwV00G@:?&gt;G1?6600&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;601391000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;29&quot;,&quot;2&quot;,&quot;@:?&gt;G1?6600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0061110" startTime="2024-04-03T16:58:34.8327073+02:00" endTime="2024-04-03T16:58:34.8388176+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fb5ab28b-aa25-43cf-8eb9-bddad0f47315">
      <Output>
        <StdOut>When I parse '88uQwV00G@:?&gt;G1?6600' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("88uQwV00G@:?&gt;G1?6600", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.Mmsi is 601391000&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_MmsiIs(601391000) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.SpareBits38 is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.DAC is 1&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_DACIs(1) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.FI is 29&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_FIIs(29) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationDataPadding is 2&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationData is @:?&gt;G1?6600&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataIs("@:?&gt;G1?6600") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="17f1fb45-35df-470a-a720-7c68d7e516a1" testId="eb6428fb-6908-4aa9-d71f-d91f19fd7889" testName="VesselName(&quot;50000000000000000030000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004230" startTime="2024-04-03T16:58:35.2433802+02:00" endTime="2024-04-03T16:58:35.2438036+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17f1fb45-35df-470a-a720-7c68d7e516a1">
      <Output>
        <StdOut>When I parse '50000000000000000030000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is 0@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("0@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0e85c9b3-5490-4716-8a5c-f0a93efe1862" testId="f839b87e-4f92-7b55-2a9c-2b5cbbcc720e" testName="SpareBitsAt145(&quot;100000000000000000000000&lt;000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0118912+02:00" endTime="2024-04-03T16:58:35.0122337+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0e85c9b3-5490-4716-8a5c-f0a93efe1862">
      <Output>
        <StdOut>When I parse '100000000000000000000000&lt;000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="683ee9ae-5f3b-4ca6-bbaf-e59fac4b223c" testId="377f3b3a-c8ae-c7ef-41f1-74d2c7caaeb4" testName="PartASpare(&quot;H000000000000000000000000010&quot;,&quot;0&quot;,&quot;64&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004320" startTime="2024-04-03T16:58:35.2659450+02:00" endTime="2024-04-03T16:58:35.2663768+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="683ee9ae-5f3b-4ca6-bbaf-e59fac4b223c">
      <Output>
        <StdOut>When I parse 'H000000000000000000000000010' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 64&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(64) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="941ae2cf-0a53-498e-9b40-0708826e7451" testId="d5322110-61d8-1cb9-43aa-234c410a1e7b" testName="RadioSlotTimeout(&quot;1000000000000000000000000800&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:34.9882811+02:00" endTime="2024-04-03T16:58:34.9886249+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="941ae2cf-0a53-498e-9b40-0708826e7451">
      <Output>
        <StdOut>When I parse '1000000000000000000000000800' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="30a53541-957b-42dd-9c20-2fc085acabb7" testId="54ce8bfd-78cc-1fc5-f5cf-02e9dbb2d354" testName="RegionalReservedBits38_45(&quot;C00000?t00000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;255&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003890" startTime="2024-04-03T16:58:35.1183613+02:00" endTime="2024-04-03T16:58:35.1187501+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="30a53541-957b-42dd-9c20-2fc085acabb7">
      <Output>
        <StdOut>When I parse 'C00000?t00000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000?t000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 255&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(255) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="67630b7f-7b88-414d-b9b5-b5b63cdae00c" testId="3981900f-d4cb-7487-bed4-7b989acf9c4b" testName="RateOfTurn(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;-128&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003370" startTime="2024-04-03T16:58:35.0059270+02:00" endTime="2024-04-03T16:58:35.0062636+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="67630b7f-7b88-414d-b9b5-b5b63cdae00c">
      <Output>
        <StdOut>When I parse '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is -128&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(-128) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0b1d027c-3d31-450b-a6e7-7c8dadb9267f" testId="a1846472-4b3c-dbed-322f-d102d3addb86" testName="AISTalkerId(&quot;AXVDM&quot;,&quot;RepeaterStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002260" startTime="2024-04-03T16:58:35.5705756+02:00" endTime="2024-04-03T16:58:35.5708012+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0b1d027c-3d31-450b-a6e7-7c8dadb9267f">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'AXVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AXVDM") (0,0s)&#xD;
Then the AisTalker is 'RepeaterStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(RepeaterStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="825d5335-cd12-4ca9-854f-18175e48b930" testId="1a037fdb-7e21-141c-ff31-66214af5c84f" testName="RadioStatusType(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010970" startTime="2024-04-03T16:58:35.0557387+02:00" endTime="2024-04-03T16:58:35.0568350+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="825d5335-cd12-4ca9-854f-18175e48b930">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RadioStatusType is Sotdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RadioStatusTypeIsSOTDMA(Sotdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="406731a3-f1e5-4a66-a418-b4fce3dc44bb" testId="f25d5f69-ea1c-165a-bb93-fb01d1653dac" testName="PartAMMSI(&quot;H00000P00000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.2558271+02:00" endTime="2024-04-03T16:58:35.2561682+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="406731a3-f1e5-4a66-a418-b4fce3dc44bb">
      <Output>
        <StdOut>When I parse 'H00000P00000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H00000P0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d7f2c3b-4455-40cc-8210-b7fa37ad2df0" testId="6df9afa2-d06b-689e-5a74-517d0b0ed892" testName="SingleBit(&quot;0000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011550" startTime="2024-04-03T16:58:35.3538522+02:00" endTime="2024-04-03T16:58:35.3550066+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d7f2c3b-4455-40cc-8210-b7fa37ad2df0">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c6d50ee0-6a59-4f68-a314-fec060096e9c" testId="11d3a129-53db-aa59-4c2c-5ae5e06bed1f" testName="SpeedOverGround(&quot;B0000003wh000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003510" startTime="2024-04-03T16:58:35.0704396+02:00" endTime="2024-04-03T16:58:35.0707906+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c6d50ee0-6a59-4f68-a314-fec060096e9c">
      <Output>
        <StdOut>When I parse 'B0000003wh000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000003wh0000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(1023) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="da6be5d7-6be8-4528-93b9-b63b49506309" testId="efa984ee-a860-9b4a-86fc-78bdbca9efd8" testName="SingleBit(&quot;0000000000000000000000000000&quot;,&quot;0&quot;,&quot;60&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018060" startTime="2024-04-03T16:58:35.3589045+02:00" endTime="2024-04-03T16:58:35.3607106+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="da6be5d7-6be8-4528-93b9-b63b49506309">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0a85ff21-94a5-4d17-b650-eed48805a975" testId="85b64cab-4ae7-6812-6d95-d82c298a15ec" testName="RAIMFlag(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009510" startTime="2024-04-03T16:58:35.1097836+02:00" endTime="2024-04-03T16:58:35.1107347+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0a85ff21-94a5-4d17-b650-eed48805a975">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RaimFlag is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RaimFlagIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b3ba5822-9290-456a-8721-5ae05dbff08f" testId="4e4d1800-0ed1-5265-c300-02f4b5a4dce0" testName="DimensionToBow(&quot;50000000000000000000000000000000000000000800000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005340" startTime="2024-04-03T16:58:35.1776563+02:00" endTime="2024-04-03T16:58:35.1781902+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b3ba5822-9290-456a-8721-5ae05dbff08f">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000800000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2d585a92-fd97-4c6c-93bc-88f681b46725" testId="1ce261c8-497d-8b9d-cb4a-891ee95f43b9" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000002000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;32&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3738897+02:00" endTime="2024-04-03T16:58:35.3741895+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d585a92-fd97-4c6c-93bc-88f681b46725">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000002000000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000002000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 32&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(32) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7e0a6252-94e6-48a8-86b2-e04f02934864" testId="abe7676e-46a3-96cb-09e5-40bd01cf47d1" testName="SpeedOverGround(&quot;C00000000@000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005199" startTime="2024-04-03T16:58:35.1276309+02:00" endTime="2024-04-03T16:58:35.1281505+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e0a6252-94e6-48a8-86b2-e04f02934864">
      <Output>
        <StdOut>When I parse 'C00000000@000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000000@0000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_SpeedOverGroundTenthsIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="27e412c1-8157-45c6-83ad-17800eb72854" testId="2b4154d4-acc4-cb94-f810-d9ac46e11df5" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0005340" startTime="2024-04-03T16:58:34.7791831+02:00" endTime="2024-04-03T16:58:34.7797170+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="27e412c1-8157-45c6-83ad-17800eb72854">
      <Output>
        <StdOut>When I parse '&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;37ood0ne&gt;80P@&lt;CP...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4f765b80-6353-4e2c-915f-fb4c6651edb4" testId="aed13b2c-262a-03c1-351f-cca161871d2e" testName="LongitudeAndLatitute(&quot;1000000000000000000@00000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:34.9594674+02:00" endTime="2024-04-03T16:58:34.9599416+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4f765b80-6353-4e2c-915f-fb4c6651edb4">
      <Output>
        <StdOut>When I parse '1000000000000000000@00000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5040d464-cb65-4c76-9464-2616626ea57d" testId="f64b6fed-6500-8e88-8257-f3f0e703d03d" testName="RAIMFlag(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:35.0592896+02:00" endTime="2024-04-03T16:58:35.0596388+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5040d464-cb65-4c76-9464-2616626ea57d">
      <Output>
        <StdOut>When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6eae7cb5-796c-4096-92e6-7203b72232dc" testId="4ad0ffed-0277-2ee8-5633-814e7ca2265b" testName="FullMessage(&quot;D02;bMR0tLfp00M6EpDu6D0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;2288246&quot;,&quot;0&quot;,&quot;2063&quot;,&quot;1&quot;,&quot;6&quot;,&quot;750&quot;,&quot;0&quot;,&quot;1&quot;,&quot;6&quot;,&quot;1125&quot;,&quot;1925&quot;,&quot;3&quot;,&quot;6&quot;,&quot;1125&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0031449" startTime="2024-04-03T16:58:34.8980884+02:00" endTime="2024-04-03T16:58:34.9012329+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6eae7cb5-796c-4096-92e6-7203b72232dc">
      <Output>
        <StdOut>When I parse 'D02;bMR0tLfp00M6EpDu6D0' with padding 0 as a Data link management message&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.WhenIParseWithNmeaAisDataLinkManagementMessageParser("D02;bMR0tLfp00M6E...", 0) (0,0s)&#xD;
Then NmeaAisDataLinkManagementMessageParser.Type is 20&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_TypeIs(DataLinkManagemen...) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Mmsi is 2288246&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_MmsiIs(2288246) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBits38 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset1 is 2063&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset1Is(2063) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber1 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber1Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout1 is 6&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout1Is(6) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment1 is 750&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment1Is(750) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset2 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset2Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber2 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber2Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout2 is 6&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout2Is(6) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment2 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment2Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset3 is 1925&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset3Is(1925) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber3 is 3&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber3Is(3) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout3 is 6&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout3Is(6) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment3 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment3Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBitsAtEnd is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBitsAtEndAIs(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eb490479-861e-4602-9b99-b2a7c4f91843" testId="1dc13f6c-fed8-644e-2fda-7f8d9d11645e" testName="DimensionToPort(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009510" startTime="2024-04-03T16:58:35.0860715+02:00" endTime="2024-04-03T16:58:35.0870227+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb490479-861e-4602-9b99-b2a7c4f91843">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToPort is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToPortIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5746b43d-74f3-47f0-b5bd-1b477e1a0925" testId="fa989d09-4d29-033e-a691-ce11b14965a5" testName="MMSI(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010399" startTime="2024-04-03T16:58:35.0496011+02:00" endTime="2024-04-03T16:58:35.0506408+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5746b43d-74f3-47f0-b5bd-1b477e1a0925">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="56cd6eae-5ac5-460e-98cb-8bf2712887ff" testId="64667372-7785-62d8-9295-57cd2ebfc7a7" testName="MultipleLinesWithBlanksAtEnd" computerName="SCODE-HF8MJR2" duration="00:00:00.0014150" startTime="2024-04-03T16:58:35.5013034+02:00" endTime="2024-04-03T16:58:35.5027184+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56cd6eae-5ac5-460e-98cb-8bf2712887ff">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="458129cc-06dd-4612-b51e-f7fe5d5fa2ab" testId="928b4530-2f70-467d-7fc2-565740358501" testName="PartBDimensionToStern(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008820" startTime="2024-04-03T16:58:35.2854820+02:00" endTime="2024-04-03T16:58:35.2863637+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="458129cc-06dd-4612-b51e-f7fe5d5fa2ab">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="011e3f16-8ec0-4593-887b-96e189a5b6a5" testId="863ddb91-388e-49d5-1e8c-1746bdb93ed7" testName="CSUnitFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011329" startTime="2024-04-03T16:58:35.0357774+02:00" endTime="2024-04-03T16:58:35.0369099+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="011e3f16-8ec0-4593-887b-96e189a5b6a5">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Sotdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Sotdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ef4201ba-f0a8-4674-9913-bade755d2ceb" testId="03d351ba-88c1-7fe2-b09e-51c7c615b3cc" testName="LongitudeAndLatitute(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;3390490&quot;,&quot;37393824&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004680" startTime="2024-04-03T16:58:34.9609026+02:00" endTime="2024-04-03T16:58:34.9613705+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ef4201ba-f0a8-4674-9913-bade755d2ceb">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 3390490&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(3390490) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 37393824&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(37393824) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="547243e1-64e1-437a-b732-d3b91bbc44c2" testId="6934b211-c797-d496-a6e3-95beb6abab3b" testName="FullMessage(&quot;?1b60U0kNVOP&lt;005000&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;111247508&quot;,&quot;0&quot;,&quot;215915000&quot;,&quot;3&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0023060" startTime="2024-04-03T16:58:34.9321281+02:00" endTime="2024-04-03T16:58:34.9344344+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="547243e1-64e1-437a-b732-d3b91bbc44c2">
      <Output>
        <StdOut>When I parse '?1b60U0kNVOP&lt;005000' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?1b60U0kNVOP&lt;005000", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
And NmeaAisInterrogationParser.RepeatIndicator is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.Mmsi is 111247508&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MmsiIs(111247508) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits38 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi1 is 215915000&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi1Is(215915000) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType11 is 3&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType11Is(3) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset11 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset11Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits88 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits88Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType12 is 5&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType12Is(5) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset12 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset12Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits108 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits108Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi2 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi2Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits158 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits158Is(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="48db881f-dfb4-4139-a1a4-98f812495d3b" testId="e18d598b-6e72-0fe9-f26b-3d06fa0ef488" testName="FullMessage(&quot;A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2242121&quot;,&quot;0&quot;,&quot;-3828&quot;,&quot;21976&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0060470" startTime="2024-04-03T16:58:34.9126173+02:00" endTime="2024-04-03T16:58:34.9186640+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="48db881f-dfb4-4139-a1a4-98f812495d3b">
      <Output>
        <StdOut>When I parse 'A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028nBCt@hbs02GvJ...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Mmsi is 2242121&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_MmsiIs(2242121) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits38 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Longitude10thMins is -3828&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Longitude10thMinsIs(-3828) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Latitude10thMins is 21976&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Latitude10thMinsIs(21976) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits75 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits75Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionDataPadding is 2&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionData is 2GvJ:0`5?ku1ET:wdh69@gvkhH?&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataIs("2GvJ:0`5?ku1ET:wd...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4c37963d-17cd-4122-94b5-57dc72e0e0a7" testId="49f905b7-2729-ec3a-73d1-7f766540fbb6" testName="LongitudeAndLatitude(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;3096645&quot;,&quot;36216476&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004720" startTime="2024-04-03T16:58:35.0460295+02:00" endTime="2024-04-03T16:58:35.0465016+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4c37963d-17cd-4122-94b5-57dc72e0e0a7">
      <Output>
        <StdOut>When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 3096645&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(3096645) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 36216476&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(36216476) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7209ea64-10ac-4f4f-a369-7489c862d6f5" testId="c1dc7386-a289-2a43-ca7c-a9907f4128a9" testName="PartBUnitModelCode(&quot;H000004000080000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003300" startTime="2024-04-03T16:58:35.3101072+02:00" endTime="2024-04-03T16:58:35.3104370+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7209ea64-10ac-4f4f-a369-7489c862d6f5">
      <Output>
        <StdOut>When I parse 'H000004000080000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000800000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a4a25160-a0fa-4594-80d4-8778bc69acda" testId="6a26db61-b273-9a01-bdc9-e9638c2215d1" testName="DimensionToStern(&quot;C0000000000000000000000000000000000000000000003wP000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.0913956+02:00" endTime="2024-04-03T16:58:35.0917919+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a4a25160-a0fa-4594-80d4-8778bc69acda">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000003wP000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStern is 511&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToSternIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7288c4a9-2a73-4f65-9db9-6f282a68f199" testId="502021e0-1ebf-e675-0eda-8668ea396e48" testName="LineStreamParserReportsErrorInNon_FragmentedMessage" computerName="SCODE-HF8MJR2" duration="00:00:00.0009040" startTime="2024-04-03T16:58:35.4085043+02:00" endTime="2024-04-03T16:58:35.4094085+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7288c4a9-2a73-4f65-9db9-6f282a68f199">
      <Output>
        <StdOut>When the line to message adapter receives an error report for content 'foobar' with line number 42&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAnErrorReportForContentWithLineNumber("foobar", 42) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'foobar'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "foobar") (0,0s)&#xD;
And the message error report 0 should include the exception reported by the line stream parser&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.ThenTheMessageErrorReportShouldIncludeTheExceptionReportedByTheLineStreamParser(0) (0,0s)&#xD;
And the message error report 0 should include the line number 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 42) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="22e3f959-8f9c-44a7-af66-660e7d18e077" testId="ddea7248-313d-f096-a543-593947955b28" testName="SingleTruncatedLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0015690" startTime="2024-04-03T16:58:35.5213305+02:00" endTime="2024-04-03T16:58:35.5228999+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="22e3f959-8f9c-44a7-af66-660e7d18e077">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the message appears to be incomplete&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheMessageAppearsToBeTruncated(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3c94ae3a-2350-43dd-ad1c-a1c1f03e2b31" testId="44f35079-d059-a1a1-cc67-a215f0639d69" testName="DimensionToBow(&quot;53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000&quot;,&quot;2&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.1790199+02:00" endTime="2024-04-03T16:58:35.1794160+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3c94ae3a-2350-43dd-ad1c-a1c1f03e2b31">
      <Output>
        <StdOut>When I parse '53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m6;7`00000hEAP0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 6&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(6) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e4c950f9-d8e7-49ba-ac92-2704a0ebb955" testId="ed45f407-76f1-efe1-5539-924a7b8a3b96" testName="FullMessage(&quot;&lt;815N7n0AABp19CPD5CDP@&lt;CP13;QQ0&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;538009119&quot;,&quot;1&quot;,&quot;538002734&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot;AIS TEST PLS ACK!!@\&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0016980" startTime="2024-04-03T16:58:34.7760912+02:00" endTime="2024-04-03T16:58:34.7777890+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e4c950f9-d8e7-49ba-ac92-2704a0ebb955">
      <Output>
        <StdOut>When I parse '&lt;815N7n0AABp19CPD5CDP@&lt;CP13;QQ0' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;815N7n0AABp19CPD...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Mmsi is 538009119&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_MmsiIs(538009119) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SequenceNumber is 1&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SequenceNumberIs(1) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.DestinationMmsi is 538002734&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_DestinationMmsiIs(538002734) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RetransmitIs(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SafetyRelatedText is "AIS TEST PLS ACK!!@"&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SafetyRelatedTextIs(""AIS TEST PLS ACK...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bed898a6-98fb-4d7c-b9ed-66c9e04455d6" testId="b0150c2d-7e64-59ad-9486-1c3ce44d9090" testName="TrueHeading(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009030" startTime="2024-04-03T16:58:35.0219321+02:00" endTime="2024-04-03T16:58:35.0228351+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bed898a6-98fb-4d7c-b9ed-66c9e04455d6">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bea77e10-3743-4ceb-8da7-638435384b43" testId="3469b7d9-f2e6-2967-5df0-7bc30de34b83" testName="AISTalkerId(&quot;AIVDM&quot;,&quot;MobileStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002380" startTime="2024-04-03T16:58:35.5693826+02:00" endTime="2024-04-03T16:58:35.5696207+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bea77e10-3743-4ceb-8da7-638435384b43">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'AIVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AIVDM") (0,0s)&#xD;
Then the AisTalker is 'MobileStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(MobileStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c261b095-ab55-4145-9e03-327b913904cd" testId="7cf6f8c8-e4da-636b-a2fd-8373e5f2c18b" testName="ConvertAIS6_BitCharacterToASCII(&quot;59&quot;,&quot;';'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3443459+02:00" endTime="2024-04-03T16:58:35.3445662+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c261b095-ab55-4145-9e03-327b913904cd">
      <Output>
        <StdOut>When I convert the AIS character value 59 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(59) (0,0s)&#xD;
Then the converted ASCII value should be ';'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(;) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ca03b63c-b2f9-4d3d-936e-4b23a258dcb2" testId="868a3cec-638d-9e28-cfce-53ac3105558f" testName="MultipleLinesWhereFinalLineHasNoNewline" computerName="SCODE-HF8MJR2" duration="00:00:00.0012410" startTime="2024-04-03T16:58:35.5321125+02:00" endTime="2024-04-03T16:58:35.5333536+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca03b63c-b2f9-4d3d-936e-4b23a258dcb2">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And an unterminated line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ba70adda-bede-4466-b388-ff4bfdc1d720" testId="160b15a1-4aec-726a-e54e-a6c36a8756e1" testName="ManoeuvreIndicator(&quot;13m69r00AfPlnG6U;43aD7MO0534&quot;,&quot;0&quot;,&quot;SpecialManoeuvre&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003660" startTime="2024-04-03T16:58:34.9663463+02:00" endTime="2024-04-03T16:58:34.9667126+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ba70adda-bede-4466-b388-ff4bfdc1d720">
      <Output>
        <StdOut>When I parse '13m69r00AfPlnG6U;43aD7MO0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m69r00AfPlnG6U;...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is SpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(SpecialManoeuvre) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ee5f9a72-3106-4389-8fee-174d688853a6" testId="52aba770-0125-6d22-58a8-ab3ae6a42591" testName="FullMessage(&quot;F028n@R2N2P3D73EB6`&gt;6bT20000&quot;,&quot;0&quot;,&quot;22&quot;,&quot;0&quot;,&quot;2242114&quot;,&quot;0&quot;,&quot;2087&quot;,&quot;2088&quot;,&quot;0&quot;,&quot;false&quot;,&quot;108600&quot;,&quot;54600&quot;,&quot;108600&quot;,&quot;54600&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;4&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0105360" startTime="2024-04-03T16:58:34.8424121+02:00" endTime="2024-04-03T16:58:34.8529480+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee5f9a72-3106-4389-8fee-174d688853a6">
      <Output>
        <StdOut>When I parse 'F028n@R2N2P3D73EB6`&gt;6bT20000' with padding 0 as a Channel management&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.WhenIParseWithNmeaAisChannelManagementParser("F028n@R2N2P3D73EB...", 0) (0,0s)&#xD;
Then NmeaAisChannelManagementParser.Type is 22&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TypeIs(ChannelManagement) (0,0s)&#xD;
And NmeaAisChannelManagementParser.RepeatIndicator is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Mmsi is 2242114&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MmsiIs(2242114) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits38 is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelA is 2087&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelAIs(2087) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelB is 2088&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBIs(2088) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TxRxMode is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TxRxModeIs(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.LowPower is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_LowPowerIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins1 is 108600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins1Is(108600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins1 is 54600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins1Is(54600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins2 is 108600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins2Is(108600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins2 is 54600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins2Is(54600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.MessageIndicator is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MessageIndicatorIs(Brocast) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelABandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelABandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelBBandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBBandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TransitionalZoneSize is 4&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TransitionalZoneSizeIs(4) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits145 is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits145Is(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ae860caa-4170-46a6-8f88-a385d941b62b" testId="11a6f218-aa23-4161-0ac4-0a498a2f6034" testName="RadioSlotTimeout(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:34.9903923+02:00" endTime="2024-04-03T16:58:34.9907337+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae860caa-4170-46a6-8f88-a385d941b62b">
      <Output>
        <StdOut>When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="29563241-2b7a-41fa-8e13-1fe1dfc8b578" testId="264cd5c6-a4e2-d5ff-d135-e4f88a2529a2" testName="LongitudeAndLatitute(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0014250" startTime="2024-04-03T16:58:34.9574133+02:00" endTime="2024-04-03T16:58:34.9588379+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="29563241-2b7a-41fa-8e13-1fe1dfc8b578">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dc6beca2-d964-42e7-a642-2359ad1a4b58" testId="8ac20535-0278-9442-7732-425349ea785b" testName="RadioSubMessage(&quot;1000000000000000000000000200&quot;,&quot;0&quot;,&quot;8192&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004700" startTime="2024-04-03T16:58:34.9940914+02:00" endTime="2024-04-03T16:58:34.9945615+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc6beca2-d964-42e7-a642-2359ad1a4b58">
      <Output>
        <StdOut>When I parse '1000000000000000000000000200' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 8192&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(8192) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f4370971-9152-4de5-93a4-2d8c7ec4d59d" testId="3ccdf408-52f5-e60e-0f8d-e8ca446ac0cc" testName="DTEReady(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009700" startTime="2024-04-03T16:58:35.0918246+02:00" endTime="2024-04-03T16:58:35.0927948+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f4370971-9152-4de5-93a4-2d8c7ec4d59d">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DteNotReady is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DteNotReadyIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="68e9d9f3-43df-4ed0-86f1-f4842fa8d80f" testId="fd85adc2-d40c-9776-1165-db8e957025b8" testName="PeekMessageTypeWithoutDecodingInFull(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;18&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002360" startTime="2024-04-03T16:58:35.5631563+02:00" endTime="2024-04-03T16:58:35.5633919+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="68e9d9f3-43df-4ed0-86f1-f4842fa8d80f">
      <Output>
        <StdOut>When I peek at the payload 'B000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("B0000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 18&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(18) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0e1ea650-85d4-4ef1-83f4-60f41c1f288c" testId="21543dbb-4272-a14c-cda7-4aff8dd53072" testName="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;59&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3579659+02:00" endTime="2024-04-03T16:58:35.3582680+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0e1ea650-85d4-4ef1-83f4-60f41c1f288c">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000000P' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 59) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="929ddb14-891c-4538-82e0-addc456f021e" testId="8d57dd4e-d39e-4b3d-18eb-673b102ebba2" testName="BandFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009060" startTime="2024-04-03T16:58:35.0302196+02:00" endTime="2024-04-03T16:58:35.0311251+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="929ddb14-891c-4538-82e0-addc456f021e">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanSwitchBands is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanSwitchBands(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="34f743cd-cd51-430b-937d-f3aa3bc68a85" testId="b60587a9-bf4d-e481-4748-93dcadb46aed" testName="RadioSubMessage(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008940" startTime="2024-04-03T16:58:34.9931877+02:00" endTime="2024-04-03T16:58:34.9940816+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="34f743cd-cd51-430b-937d-f3aa3bc68a85">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4d23ab04-f6b2-4239-a444-3fa633b7753c" testId="27f580ae-6317-bd0d-796f-2b9270018a53" testName="IECTagBlockSingleLine(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010260" startTime="2024-04-03T16:58:35.5486147+02:00" endTime="2024-04-03T16:58:35.5496407+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4d23ab04-f6b2-4239-a444-3fa633b7753c">
      <Output>
        <StdOut>When I parse 's:AIS,c:1706800491*63' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:AIS,c:170680049...", False, IEC) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800491&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800491) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="91fa32f6-123f-48cc-974d-55f8d92eafcf" testId="abac8ee2-e918-2aa9-4a84-b928bfc796e9" testName="PartBVendorIDITU_R1371_3(&quot;H0000040Q0000000000000000000&quot;,&quot;0&quot;,&quot;!@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0015490" startTime="2024-04-03T16:58:35.3124356+02:00" endTime="2024-04-03T16:58:35.3139842+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91fa32f6-123f-48cc-974d-55f8d92eafcf">
      <Output>
        <StdOut>When I parse 'H0000040Q0000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040Q00000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is !@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("!@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ea7ba44b-a833-44c1-b89f-b59dbff036c0" testId="77df07c4-cd2b-ee74-62e6-63d3b19bbf2c" testName="NavigationStatus(&quot;15CIo&gt;401f0jO4hQ0KN&lt;F9n:0D&lt;P&quot;,&quot;0&quot;,&quot;ConstrainedByHerDraught&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:34.9809830+02:00" endTime="2024-04-03T16:58:34.9813260+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ea7ba44b-a833-44c1-b89f-b59dbff036c0">
      <Output>
        <StdOut>When I parse '15CIo&gt;401f0jO4hQ0KN&lt;F9n:0D&lt;P' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("15CIo&gt;401f0jO4hQ0...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ConstrainedByHerDraught&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ConstrainedByHerD...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0eabb53-b3f3-43e2-a44c-8337237e4ed6" testId="d296caba-9c79-6147-27a2-b4464ab723d2" testName="PartAMMSI(&quot;H3m8;Q1A8Tt0000000000000000&quot;,&quot;2&quot;,&quot;257035140&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.2568913+02:00" endTime="2024-04-03T16:58:35.2572321+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0eabb53-b3f3-43e2-a44c-8337237e4ed6">
      <Output>
        <StdOut>When I parse 'H3m8;Q1A8Tt0000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3m8;Q1A8Tt000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 257035140&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(257035140) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9b85c51a-4efd-416f-a3b3-862e7ea00bd4" testId="1efaab11-b9e4-1998-2011-ad66e8cf1802" testName="RegionalReservedBits139_140(&quot;B0000000000000000000000H0000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:35.0617924+02:00" endTime="2024-04-03T16:58:35.0621377+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9b85c51a-4efd-416f-a3b3-862e7ea00bd4">
      <Output>
        <StdOut>When I parse 'B0000000000000000000000H0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 3&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="25c4e5fb-968c-4ab5-9dc5-10ad215d96a9" testId="c911a2e4-a72e-0838-2bb0-d8ae70ce57e2" testName="ETAMonth(&quot;5000000000000000000000000000000000000000000001@000000000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.2143268+02:00" endTime="2024-04-03T16:58:35.2147202+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="25c4e5fb-968c-4ab5-9dc5-10ad215d96a9">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000001@000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 5&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="28fd4de1-1c72-4837-8f5b-7e3e9b7d8d0a" testId="842095d0-a381-ab02-c323-b34ad0dc07f2" testName="PartBVendorIDITU_R1371_3(&quot;H000004012345670000000000000&quot;,&quot;0&quot;,&quot;ABCDEFG&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003280" startTime="2024-04-03T16:58:35.3143378+02:00" endTime="2024-04-03T16:58:35.3146661+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="28fd4de1-1c72-4837-8f5b-7e3e9b7d8d0a">
      <Output>
        <StdOut>When I parse 'H000004012345670000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040123456700...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is ABCDEFG&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("ABCDEFG") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a95decc-001c-45b2-a2e2-c1a2533fa12f" testId="a1c713cc-d0b4-faa4-ec0d-c0b13b9449a9" testName="PositionAccuracy(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009650" startTime="2024-04-03T16:58:34.9846542+02:00" endTime="2024-04-03T16:58:34.9856188+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a95decc-001c-45b2-a2e2-c1a2533fa12f">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7cd4049d-4654-4656-b12c-7bd6e86e0b4c" testId="3631668e-100c-c00e-2f32-ca9ca70b0f89" testName="ConvertAIS6_BitCharacterToASCII(&quot;28&quot;,&quot;'\\'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002220" startTime="2024-04-03T16:58:35.3345606+02:00" endTime="2024-04-03T16:58:35.3347822+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7cd4049d-4654-4656-b12c-7bd6e86e0b4c">
      <Output>
        <StdOut>When I convert the AIS character value 28 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(28) (0,0s)&#xD;
Then the converted ASCII value should be '\'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(\) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aec3529c-f93b-47d2-b3cc-99400b1bf56a" testId="ae4bbadc-d58f-132c-7708-33d693cb8597" testName="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003040" startTime="2024-04-03T16:58:35.3557903+02:00" endTime="2024-04-03T16:58:35.3560946+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aec3529c-f93b-47d2-b3cc-99400b1bf56a">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 2) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2865b910-99e2-4cb0-b00a-f5d492657067" testId="d2c231c0-51e4-00e2-703f-c1a283e4cda9" testName="RepeatIndicator(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009560" startTime="2024-04-03T16:58:35.2317466+02:00" endTime="2024-04-03T16:58:35.2327026+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2865b910-99e2-4cb0-b00a-f5d492657067">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a14a4586-0be7-476b-b2a0-53c6ad5c7e6a" testId="c9d22342-68af-6f2b-9225-d04dde4b4033" testName="MultipleLinesWithBlanksInMiddle" computerName="SCODE-HF8MJR2" duration="00:00:00.0014150" startTime="2024-04-03T16:58:35.5041724+02:00" endTime="2024-04-03T16:58:35.5055876+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a14a4586-0be7-476b-b2a0-53c6ad5c7e6a">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a5e0c45-5a60-4417-829a-ce5e1d120a5c" testId="ae77094f-cd68-e0b9-529e-11cc5d77fa40" testName="RateOfTurn(&quot;1000000Oh0000000000000000000&quot;,&quot;0&quot;,&quot;127&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.0045339+02:00" endTime="2024-04-03T16:58:35.0048759+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a5e0c45-5a60-4417-829a-ce5e1d120a5c">
      <Output>
        <StdOut>When I parse '1000000Oh0000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000Oh00000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 127&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(127) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eee694df-c824-4137-90ed-3cfc14efa836" testId="3c579684-6f50-051b-fbec-837d1c70eb7e" testName="TimeStamp(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0205169+02:00" endTime="2024-04-03T16:58:35.0208596+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eee694df-c824-4137-90ed-3cfc14efa836">
      <Output>
        <StdOut>When I parse '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0a83e540-78e1-48f3-a33f-d4bc98647dba" testId="8c177594-daf2-f12c-22b9-6e1756881c46" testName="TrueHeading(&quot;100000000000000000000?v00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0017410" startTime="2024-04-03T16:58:35.0240638+02:00" endTime="2024-04-03T16:58:35.0258051+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0a83e540-78e1-48f3-a33f-d4bc98647dba">
      <Output>
        <StdOut>When I parse '100000000000000000000?v00000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="94f231ee-7e9f-4c71-b36c-f1e62c93cad2" testId="9d6359b4-c3e8-6c08-4062-845513e6a1a4" testName="PartBDimensionToBow(&quot;H000004000000000000000080000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004800" startTime="2024-04-03T16:58:35.2715257+02:00" endTime="2024-04-03T16:58:35.2720052+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="94f231ee-7e9f-4c71-b36c-f1e62c93cad2">
      <Output>
        <StdOut>When I parse 'H000004000000000000000080000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="43686dd3-b1fd-4227-a394-64f05966a59b" testId="e623abcf-d035-820d-d533-cba826ec3534" testName="CourseOverGround(&quot;100000000000000000000@000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006480" startTime="2024-04-03T16:58:34.9542047+02:00" endTime="2024-04-03T16:58:34.9548527+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="43686dd3-b1fd-4227-a394-64f05966a59b">
      <Output>
        <StdOut>When I parse '100000000000000000000@000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="412370b8-7d46-4ea3-944b-1f29b8823f9a" testId="3515468d-2a06-a106-4fe1-a0d265eeaeca" testName="CSUnitFlag(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:35.0375326+02:00" endTime="2024-04-03T16:58:35.0378817+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="412370b8-7d46-4ea3-944b-1f29b8823f9a">
      <Output>
        <StdOut>When I parse 'B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m:&lt;b0008&lt;B&lt;s8TO...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Sotdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Sotdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bbd0db66-b171-48c5-937e-36ef19649542" testId="e5723b77-b8d3-f19d-627e-7e14829ae702" testName="PartARepeatIndicator(&quot;Hh0000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.2631237+02:00" endTime="2024-04-03T16:58:35.2634673+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bbd0db66-b171-48c5-937e-36ef19649542">
      <Output>
        <StdOut>When I parse 'Hh0000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("Hh000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4cd871f3-2b8d-45dd-ab34-2250638311b5" testId="f02af770-5725-45ac-c92b-93c8ffef437d" testName="NavigationStatus(&quot;100000&gt;000000000000000000000&quot;,&quot;0&quot;,&quot;AisSartIsActive&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:34.9788689+02:00" endTime="2024-04-03T16:58:34.9792141+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4cd871f3-2b8d-45dd-ab34-2250638311b5">
      <Output>
        <StdOut>When I parse '100000&gt;000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000&gt;0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is AisSartIsActive&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(AisSartIsActive) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="70fb20f2-93c7-4af1-9b75-7d9d3e7d6b01" testId="5f81f8e5-a084-9939-006e-87b583a28cc6" testName="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000@0&quot;,&quot;0&quot;,&quot;Galileo&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003869" startTime="2024-04-03T16:58:35.1093631+02:00" endTime="2024-04-03T16:58:35.1097504+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="70fb20f2-93c7-4af1-9b75-7d9d3e7d6b01">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000000000@0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Galileo&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Galileo) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a88f042d-6363-464d-ab68-6169d42a2014" testId="41cd7e55-593f-9adf-ad9e-d0e2dfe10f3a" testName="FullMessage(&quot;KC5E2b@U19PFdLbMuc5=ROv62&lt;7m&quot;,&quot;0&quot;,&quot;27&quot;,&quot;1&quot;,&quot;206914217&quot;,&quot;false&quot;,&quot;false&quot;,&quot;2&quot;,&quot;82214&quot;,&quot;2904&quot;,&quot;57&quot;,&quot;167&quot;,&quot;false&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0098210" startTime="2024-04-03T16:58:34.9373590+02:00" endTime="2024-04-03T16:58:34.9471799+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a88f042d-6363-464d-ab68-6169d42a2014">
      <Output>
        <StdOut>When I parse 'KC5E2b@U19PFdLbMuc5=ROv62&lt;7m' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("KC5E2b@U19PFdLbMu...", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RepeatIndicator is 1&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RepeatIndicatorIs(1) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Mmsi is 206914217&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_MmsiIs(206914217) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionAccuracy is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RaimFlag is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.NavigationStatus is 2&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_NavigationStatusIs(NotUnderCommand) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Longitude10thMins is 82214&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Longitude10thMinsIs(82214) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Latitude10thMins is 2904&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Latitude10thMinsIs(2904) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpeedOverGround is 57&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpeedOverGroundIs(57) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.CourseOverGround is 167&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_CourseOverGroundIs(167) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionLatency is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionLatencyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpareBit94 is true&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpareBit94Is(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="87df9ca0-550d-406a-9db7-87bc5b63c436" testId="71b31e5e-a294-5c82-8cda-96afa1d33120" testName="MultipleLinesWithBlanksAtStart" computerName="SCODE-HF8MJR2" duration="00:00:00.0015380" startTime="2024-04-03T16:58:35.5347579+02:00" endTime="2024-04-03T16:58:35.5362961+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="87df9ca0-550d-406a-9db7-87bc5b63c436">
      <Output>
        <StdOut>Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="22a40835-6ff3-46e4-9f59-0f6de2539877" testId="0ffe36e8-8fbb-bc28-7710-cff9d80631c5" testName="TrueHeading(&quot;1000000000000000000000v00000&quot;,&quot;0&quot;,&quot;31&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003470" startTime="2024-04-03T16:58:35.0233322+02:00" endTime="2024-04-03T16:58:35.0236788+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="22a40835-6ff3-46e4-9f59-0f6de2539877">
      <Output>
        <StdOut>When I parse '1000000000000000000000v00000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 31&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(31) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fc41107e-59fe-41bd-bf3b-51c0ff621070" testId="71f06fff-8daf-ecab-97ba-da91159cc289" testName="ShipType(&quot;500000000000000000000000000000000000000E0000000000000000000000000000000&quot;,&quot;2&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005330" startTime="2024-04-03T16:58:35.2364419+02:00" endTime="2024-04-03T16:58:35.2369751+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fc41107e-59fe-41bd-bf3b-51c0ff621070">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000E0000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is WingInGroundHazardousCategoryA&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(WingInGroundHazar...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="db7937f2-cf7c-41cd-9f9c-c38b89e92bfe" testId="fdf1853c-e377-a4fe-8d82-1f9a08f84df1" testName="DimensionToBow(&quot;C00000000000000000000000000000000000000000000Ot00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.0856389+02:00" endTime="2024-04-03T16:58:35.0860342+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="db7937f2-cf7c-41cd-9f9c-c38b89e92bfe">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000Ot00000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToBow is 511&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToBowIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="726e90e9-2d4c-4ba6-90ba-507d489d4bbd" testId="d2f9b5e6-49a1-041e-52cf-a35ee3c324cd" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004530" startTime="2024-04-03T16:58:34.8108101+02:00" endTime="2024-04-03T16:58:34.8112627+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="726e90e9-2d4c-4ba6-90ba-507d489d4bbd">
      <Output>
        <StdOut>When I parse '@02=VgPoD@C43h00' with padding 0 as a Assigned mode command&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.WhenIParseWithNmeaAisAssignedModeCommandParser("@02=VgPoD@C43h00", 0) (0,0s)&#xD;
Then NmeaAisAssignedModeCommandParser.Type is 16&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_TypeIs(AssignmentModeCom...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c14b02dc-af35-4a79-abd5-2c11aa08ac33" testId="ddb1d513-7115-2d96-22fe-782ee4ac835e" testName="ConvertAIS6_BitCharacterToASCII(&quot;15&quot;,&quot;'O'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002220" startTime="2024-04-03T16:58:35.3315343+02:00" endTime="2024-04-03T16:58:35.3317556+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c14b02dc-af35-4a79-abd5-2c11aa08ac33">
      <Output>
        <StdOut>When I convert the AIS character value 15 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(15) (0,0s)&#xD;
Then the converted ASCII value should be 'O'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(O) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1231dbb5-f64a-4f32-8e87-9977c0cdafc4" testId="056e7bc8-972c-7c12-fb65-563a136c095b" testName="ConvertAIS6_BitCharacterToASCII(&quot;22&quot;,&quot;'V'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002280" startTime="2024-04-03T16:58:35.3331528+02:00" endTime="2024-04-03T16:58:35.3333804+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1231dbb5-f64a-4f32-8e87-9977c0cdafc4">
      <Output>
        <StdOut>When I convert the AIS character value 22 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(22) (0,0s)&#xD;
Then the converted ASCII value should be 'V'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(V) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="778accbe-d5a2-4f67-b248-e1dcf68aebeb" testId="09222f1f-c1d9-4415-dcf8-90b05ec55a12" testName="PartBShipType(&quot;H3uG2nTUCBD5l0Q00000001@4210&quot;,&quot;0&quot;,&quot;PleasureCraft&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.3068753+02:00" endTime="2024-04-03T16:58:35.3072195+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="778accbe-d5a2-4f67-b248-e1dcf68aebeb">
      <Output>
        <StdOut>When I parse 'H3uG2nTUCBD5l0Q00000001@4210' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3uG2nTUCBD5l0Q00...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is PleasureCraft&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(PleasureCraft) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="71056378-c13b-4a88-8d43-5db548828b0d" testId="1ebbc039-dcf5-bb95-acf3-e7dfd43a8804" testName="ETAMonth(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;2&quot;,&quot;7&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003940" startTime="2024-04-03T16:58:35.2163605+02:00" endTime="2024-04-03T16:58:35.2167541+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71056378-c13b-4a88-8d43-5db548828b0d">
      <Output>
        <StdOut>When I parse '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("544MR0827oeaD&lt;u00...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 7&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(7) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f02d8f59-978d-43de-a0f3-76bf3a7ad71d" testId="aab37a21-4661-83e7-2342-0163b0b35423" testName="Non_FragmentedMessages" computerName="SCODE-HF8MJR2" duration="00:00:00.0015930" startTime="2024-04-03T16:58:35.5799902+02:00" endTime="2024-04-03T16:58:35.5815826+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f02d8f59-978d-43de-a0f3-76bf3a7ad71d">
      <Output>
        <StdOut>When I parse a non-fragmented message&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseANon_FragmentedMessage() (0,0s)&#xD;
Then the TotalFragmentCount is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(1) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is empty&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIsEmpty() (0,0s)&#xD;
And the TagBlockSentenceGrouping is not present&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTagBlockSentenceGroupingIsNotPresent() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c742abb0-c240-4b0e-9c09-377ba02b61ff" testId="0aa85379-a9c7-4f21-fda1-6d63ae9071f1" testName="NavigationStatus(&quot;1000008000000000000000000000&quot;,&quot;0&quot;,&quot;UnderWaySailing&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003510" startTime="2024-04-03T16:58:34.9767117+02:00" endTime="2024-04-03T16:58:34.9770630+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c742abb0-c240-4b0e-9c09-377ba02b61ff">
      <Output>
        <StdOut>When I parse '1000008000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000080000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderWaySailing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderWaySailing) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5f340ac8-b5dc-40c0-8da3-c2ddbb1c3ec7" testId="53347c42-73e5-373c-5d2e-898331f0000e" testName="RepeatIndicator(&quot;1P00000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.0080232+02:00" endTime="2024-04-03T16:58:35.0083665+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5f340ac8-b5dc-40c0-8da3-c2ddbb1c3ec7">
      <Output>
        <StdOut>When I parse '1P00000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1P000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7ad0c861-40ff-4ffc-b9cf-1a42ad1c76e2" testId="48c28b74-a769-8c31-398c-45a63041f87c" testName="Signed8_BitInteger(&quot;0000000000000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0023530" startTime="2024-04-03T16:58:35.3458623+02:00" endTime="2024-04-03T16:58:35.3482148+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ad0c861-40ff-4ffc-b9cf-1a42ad1c76e2">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="32013774-6fda-4daf-a18c-7be1beca314d" testId="a628e807-15e2-021e-1aa2-7b980bd02ca0" testName="PartBRepeatIndicator(&quot;HP00004000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:35.2955599+02:00" endTime="2024-04-03T16:58:35.2959049+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="32013774-6fda-4daf-a18c-7be1beca314d">
      <Output>
        <StdOut>When I parse 'HP00004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("HP000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b924a072-357e-4355-a774-56d8c93521a9" testId="e9872385-5a4e-dda9-0e25-bdff79815a2f" testName="RegionalReservedBits38_45(&quot;C000001000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;16&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003940" startTime="2024-04-03T16:58:35.1179544+02:00" endTime="2024-04-03T16:58:35.1183486+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b924a072-357e-4355-a774-56d8c93521a9">
      <Output>
        <StdOut>When I parse 'C000001000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000010000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 16&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(16) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3b68b209-a1fb-4d8a-a9d9-20f299450915" testId="fb60606d-cec0-82f5-b2bc-60166cdf57cb" testName="ManoeuvreIndicator(&quot;1000000000000000000000010000&quot;,&quot;0&quot;,&quot;SpecialManoeuvre&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003880" startTime="2024-04-03T16:58:34.9646629+02:00" endTime="2024-04-03T16:58:34.9650505+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3b68b209-a1fb-4d8a-a9d9-20f299450915">
      <Output>
        <StdOut>When I parse '1000000000000000000000010000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is SpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(SpecialManoeuvre) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a94db369-8b01-4f3b-a006-48ebb924c010" testId="d08e0394-7ad6-f60f-f408-82b1c54ceffa" testName="PositionFixType(&quot;50000000000000000000000000000000000000000000080000000000000000000000000&quot;,&quot;0&quot;,&quot;Glonass&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004070" startTime="2024-04-03T16:58:35.2272202+02:00" endTime="2024-04-03T16:58:35.2276273+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a94db369-8b01-4f3b-a006-48ebb924c010">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000080000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Glonass&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Glonass) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="08f2d9e8-180d-461f-a1a3-1d8aabb37647" testId="a0331db2-c707-a90c-6b5c-d14602440d1e" testName="UnsignedAligned6_BitInteger(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3642020+02:00" endTime="2024-04-03T16:58:35.3645006+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08f2d9e8-180d-461f-a1a3-1d8aabb37647">
      <Output>
        <StdOut>Given an NMEA AIS payload of '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("53m89J81SR44hdhL0...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a94a4727-1d18-44cb-8076-76d34b55e982" testId="f167bc0b-d75b-f008-2996-7556f366e06a" testName="TrueHeading(&quot;C00000000000000000003wP00000000000000000000000000000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.1320186+02:00" endTime="2024-04-03T16:58:35.1324150+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a94a4727-1d18-44cb-8076-76d34b55e982">
      <Output>
        <StdOut>When I parse 'C00000000000000000003wP00000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TrueHeadingDegreesIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6960101-057b-4c60-a90f-8f18b141d946" testId="da1fbd70-dd9b-803e-b84c-c50a6a07b17f" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;6&quot;,&quot;-34&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002960" startTime="2024-04-03T16:58:35.3535222+02:00" endTime="2024-04-03T16:58:35.3538181+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6960101-057b-4c60-a90f-8f18b141d946">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 6&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 6) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -34&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-34) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="71bf202c-fe22-44a8-adc0-a57a86b2e84f" testId="52158ebb-1869-2fd2-41dd-40e53a17bf0d" testName="RepeatIndicator(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:35.0090830+02:00" endTime="2024-04-03T16:58:35.0094204+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71bf202c-fe22-44a8-adc0-a57a86b2e84f">
      <Output>
        <StdOut>When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7cc5af00-cc6c-4035-b2b2-924d1e9ed8b3" testId="c883ccdf-8a0c-8384-cd66-4e12faa1ec2c" testName="ReadPartBAsPartAThrows" computerName="SCODE-HF8MJR2" duration="00:00:00.0009590" startTime="2024-04-03T16:58:35.3222133+02:00" endTime="2024-04-03T16:58:35.3231725+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7cc5af00-cc6c-4035-b2b2-924d1e9ed8b3">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part A catching exception&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartACatchingException("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then the constructor throws ArgumentException&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenTheConstructorThrowsArgumentException() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5d18b21c-a53a-47db-83e5-4b716b914744" testId="eba72b38-8260-7cb6-1471-1c9cf588f496" testName="RepeatIndicator(&quot;5@000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005260" startTime="2024-04-03T16:58:35.2327169+02:00" endTime="2024-04-03T16:58:35.2332431+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5d18b21c-a53a-47db-83e5-4b716b914744">
      <Output>
        <StdOut>When I parse '5@000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5@000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49da87c3-6963-44be-928b-0d5b9d8074c9" testId="89b4b627-b683-5180-f0c2-595b6a88c034" testName="ETAMinute(&quot;50000000000000000000000000000000000000000000000010000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005280" startTime="2024-04-03T16:58:35.2089795+02:00" endTime="2024-04-03T16:58:35.2095077+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49da87c3-6963-44be-928b-0d5b9d8074c9">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000010000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="29cbf081-b76c-49f3-8e43-7d83734b73ac" testId="db2b69c6-d8c8-769e-ec27-0ea339860550" testName="PartBShipType(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0012750" startTime="2024-04-03T16:58:35.3014359+02:00" endTime="2024-04-03T16:58:35.3027106+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="29cbf081-b76c-49f3-8e43-7d83734b73ac">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is NotAvailable&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(NotAvailable) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e0375bac-93a5-4fb0-afb2-98e03da70c36" testId="3efb5d3d-7072-a56c-4a3a-e06c950ed4b1" testName="MessageType(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004800" startTime="2024-04-03T16:58:34.9676615+02:00" endTime="2024-04-03T16:58:34.9681412+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e0375bac-93a5-4fb0-afb2-98e03da70c36">
      <Output>
        <StdOut>When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Type is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TypeIs(PositionReport1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d51b9ca6-6f30-4f9a-bf35-177af1d84a95" testId="6c03c3c9-dc70-856d-bcdb-d241181d0930" testName="Signed8_BitInteger(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;42&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003530" startTime="2024-04-03T16:58:35.3506376+02:00" endTime="2024-04-03T16:58:35.3509902+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d51b9ca6-6f30-4f9a-bf35-177af1d84a95">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88cd900f-7549-49b9-8611-8fccee1de3d8" testId="274e3943-9e61-9b4d-fb31-5b33e5c45bd9" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;15&quot;,&quot;61&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002960" startTime="2024-04-03T16:58:35.3794512+02:00" endTime="2024-04-03T16:58:35.3797466+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88cd900f-7549-49b9-8611-8fccee1de3d8">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 15&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 15) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 61&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(61) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5f423003-9e65-4b05-8b71-ac64f4d968a4" testId="9b586a11-6d3a-3799-889b-9a413a168585" testName="PartAName(&quot;H00000000000000000000000004&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003710" startTime="2024-04-03T16:58:35.2594860+02:00" endTime="2024-04-03T16:58:35.2598570+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5f423003-9e65-4b05-8b71-ac64f4d968a4">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000004' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is @@@@@@@@@@@@@@@@@@@A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("@@@@@@@@@@@@@@@@@@@A") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="48e0856d-3dbf-456d-bb6d-194ce6861873" testId="f9ae1017-ce91-456e-fb0d-d33c05d0c488" testName="CallSign(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;9HA2986&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.1716895+02:00" endTime="2024-04-03T16:58:35.1720863+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="48e0856d-3dbf-456d-bb6d-194ce6861873">
      <Output>
        <StdOut>When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is 9HA2986&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("9HA2986") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="adee392e-220f-4924-8459-0a4c2b2bf115" testId="8201ce2e-e4e3-afce-3312-58a9731fa239" testName="PeekMessageTypeWithoutDecodingInFull(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;24&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002370" startTime="2024-04-03T16:58:35.5636445+02:00" endTime="2024-04-03T16:58:35.5638810+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="adee392e-220f-4924-8459-0a4c2b2bf115">
      <Output>
        <StdOut>When I peek at the payload 'H000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("H0000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 24&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(24) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="917f7506-a42e-40c1-9b9e-7431301c6aff" testId="529cc424-f0da-4def-dd66-bb280f3193d9" testName="AISTalkerId(&quot;ATVDM&quot;,&quot;TransmittingStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002280" startTime="2024-04-03T16:58:35.5703397+02:00" endTime="2024-04-03T16:58:35.5705674+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="917f7506-a42e-40c1-9b9e-7431301c6aff">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'ATVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ATVDM") (0,0s)&#xD;
Then the AisTalker is 'TransmittingStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(TransmittingStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="09ec5343-e574-4487-b6dd-c209a75c22a6" testId="77f91d6a-6da7-0449-bff8-f94c0a3db1ff" testName="MMSI(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009570" startTime="2024-04-03T16:58:35.2221257+02:00" endTime="2024-04-03T16:58:35.2230823+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="09ec5343-e574-4487-b6dd-c209a75c22a6">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="170c7294-8a8b-44c8-b646-b1b71ac371ef" testId="ec375bf2-8b27-0a2d-3603-03ee93d0cd28" testName="Name(&quot;C00000000000000000000001CEGIKMOQSUWacegikmoq00000000&quot;,&quot;0&quot;,&quot;)*+,-./0123456789:;&lt;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004290" startTime="2024-04-03T16:58:35.1030136+02:00" endTime="2024-04-03T16:58:35.1034429+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="170c7294-8a8b-44c8-b646-b1b71ac371ef">
      <Output>
        <StdOut>When I parse 'C00000000000000000000001CEGIKMOQSUWacegikmoq00000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is ')*+,-./0123456789:;&lt;'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs(")*+,-./0123456789:;&lt;") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8a2945c1-d796-4c8a-bf1d-695dc1e58370" testId="1c4e01d0-2099-4358-0a1b-f2a089a0fba5" testName="RepeatIndicator(&quot;:h0000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003690" startTime="2024-04-03T16:58:34.8670910+02:00" endTime="2024-04-03T16:58:34.8674600+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8a2945c1-d796-4c8a-bf1d-695dc1e58370">
      <Output>
        <StdOut>When I parse ':h0000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":h0000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 3&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c62145bc-1704-4088-9427-a18b9086154d" testId="6f0553c8-abf0-0783-e116-bd9ecc7354ab" testName="FullMessage(&quot;A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,&quot;0&quot;,&quot;9&quot;,&quot;510&quot;,&quot;3348&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,&quot;1375485,350474,16698374,2427902,13567503&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0074260" startTime="2024-04-03T16:58:34.9020556+02:00" endTime="2024-04-03T16:58:34.9094814+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c62145bc-1704-4088-9427-a18b9086154d">
      <Output>
        <StdOut>When I parse 'A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?' with padding 0 as a Differential Correction Data&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.WhenIParseWithNmeaAisDifferentialCorrectionDataParser("A028nBCt@hbs02GvJ...", 0) (0,0s)&#xD;
Then NmeaAisDifferentialCorrectionDataParser.MessageType is 9&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Station is 510&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_StationIs(510) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.ZCount is 3348&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_ZCountIs(3348) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.SequenceNumber is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.DgnssDataWordCount is 5&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_DgnssDataWordCountIs(5) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Health is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_HealthIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.WriteDgnssDataWord is 1375485,350474,16698374,2427902,13567503&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_Is(System.UInt32[]) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="97408c5a-e6b1-41b9-a86f-51600bd9ad89" testId="53bc1628-11f3-3c3b-05cb-47b16a6d9d4b" testName="UnsignedAligned6_BitInteger(&quot;ABC1&quot;,&quot;0&quot;,&quot;18&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3673241+02:00" endTime="2024-04-03T16:58:35.3676232+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="97408c5a-e6b1-41b9-a86f-51600bd9ad89">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABC1' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC1", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="511e1e2c-38a4-467e-8cdb-a880c2008265" testId="1760b0d1-1ee3-4472-2fa1-f56dd1e5bedf" testName="ConvertAIS6_BitCharacterToASCII(&quot;37&quot;,&quot;'%'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002490" startTime="2024-04-03T16:58:35.3370734+02:00" endTime="2024-04-03T16:58:35.3373227+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="511e1e2c-38a4-467e-8cdb-a880c2008265">
      <Output>
        <StdOut>When I convert the AIS character value 37 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(37) (0,0s)&#xD;
Then the converted ASCII value should be '%'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(%) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="26f9e5e9-f4c5-470b-ba0d-1ab678ea7b32" testId="171cae58-1142-09ec-0bec-37f972db7aed" testName="RadioSlotTimeout(&quot;1000000000000000000000000&lt;00&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:34.9886382+02:00" endTime="2024-04-03T16:58:34.9889844+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="26f9e5e9-f4c5-470b-ba0d-1ab678ea7b32">
      <Output>
        <StdOut>When I parse '1000000000000000000000000&lt;00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="421ac468-88f3-4ca1-9cd1-e33441473836" testId="87b4c137-12d6-e08a-0616-0a0c7e541904" testName="CourseOverGround(&quot;C000000000000000003Q00000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:35.0821727+02:00" endTime="2024-04-03T16:58:35.0826461+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="421ac468-88f3-4ca1-9cd1-e33441473836">
      <Output>
        <StdOut>When I parse 'C000000000000000003Q00000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(3600) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="45f9212b-5274-4799-a272-112ff5ccbd20" testId="80f714b7-3cf2-4245-5525-f455d6c9a322" testName="ConvertAIS6_BitCharacterToASCII(&quot;62&quot;,&quot;'&gt;'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002200" startTime="2024-04-03T16:58:35.3450303+02:00" endTime="2024-04-03T16:58:35.3452502+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="45f9212b-5274-4799-a272-112ff5ccbd20">
      <Output>
        <StdOut>When I convert the AIS character value 62 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(62) (0,0s)&#xD;
Then the converted ASCII value should be '&gt;'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(&gt;) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10c8016a-b993-4593-9fc6-f5dc00a3093e" testId="7343500d-728b-2c52-4d57-346543928e2d" testName="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004380" startTime="2024-04-03T16:58:35.3550205+02:00" endTime="2024-04-03T16:58:35.3554588+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10c8016a-b993-4593-9fc6-f5dc00a3093e">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7d35719f-c7b6-4098-aa69-04fabdff5da2" testId="216fa6c0-e22b-85e6-5d3a-2b0ad0ec66a2" testName="ConvertAIS6_BitCharacterToASCII(&quot;13&quot;,&quot;'M'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002230" startTime="2024-04-03T16:58:35.3310737+02:00" endTime="2024-04-03T16:58:35.3312965+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7d35719f-c7b6-4098-aa69-04fabdff5da2">
      <Output>
        <StdOut>When I convert the AIS character value 13 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(13) (0,0s)&#xD;
Then the converted ASCII value should be 'M'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(M) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10767510-27c1-4eba-9de4-72ca12e631d9" testId="88ea683e-9766-0a38-0d85-f8319fe971d3" testName="RadioSlotTimeout(&quot;13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003370" startTime="2024-04-03T16:58:34.9914300+02:00" endTime="2024-04-03T16:58:34.9917669+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10767510-27c1-4eba-9de4-72ca12e631d9">
      <Output>
        <StdOut>When I parse '13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mTRV701F23hFp`V...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6ed9ea49-2656-4e19-af60-12674aaa5f31" testId="afc5c274-009d-448f-e0fc-bc2b0e4025f0" testName="ConvertAIS6_BitCharacterToASCII(&quot;9&quot;,&quot;'I'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002220" startTime="2024-04-03T16:58:35.3301508+02:00" endTime="2024-04-03T16:58:35.3303729+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6ed9ea49-2656-4e19-af60-12674aaa5f31">
      <Output>
        <StdOut>When I convert the AIS character value 9 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(9) (0,0s)&#xD;
Then the converted ASCII value should be 'I'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(I) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="54cdea6d-ae27-4928-a468-6f5a4741c676" testId="89a98f48-a635-cce8-dbbc-a13ef749156f" testName="Destination(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004140" startTime="2024-04-03T16:58:35.1762504+02:00" endTime="2024-04-03T16:58:35.1766645+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="54cdea6d-ae27-4928-a468-6f5a4741c676">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a37a6e4-d478-4faa-9cc1-d77683e2264c" testId="8ca22b9d-149f-be4b-e447-e5feaef6bb82" testName="MessageType(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009060" startTime="2024-04-03T16:58:34.9667420+02:00" endTime="2024-04-03T16:58:34.9676477+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a37a6e4-d478-4faa-9cc1-d77683e2264c">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Type is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TypeIs(PositionReport1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="266fe524-789f-4a25-868e-f6ea38758615" testId="22b9f8cd-8879-1d7b-9c1c-6642e594ebd9" testName="SingleLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0007000" startTime="2024-04-03T16:58:35.5425376+02:00" endTime="2024-04-03T16:58:35.5432370+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="266fe524-789f-4a25-868e-f6ea38758615">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd31d2c4-06b1-4bd5-8ae3-8ab43d19f9de" testId="87596738-5309-54c6-2668-51a025d16d61" testName="PartBRepeatIndicator(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.2962714+02:00" endTime="2024-04-03T16:58:35.2966129+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd31d2c4-06b1-4bd5-8ae3-8ab43d19f9de">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="772239ca-94dc-4b1a-89e4-09a313b0f25a" testId="eff63b3e-5fe4-e090-28a3-10975522c070" testName="TrueHeading(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;356&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:35.0765099+02:00" endTime="2024-04-03T16:58:35.0768601+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="772239ca-94dc-4b1a-89e4-09a313b0f25a">
      <Output>
        <StdOut>When I parse 'B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m:&lt;b0008&lt;B&lt;s8TO...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 356&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(356) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="785bc223-95fc-42a6-adc8-c69f910926b1" testId="4d8e6601-32de-80b6-4741-1ee6448bc1ee" testName="LongitudeAndLatitute(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;5699112&quot;,&quot;38203428&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004750" startTime="2024-04-03T16:58:34.9618630+02:00" endTime="2024-04-03T16:58:34.9623381+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="785bc223-95fc-42a6-adc8-c69f910926b1">
      <Output>
        <StdOut>When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 5699112&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(5699112) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 38203428&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(38203428) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="92d97a93-df8a-46c8-95ed-f16082644c6f" testId="1328f662-0aba-282d-cc57-bf9ecc283b3c" testName="CourseOverGround(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018610" startTime="2024-04-03T16:58:34.9523296+02:00" endTime="2024-04-03T16:58:34.9541904+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="92d97a93-df8a-46c8-95ed-f16082644c6f">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="727ffa30-f38b-42f9-b7e5-91503c5ce14d" testId="41d82e1f-da2b-1d11-568b-3bb9ebd052c2" testName="MessagePart(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002750" startTime="2024-04-03T16:58:35.2497861+02:00" endTime="2024-04-03T16:58:35.2500613+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="727ffa30-f38b-42f9-b7e5-91503c5ce14d">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H000004000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="06f3ee60-9e09-4825-80f8-787367c4b611" testId="29ef816b-07ee-7da3-86c0-4f06f04ae48c" testName="ShipType(&quot;53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880&quot;,&quot;2&quot;,&quot;DredgingOrUnderwaterOps&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004090" startTime="2024-04-03T16:58:35.2369890+02:00" endTime="2024-04-03T16:58:35.2373980+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="06f3ee60-9e09-4825-80f8-787367c4b611">
      <Output>
        <StdOut>When I parse '53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mg2o400000hOSGO...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is DredgingOrUnderwaterOps&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(DredgingOrUnderwa...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="18546f45-8065-462a-ae1d-d861ed20cd9f" testId="7097d409-7506-31dd-9920-992d990cc16f" testName="EmptyFile" computerName="SCODE-HF8MJR2" duration="00:00:00.0685120" startTime="2024-04-03T16:58:35.4263996+02:00" endTime="2024-04-03T16:58:35.4949118+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="18546f45-8065-462a-ae1d-d861ed20cd9f">
      <Output>
        <StdOut>Given no content&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenNoContent() (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,1s)&#xD;
Then INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e40dc596-7b8f-499c-8757-ef50e926ba39" testId="11d99925-1db5-2a65-c0e1-b7cde4dc55a1" testName="PartARepeatIndicator(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.2634764+02:00" endTime="2024-04-03T16:58:35.2638205+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e40dc596-7b8f-499c-8757-ef50e926ba39">
      <Output>
        <StdOut>When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="458dead3-7d16-4d22-bb61-f8f33bd0d138" testId="d5005810-ba10-5061-b2bb-b6816e38b312" testName="ConvertAIS6_BitCharacterToASCII(&quot;32&quot;,&quot;' '&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002320" startTime="2024-04-03T16:58:35.3356678+02:00" endTime="2024-04-03T16:58:35.3358996+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="458dead3-7d16-4d22-bb61-f8f33bd0d138">
      <Output>
        <StdOut>When I convert the AIS character value 32 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(32) (0,0s)&#xD;
Then the converted ASCII value should be ' '&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe( ) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6005814d-d40b-4aa5-acb9-4fe9f7cf0ad3" testId="a043c836-e3f7-6a70-b40f-23d1927c92ee" testName="ETADay(&quot;50000000000000000000000000000000000000000000004000000000000000000000000&quot;,&quot;2&quot;,&quot;8&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.1997795+02:00" endTime="2024-04-03T16:58:35.2001744+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6005814d-d40b-4aa5-acb9-4fe9f7cf0ad3">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000004000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 8&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1d7aff57-e344-474d-9d9d-271a65b2359d" testId="bfe55cc1-2d4b-ac49-99f5-a5fd668b1793" testName="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3576545+02:00" endTime="2024-04-03T16:58:35.3579539+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1d7aff57-e344-474d-9d9d-271a65b2359d">
      <Output>
        <StdOut>Given an NMEA AIS payload of '2000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("2000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c8f47473-3aa9-4677-a390-24ffa12cf23b" testId="7991c725-036c-c853-ff90-46ae1f53b750" testName="PartBSerialNumber(&quot;H000004000020000000000000000&quot;,&quot;0&quot;,&quot;524288&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005390" startTime="2024-04-03T16:58:35.2978053+02:00" endTime="2024-04-03T16:58:35.2983439+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c8f47473-3aa9-4677-a390-24ffa12cf23b">
      <Output>
        <StdOut>When I parse 'H000004000020000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000200000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 524288&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(524288) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf36a9e8-792c-45e1-a116-c423d562fbab" testId="82552452-b427-7c9c-c385-d07a63a9d3de" testName="RegionalReservedBits139_140(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.0621501+02:00" endTime="2024-04-03T16:58:35.0624940+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf36a9e8-792c-45e1-a116-c423d562fbab">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bfa8ac8f-2e62-4796-8cff-824398d4e5b7" testId="e21ee75f-f0f6-b686-0481-35399f16301f" testName="DimensionToStern(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004060" startTime="2024-04-03T16:58:35.1874217+02:00" endTime="2024-04-03T16:58:35.1878272+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bfa8ac8f-2e62-4796-8cff-824398d4e5b7">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 6&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(6) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="42d396b5-4893-4934-803e-6aa71d9aabf7" testId="31f20ecb-f8a0-fee4-3115-c9729cf47d91" testName="PartBMothershipMMSI(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008950" startTime="2024-04-03T16:58:35.2924127+02:00" endTime="2024-04-03T16:58:35.2933079+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="42d396b5-4893-4934-803e-6aa71d9aabf7">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.MothershipMmsi is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MothershipMmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ef444e82-7cd1-4bf2-a0b2-adc5875eae87" testId="95d41c29-a342-c017-833f-1ac6fbbf1ab4" testName="RepeatIndicator(&quot;:P0000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003760" startTime="2024-04-03T16:58:34.8667062+02:00" endTime="2024-04-03T16:58:34.8670820+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ef444e82-7cd1-4bf2-a0b2-adc5875eae87">
      <Output>
        <StdOut>When I parse ':P0000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":P0000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 2&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ac6b20ba-8dd3-44fa-91e9-c7e39062c5b1" testId="b75cb4ac-2e80-0174-86f4-e1bba4b9712e" testName="FullMessage(&quot;&gt;8HweV1@E=@m&lt;N0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;563080600&quot;,&quot;0&quot;,&quot;\&quot;TESTMSG \&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008230" startTime="2024-04-03T16:58:35.1386002+02:00" endTime="2024-04-03T16:58:35.1394227+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ac6b20ba-8dd3-44fa-91e9-c7e39062c5b1">
      <Output>
        <StdOut>When I parse '&gt;8HweV1@E=@m&lt;N0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;8HweV1@E=@m&lt;N0", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.RepeatIndicator is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.Mmsi is 563080600&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_MmsiIs(563080600) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SpareBit38 is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SpareBit38Is(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SafetyRelatedText is "TESTMSG "&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SafetyRelatedTextIs(""TESTMSG "") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2f19ed03-15b1-4fb2-b6b7-31c500f0254e" testId="1c0b40f5-fac1-2c23-1df9-70b3fb29e244" testName="LineStreamParserReportsErrorInSecondFragmentOfTwo_PartMessage" computerName="SCODE-HF8MJR2" duration="00:00:00.0008320" startTime="2024-04-03T16:58:35.4094221+02:00" endTime="2024-04-03T16:58:35.4102540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2f19ed03-15b1-4fb2-b6b7-31c500f0254e">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives an error report for content 'foobar' with line number 42&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAnErrorReportForContentWithLineNumber("foobar", 42) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'foobar'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "foobar") (0,0s)&#xD;
And the message error report 0 should include the exception reported by the line stream parser&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.ThenTheMessageErrorReportShouldIncludeTheExceptionReportedByTheLineStreamParser(0) (0,0s)&#xD;
And the message error report 0 should include the line number 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 42) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aaffc70b-e802-4602-bf02-57cfa200137a" testId="f4c5e4c3-ecb4-4678-0a45-0e075318543e" testName="MMSI(&quot;B00000@000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004640" startTime="2024-04-03T16:58:35.0506548+02:00" endTime="2024-04-03T16:58:35.0511192+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aaffc70b-e802-4602-bf02-57cfa200137a">
      <Output>
        <StdOut>When I parse 'B00000@000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4bda7e07-28ff-4e8d-89f2-fa781882b9e4" testId="e18d98c7-f7e0-917c-f980-a8eb4722eb9c" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004840" startTime="2024-04-03T16:58:34.9012584+02:00" endTime="2024-04-03T16:58:34.9017427+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4bda7e07-28ff-4e8d-89f2-fa781882b9e4">
      <Output>
        <StdOut>When I parse 'D02;bMhRl@fq6DA6DB0i6D0' with padding 0 as a Data link management message&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.WhenIParseWithNmeaAisDataLinkManagementMessageParser("D02;bMhRl@fq6DA6D...", 0) (0,0s)&#xD;
Then NmeaAisDataLinkManagementMessageParser.Type is 20&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_TypeIs(DataLinkManagemen...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8adcfccd-ad28-45c3-aba8-e233376c1c7e" testId="3ad942ba-294a-1c2c-a60c-4d14b26dc4ab" testName="CourseOverGround(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009370" startTime="2024-04-03T16:58:35.0802761+02:00" endTime="2024-04-03T16:58:35.0812126+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8adcfccd-ad28-45c3-aba8-e233376c1c7e">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="83252ad6-ed2f-4879-b6a6-607b087a13e6" testId="c99e9145-c524-cf03-398d-c687520a9fac" testName="ConvertAIS6_BitCharacterToASCII(&quot;3&quot;,&quot;'C'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002290" startTime="2024-04-03T16:58:35.3287479+02:00" endTime="2024-04-03T16:58:35.3289764+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83252ad6-ed2f-4879-b6a6-607b087a13e6">
      <Output>
        <StdOut>When I convert the AIS character value 3 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(3) (0,0s)&#xD;
Then the converted ASCII value should be 'C'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(C) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be1c2315-3315-4ac5-9fe7-e758b644481a" testId="20a8bf3c-7475-9033-7979-b7f3fdaf7096" testName="Spare(&quot;C000000000000000000000000000000000000000000000000007&quot;,&quot;0&quot;,&quot;7&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.1250656+02:00" endTime="2024-04-03T16:58:35.1254602+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be1c2315-3315-4ac5-9fe7-e758b644481a">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000007' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 7&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(7) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c96b59d1-8650-4ef7-b2f7-00361d8c2fd0" testId="3dfeb67b-6bf3-b2c6-4f52-56fc4e978a18" testName="Draught(&quot;5000000000000000000000000000000000000000000000000P000000000000000000000&quot;,&quot;2&quot;,&quot;128&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.1924409+02:00" endTime="2024-04-03T16:58:35.1928370+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c96b59d1-8650-4ef7-b2f7-00361d8c2fd0">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000000P000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 128&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(128) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="645a13b0-c2ff-4568-857c-5976d0bd4f88" testId="9edcfa64-9ea4-e361-84f6-31caee583639" testName="PositionAccuracy(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009120" startTime="2024-04-03T16:58:35.0525547+02:00" endTime="2024-04-03T16:58:35.0534671+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="645a13b0-c2ff-4568-857c-5976d0bd4f88">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b42bb701-7836-44dd-9dd8-ab78aa01c0d2" testId="2e04a2f6-03a6-6ea2-9247-f3a0b86341c9" testName="RaimFlag(&quot;1000000000000000000000002000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004750" startTime="2024-04-03T16:58:35.0015683+02:00" endTime="2024-04-03T16:58:35.0020432+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b42bb701-7836-44dd-9dd8-ab78aa01c0d2">
      <Output>
        <StdOut>When I parse '1000000000000000000000002000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0955e0d2-fef0-434d-bf51-70269f0975e0" testId="265b4d01-b647-c37d-e88f-8e50daae8194" testName="PositionFixType(&quot;C000000000000000000000000000000000000000000000000020&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005180" startTime="2024-04-03T16:58:35.1064109+02:00" endTime="2024-04-03T16:58:35.1069285+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0955e0d2-fef0-434d-bf51-70269f0975e0">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000020' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Gps&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Gps) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8c71f980-4e1e-4d73-aaed-f23d249dee38" testId="23ab1cd2-f50d-ef82-d459-cd1f12307c06" testName="TimeStamp(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;9&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0736670+02:00" endTime="2024-04-03T16:58:35.0740072+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8c71f980-4e1e-4d73-aaed-f23d249dee38">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 9&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(9) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2aad5a84-4ffd-45a5-8653-af1c1915934c" testId="e7a284ac-8903-2278-2793-d88a9d443fb6" testName="PartBMMSI(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;257104720&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.2916853+02:00" endTime="2024-04-03T16:58:35.2920266+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2aad5a84-4ffd-45a5-8653-af1c1915934c">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 257104720&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(257104720) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b0d89e98-7307-42de-b2b5-318305d9a51f" testId="2c487e8e-1bbb-e5a8-7ba3-8d5c8b9c45ac" testName="PeekMessageTypeWithoutDecodingInFull(&quot;2000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002540" startTime="2024-04-03T16:58:35.5616512+02:00" endTime="2024-04-03T16:58:35.5619054+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b0d89e98-7307-42de-b2b5-318305d9a51f">
      <Output>
        <StdOut>When I peek at the payload '2000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("20000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c6b719d3-3e6c-4110-95b5-7502f774ee5a" testId="097821c9-d0a1-e795-b147-af0d785aa6ca" testName="Two_FragmentMessageFragmentsReceivedTooManySentencesInTheMiddle" computerName="SCODE-HF8MJR2" duration="00:00:00.0024800" startTime="2024-04-03T16:58:35.4182777+02:00" endTime="2024-04-03T16:58:35.4207580+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c6b719d3-3e6c-4110-95b5-7502f774ee5a">
      <Output>
        <StdOut>Given I have configured a MaximumUnmatchedFragmentAge of 1&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.GivenIHaveConfiguredAMaximumUnmatchedFragmentAgeOf(1) (0,0s)&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54,0*63'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:3,c:1567692251...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 3&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 3) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567692251&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567692251) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that it received an incomplete set of fragments for a message&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatItReceivedAnIncompleteSetOfFragmentsForAMessage(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="339f1fe6-ea35-4785-a0c9-be16a01ba83d" testId="e3f63fde-1195-51e6-f7e3-976ee2be3a83" testName="RegionalReservedBits38_45(&quot;B000001000000000000000000000&quot;,&quot;0&quot;,&quot;16&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:35.0639596+02:00" endTime="2024-04-03T16:58:35.0643075+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="339f1fe6-ea35-4785-a0c9-be16a01ba83d">
      <Output>
        <StdOut>When I parse 'B000001000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000010000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 16&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(16) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f23e6389-5823-4237-98ac-e1e2287a614f" testId="29626d6f-a10f-191a-0857-b5903edacc62" testName="RadioSlotTimeout(&quot;1000000000000000000000000D00&quot;,&quot;0&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:34.9893472+02:00" endTime="2024-04-03T16:58:34.9896849+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f23e6389-5823-4237-98ac-e1e2287a614f">
      <Output>
        <StdOut>When I parse '1000000000000000000000000D00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="54b41379-462e-487d-bed2-011cb12be7b2" testId="9c71320e-a66c-ff16-1d61-e6d5af2fbe53" testName="FullMessage(&quot;85PH6giKf;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;369493695&quot;,&quot;0&quot;,&quot;366&quot;,&quot;56&quot;,&quot;2&quot;,&quot;;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0015540" startTime="2024-04-03T16:58:34.8388376+02:00" endTime="2024-04-03T16:58:34.8403916+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="54b41379-462e-487d-bed2-011cb12be7b2">
      <Output>
        <StdOut>When I parse '85PH6giKf;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("85PH6giKf;2=fq`s&gt;...", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.Mmsi is 369493695&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_MmsiIs(369493695) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.SpareBits38 is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.DAC is 366&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_DACIs(366) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.FI is 56&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_FIIs(56) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationDataPadding is 2&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationData is ;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataIs(";2=fq`s&gt;8IP:=I4EK...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="969fd443-ab39-47ce-934e-ca7f8bb3deda" testId="5df56f6f-65cc-8522-84bb-ba75cd2ff790" testName="RadioChannelCode(&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002260" startTime="2024-04-03T16:58:35.5852259+02:00" endTime="2024-04-03T16:58:35.5854521+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="969fd443-ab39-47ce-934e-ca7f8bb3deda">
      <Output>
        <StdOut>When I parse a message with a radio channel code of '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("2") (0,0s)&#xD;
Then the ChannelCode is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6b68fc06-cd9e-4d9a-b8f6-9cf0abc191f4" testId="8c0df46a-8c72-0f01-06cb-5f9c0c65e2af" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;17&quot;,&quot;55&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002960" startTime="2024-04-03T16:58:35.3800585+02:00" endTime="2024-04-03T16:58:35.3803548+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6b68fc06-cd9e-4d9a-b8f6-9cf0abc191f4">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 17) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be6c724c-ac37-4a40-8fce-5780a9cc0064" testId="a5f47be4-f5eb-67bd-5ab1-852c808a2d6c" testName="Message22Flag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003530" startTime="2024-04-03T16:58:35.0483287+02:00" endTime="2024-04-03T16:58:35.0486820+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be6c724c-ac37-4a40-8fce-5780a9cc0064">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4e46fe7c-56c7-4a2f-bd1a-fb4c91bb8cc9" testId="87a5d4bd-eebc-0866-87b8-773797b6ef79" testName="ETADay(&quot;50000000000000000000000000000000000000000000000P00000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005290" startTime="2024-04-03T16:58:35.1980132+02:00" endTime="2024-04-03T16:58:35.1985420+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4e46fe7c-56c7-4a2f-bd1a-fb4c91bb8cc9">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000P00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ec35a7b2-2a3a-4ca3-906c-729b79b20b03" testId="034860b2-d474-0b44-009e-e3eef2c70ef0" testName="PositionAccuracy(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003640" startTime="2024-04-03T16:58:35.0549743+02:00" endTime="2024-04-03T16:58:35.0553383+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec35a7b2-2a3a-4ca3-906c-729b79b20b03">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="54e4ea55-42a2-4a12-9b4c-9b6f657ea6f4" testId="03524cdd-bb61-2a2e-21c2-a7609f06c34b" testName="PartAMessageType(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004570" startTime="2024-04-03T16:58:35.2539590+02:00" endTime="2024-04-03T16:58:35.2544162+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="54e4ea55-42a2-4a12-9b4c-9b6f657ea6f4">
      <Output>
        <StdOut>When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartA.PartNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_PartNumberIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5138777e-c0f1-49dd-9bdc-237bbabcbae6" testId="ea509acf-3e16-781b-608e-f9e68cf0ca08" testName="NavigationStatus(&quot;1000009000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForHsc&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:34.9770721+02:00" endTime="2024-04-03T16:58:34.9774218+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5138777e-c0f1-49dd-9bdc-237bbabcbae6">
      <Output>
        <StdOut>When I parse '1000009000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000090000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForHsc&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a661e742-2faa-4483-b403-3de09d22b15f" testId="3f14de57-3cd9-0625-1c85-dfb92a697e9b" testName="TrueHeading(&quot;1000000000000000000001000000&quot;,&quot;0&quot;,&quot;32&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003579" startTime="2024-04-03T16:58:35.0236919+02:00" endTime="2024-04-03T16:58:35.0240503+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a661e742-2faa-4483-b403-3de09d22b15f">
      <Output>
        <StdOut>When I parse '1000000000000000000001000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 32&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(32) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5643f7eb-de04-45d1-9036-440d845e9e0f" testId="2f593ce9-2961-dc8c-bedf-51a9f72813c0" testName="ConvertAIS6_BitCharacterToASCII(&quot;55&quot;,&quot;'7'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3434312+02:00" endTime="2024-04-03T16:58:35.3436522+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5643f7eb-de04-45d1-9036-440d845e9e0f">
      <Output>
        <StdOut>When I convert the AIS character value 55 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(55) (0,0s)&#xD;
Then the converted ASCII value should be '7'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(7) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="23c32239-b3aa-4416-91c0-48029e0533b7" testId="eb2b232f-7bce-1b3d-8b4d-4643f2d56fe0" testName="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000100000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005310" startTime="2024-04-03T16:58:35.1837137+02:00" endTime="2024-04-03T16:58:35.1842442+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="23c32239-b3aa-4416-91c0-48029e0533b7">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000100000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0fd936de-0f59-4e24-9de9-255345f252be" testId="562b7d7a-9d37-31e8-cf61-72dc7b7dfb9d" testName="FullMessage(&quot;A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2241156&quot;,&quot;0&quot;,&quot;2583&quot;,&quot;23919&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0014310" startTime="2024-04-03T16:58:34.9205849+02:00" endTime="2024-04-03T16:58:34.9220155+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0fd936de-0f59-4e24-9de9-255345f252be">
      <Output>
        <StdOut>When I parse 'A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028jQ02QLfep2H&lt;U...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Mmsi is 2241156&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_MmsiIs(2241156) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits38 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Longitude10thMins is 2583&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Longitude10thMinsIs(2583) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Latitude10thMins is 23919&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Latitude10thMinsIs(23919) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits75 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits75Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionDataPadding is 2&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionData is 2H&lt;UhDP5wpk1CdJw@p42:bb&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataIs("2H&lt;UhDP5wpk1CdJw@...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="09cc9293-04f5-4f48-9741-6719cc3e8022" testId="0fb5b85c-7b66-c542-b180-5f124036e473" testName="Signed8_BitInteger(&quot;0000000100000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003040" startTime="2024-04-03T16:58:35.3493940+02:00" endTime="2024-04-03T16:58:35.3496981+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="09cc9293-04f5-4f48-9741-6719cc3e8022">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000100000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000001000000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b0ebb594-0f2f-4e2d-8cec-89bf364b274a" testId="d598b20f-fbee-cb34-7332-f5082420feec" testName="MMSI(&quot;C&gt;eq`d@000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003910" startTime="2024-04-03T16:58:35.1000914+02:00" endTime="2024-04-03T16:58:35.1004827+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b0ebb594-0f2f-4e2d-8cec-89bf364b274a">
      <Output>
        <StdOut>When I parse 'C&gt;eq`d@000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 987654321&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5a93b284-3120-436c-a7d4-6da134cdc688" testId="681d49f3-c1a4-42c8-9889-e7acab7f6cc3" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0005030" startTime="2024-04-03T16:58:35.1394451+02:00" endTime="2024-04-03T16:58:35.1399480+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5a93b284-3120-436c-a7d4-6da134cdc688">
      <Output>
        <StdOut>When I parse '&gt;&gt;l:N8hp5HTL5@Ttp4j1L58pTpN2b`9Eb37:bb0U&gt;0tHJ10u&lt;U@Ttp0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;&gt;l:N8hp5HTL5@Ttp...", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="18e3fc05-d756-444d-bf7f-1788db5eaeae" testId="216c1bbc-9875-a8dc-58f7-a0c1b5ff99c0" testName="Signed8_BitInteger(&quot;0000000P00000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;-128&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3503288+02:00" endTime="2024-04-03T16:58:35.3506292+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="18e3fc05-d756-444d-bf7f-1788db5eaeae">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000P00000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000P000000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -128&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-128) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0680be85-88a7-420d-9123-2e172413d461" testId="30c2c3df-adb2-2c2a-77fb-57ba5562e534" testName="NavigationStatus(&quot;13n53M50001P2jv`4iFe@rJ&lt;0000&quot;,&quot;0&quot;,&quot;Moored&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004460" startTime="2024-04-03T16:58:34.9813379+02:00" endTime="2024-04-03T16:58:34.9817843+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0680be85-88a7-420d-9123-2e172413d461">
      <Output>
        <StdOut>When I parse '13n53M50001P2jv`4iFe@rJ&lt;0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13n53M50001P2jv`4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is Moored&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(Moored) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be4e37c8-2ba4-43db-b525-ce3a707dfdf6" testId="b36ad83d-4685-d1fb-9c3a-9343048e0826" testName="NavigationStatus(&quot;1000005000000000000000000000&quot;,&quot;0&quot;,&quot;Moored&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003669" startTime="2024-04-03T16:58:34.9736826+02:00" endTime="2024-04-03T16:58:34.9740495+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be4e37c8-2ba4-43db-b525-ce3a707dfdf6">
      <Output>
        <StdOut>When I parse '1000005000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000050000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is Moored&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(Moored) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cb6c1ffa-35be-4261-9681-fc979dad0b4f" testId="213210d5-5665-9884-6fd5-360a8d8cfdb0" testName="TrueHeading(&quot;B000000000000000000000P00000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004710" startTime="2024-04-03T16:58:35.0756630+02:00" endTime="2024-04-03T16:58:35.0761334+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb6c1ffa-35be-4261-9681-fc979dad0b4f">
      <Output>
        <StdOut>When I parse 'B000000000000000000000P00000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="af6a4659-7a72-44fc-9788-87b49210759e" testId="54047076-96a8-79d9-5c84-1be1395deeb5" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004990" startTime="2024-04-03T16:58:34.8635966+02:00" endTime="2024-04-03T16:58:34.8640952+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="af6a4659-7a72-44fc-9788-87b49210759e">
      <Output>
        <StdOut>When I parse ':815J6hrsEKP' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":815J6hrsEKP", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0eef92e6-48a9-4e25-a12e-68a5d41f6816" testId="edf0240d-f9e3-51a7-8f79-a47cab4f8c48" testName="AssignedFlag(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0019540" startTime="2024-04-03T16:58:35.0775738+02:00" endTime="2024-04-03T16:58:35.0795281+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0eef92e6-48a9-4e25-a12e-68a5d41f6816">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.IsAssigned is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_IsAssigned(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fa1291dd-1ba6-4a88-808f-ecb9c8b290cc" testId="601f8e65-53ac-3c0a-d061-039ac6bad73b" testName="Spare(&quot;C000000000000000000000000000000000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005170" startTime="2024-04-03T16:58:35.1241299+02:00" endTime="2024-04-03T16:58:35.1246471+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fa1291dd-1ba6-4a88-808f-ecb9c8b290cc">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000001' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="97f41824-f698-4245-941b-b59146420ff7" testId="ed790a87-7415-5b8f-8ec4-b3de7d168bd4" testName="RateOfTurn(&quot;1000000P00000000000000000000&quot;,&quot;0&quot;,&quot;-128&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0048852+02:00" endTime="2024-04-03T16:58:35.0052277+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="97f41824-f698-4245-941b-b59146420ff7">
      <Output>
        <StdOut>When I parse '1000000P00000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000P000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is -128&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(-128) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a60abcbd-cd66-4cf9-8de6-2a45aadd95bb" testId="c18cd688-61b3-83e4-9506-62156136b95e" testName="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;3&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3570343+02:00" endTime="2024-04-03T16:58:35.3573358+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a60abcbd-cd66-4cf9-8de6-2a45aadd95bb">
      <Output>
        <StdOut>Given an NMEA AIS payload of '2000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("2000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a400a805-5cba-4c0a-8a06-dbc97df75008" testId="2332e7f4-f5a0-ed03-e0b7-1dca38c68689" testName="RadioSyncState(&quot;1000000000000000000000001P00&quot;,&quot;0&quot;,&quot;ToOtherStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:34.9976288+02:00" endTime="2024-04-03T16:58:34.9979788+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a400a805-5cba-4c0a-8a06-dbc97df75008">
      <Output>
        <StdOut>When I parse '1000000000000000000000001P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is ToOtherStation&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(ToOtherStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8bfba817-41e9-48c0-a115-6cc527c38cc8" testId="6b51aaf2-2584-b6bb-c8bb-74e9df8cb2a3" testName="MessagePart(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0017820" startTime="2024-04-03T16:58:35.2474123+02:00" endTime="2024-04-03T16:58:35.2491938+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8bfba817-41e9-48c0-a115-6cc527c38cc8">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H00000000000000000000000000' with padding 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8fe877c0-d24e-4dfb-8a86-9f3c54b944e9" testId="8da00938-b7a6-7e74-e6c8-73f1cfb92f43" testName="PartBDimensionToStarboard(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.2847534+02:00" endTime="2024-04-03T16:58:35.2850972+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8fe877c0-d24e-4dfb-8a86-9f3c54b944e9">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9c1fde8e-79d7-4f63-a447-27365b6110c1" testId="b9faca44-ca88-8bb4-04ff-622679980b9d" testName="MMSI(&quot;C00000@000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005180" startTime="2024-04-03T16:58:35.0991588+02:00" endTime="2024-04-03T16:58:35.0996767+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c1fde8e-79d7-4f63-a447-27365b6110c1">
      <Output>
        <StdOut>When I parse 'C00000@000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000@0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4774e13f-facc-4c2c-926b-df6eee4c38c6" testId="dec45e98-f794-4534-d524-b21e73a91d95" testName="InterleavedMulti_FragmentMessagesDistinguishedOnlyByGroupingInHeader" computerName="SCODE-HF8MJR2" duration="00:00:00.0014510" startTime="2024-04-03T16:58:35.3939978+02:00" endTime="2024-04-03T16:58:35.3954483+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4774e13f-facc-4c2c-926b-df6eee4c38c6">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,9,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,9,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
And in ais message 1 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 27) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567686150) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="806fac9f-690a-4388-a198-649f72b354e0" testId="959dd6a6-9c42-529a-bd21-cab456b87538" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;7&quot;,&quot;47&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3763569+02:00" endTime="2024-04-03T16:58:35.3766551+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="806fac9f-690a-4388-a198-649f72b354e0">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 7&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 7) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 47&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(47) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cc5a30f3-88a6-4610-867e-05a075d768e9" testId="09baf7eb-1f66-4f0a-5a47-ce02fc22802a" testName="PositionFixType(&quot;C000000000000000000000000000000000000000000000000060&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.1073505+02:00" endTime="2024-04-03T16:58:35.1077436+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cc5a30f3-88a6-4610-867e-05a075d768e9">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000060' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is CombinedGpsGlonass&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(CombinedGpsGlonass) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4d2c9f4c-5664-4d7e-9621-11349a84e611" testId="266e26f7-d379-a372-c268-d60745414997" testName="PositionFixType(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003940" startTime="2024-04-03T16:58:35.2305015+02:00" endTime="2024-04-03T16:58:35.2308956+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4d2c9f4c-5664-4d7e-9621-11349a84e611">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Gps&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Gps) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c1ef6b7a-56e2-4521-958a-d7ae909764e5" testId="5bc9da6d-d193-b559-6c06-46953d31d8e2" testName="PartBCallSign(&quot;H00000400000000Q000000000000&quot;,&quot;0&quot;,&quot;!@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004900" startTime="2024-04-03T16:58:35.2686531+02:00" endTime="2024-04-03T16:58:35.2691427+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c1ef6b7a-56e2-4521-958a-d7ae909764e5">
      <Output>
        <StdOut>When I parse 'H00000400000000Q000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000400000000Q0...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is !@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("!@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8d939560-863b-4b0e-a1fc-9592f4ac56ca" testId="61a8e662-3b6b-6228-a20a-007ad146ace5" testName="ETAMinute(&quot;500000000000000000000000000000000000000000000000t0000000000000000000000&quot;,&quot;2&quot;,&quot;60&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2103432+02:00" endTime="2024-04-03T16:58:35.2107380+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8d939560-863b-4b0e-a1fc-9592f4ac56ca">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000000t0000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 60&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(60) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0e7217a0-5d9c-4686-bacd-ccb2ba4b6ee1" testId="82ac8ff4-38df-467b-7c0c-e3d067e7d7ea" testName="SingleLineWithStandardButUnsupportedTagBlockFieldWithExceptionsEnabled" computerName="SCODE-HF8MJR2" duration="00:00:00.0017570" startTime="2024-04-03T16:58:35.5195581+02:00" endTime="2024-04-03T16:58:35.5213154+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0e7217a0-5d9c-4686-bacd-ccb2ba4b6ee1">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904,n:1*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904,n:1*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that an unsupported field is present&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatAnUnsupportedFieldIsPresent(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0368620f-294f-42ea-98d8-dd3c9670c584" testId="b61ee699-dc23-d04e-d511-7583ed927e30" testName="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003060" startTime="2024-04-03T16:58:35.3554718+02:00" endTime="2024-04-03T16:58:35.3557783+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0368620f-294f-42ea-98d8-dd3c9670c584">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 1) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ea6196f7-b908-42c5-8de1-0c0c826a737c" testId="3a4890a6-5826-2dad-66b6-0e7f21dce346" testName="RadioSlotTimeout(&quot;1000000000000000000000000L00&quot;,&quot;0&quot;,&quot;7&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:34.9900457+02:00" endTime="2024-04-03T16:58:34.9903835+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ea6196f7-b908-42c5-8de1-0c0c826a737c">
      <Output>
        <StdOut>When I parse '1000000000000000000000000L00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 7&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(7) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7f4990b7-df33-4e73-988b-0a1bda135563" testId="e58e09d9-9c42-82b2-f4d1-7e5b8c979f92" testName="NavigationStatus(&quot;1000007000000000000000000000&quot;,&quot;0&quot;,&quot;EngagedInFishing&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:34.9763017+02:00" endTime="2024-04-03T16:58:34.9767018+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7f4990b7-df33-4e73-988b-0a1bda135563">
      <Output>
        <StdOut>When I parse '1000007000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000070000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is EngagedInFishing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(EngagedInFishing) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c2584d3b-0911-4d3f-96ca-2b0807cec2a1" testId="8f306b54-cf0b-9840-97dc-d6bf47446fb6" testName="RaimFlag(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009640" startTime="2024-04-03T16:58:35.0005911+02:00" endTime="2024-04-03T16:58:35.0015548+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c2584d3b-0911-4d3f-96ca-2b0807cec2a1">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9f77cd16-302d-49d0-9928-46d4ad0c7ede" testId="2cb3167a-2758-019a-adfb-7be2e395844f" testName="TimeStamp(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009300" startTime="2024-04-03T16:58:35.1285943+02:00" endTime="2024-04-03T16:58:35.1295238+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f77cd16-302d-49d0-9928-46d4ad0c7ede">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TimeStampSecond is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TimeStampSecondIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f99f9acc-765c-48c6-8dcc-e85c8ee992bc" testId="9b062c3f-aea2-121d-f54a-af5f544c5048" testName="DisplayFlag(&quot;B5RVdt0000;I;08?A&gt;MOKws7kP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:35.0400344+02:00" endTime="2024-04-03T16:58:35.0403819+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f99f9acc-765c-48c6-8dcc-e85c8ee992bc">
      <Output>
        <StdOut>When I parse 'B5RVdt0000;I;08?A&gt;MOKws7kP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B5RVdt0000;I;08?A...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7c2f392d-d303-4650-9f1e-e1368d86f51a" testId="61454356-95a5-cff7-21fa-8eb79ed5699a" testName="NavigationStatus(&quot;13mVWJ2P01P`jBlTMPsN4?v22&lt;0G&quot;,&quot;0&quot;,&quot;NotUnderCommand&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:34.9802759+02:00" endTime="2024-04-03T16:58:34.9806175+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7c2f392d-d303-4650-9f1e-e1368d86f51a">
      <Output>
        <StdOut>When I parse '13mVWJ2P01P`jBlTMPsN4?v22&lt;0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mVWJ2P01P`jBlTM...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotUnderCommand&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotUnderCommand) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="08e65856-971c-4999-8300-4fc286576729" testId="a7e2a721-3563-39c5-7376-cae790c2c303" testName="ETADay(&quot;50000000000000000000000000000000000000000000001000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004060" startTime="2024-04-03T16:58:35.1985557+02:00" endTime="2024-04-03T16:58:35.1989612+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08e65856-971c-4999-8300-4fc286576729">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000001000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d05ab85b-43bc-4b46-9143-f47973406867" testId="de7190b1-5f48-e7fb-4be5-e2308f383708" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0008700" startTime="2024-04-03T16:58:35.0487029+02:00" endTime="2024-04-03T16:58:35.0495730+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d05ab85b-43bc-4b46-9143-f47973406867">
      <Output>
        <StdOut>When I parse 'B3mR5u000HFQD;av`1arKwt5oP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mR5u000HFQD;av`...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Type is 18&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TypeIs(StandardClassBEqu...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d86eded5-5017-44ad-839f-a445b156f230" testId="7ee4507d-118f-b2d7-5f30-4f1c8fdd4c92" testName="PartAName(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009310" startTime="2024-04-03T16:58:35.2572659+02:00" endTime="2024-04-03T16:58:35.2581964+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d86eded5-5017-44ad-839f-a445b156f230">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1fab2d70-2cce-47d4-8e51-73d36b29b939" testId="d4a15018-5745-15be-4c96-67be687caedb" testName="CourseOverGround(&quot;B000000000000000003Pt0000000&quot;,&quot;0&quot;,&quot;3599&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003530" startTime="2024-04-03T16:58:35.0334094+02:00" endTime="2024-04-03T16:58:35.0337620+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1fab2d70-2cce-47d4-8e51-73d36b29b939">
      <Output>
        <StdOut>When I parse 'B000000000000000003Pt0000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 3599&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(3599) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="661d3686-2b52-4b16-b34b-9b230622eeac" testId="1fbf5e61-48e2-da54-a1e5-a22002bf2fa8" testName="CallSign(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;OWBY2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.1712750+02:00" endTime="2024-04-03T16:58:35.1716771+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="661d3686-2b52-4b16-b34b-9b230622eeac">
      <Output>
        <StdOut>When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is OWBY2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("OWBY2") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10dca6c8-54a4-4ba9-9eae-f0f5c78a3ae5" testId="614b5d07-674a-972c-0e48-975e4f12588c" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0006450" startTime="2024-04-03T16:58:34.8317146+02:00" endTime="2024-04-03T16:58:34.8323596+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10dca6c8-54a4-4ba9-9eae-f0f5c78a3ae5">
      <Output>
        <StdOut>When I parse '4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Base Station Report&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("4028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisBaseStationReportParser.Type is 4&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TypeIs(BaseStationReport) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="22cdef69-af1a-4cc7-b580-265eb5372351" testId="7e7b50e7-cfbb-195e-ca37-85a3961d42d5" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;4&quot;,&quot;119&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3529033+02:00" endTime="2024-04-03T16:58:35.3532047+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="22cdef69-af1a-4cc7-b580-265eb5372351">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 119&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(119) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="725ff926-ea21-414f-9ba7-68bfb73ac195" testId="7ef6fede-a1fa-e5e5-6844-ccaca7e8c4f1" testName="UnsignedAligned6_BitInteger(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,&quot;24&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002970" startTime="2024-04-03T16:58:35.3651205+02:00" endTime="2024-04-03T16:58:35.3654177+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="725ff926-ea21-414f-9ba7-68bfb73ac195">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'H00000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("H0000000000000000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 24&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(24) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1740847d-0671-4cc2-be9d-8b95c8a4e3e9" testId="42073682-43cd-d0be-fc55-9adebdb9be72" testName="LongitudeAndLatitute(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;8107857&quot;,&quot;46103377&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004680" startTime="2024-04-03T16:58:34.9613830+02:00" endTime="2024-04-03T16:58:34.9618509+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1740847d-0671-4cc2-be9d-8b95c8a4e3e9">
      <Output>
        <StdOut>When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 8107857&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(8107857) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 46103377&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(46103377) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b5a36835-5327-4d59-9daf-5e2c0008b219" testId="597f1eb7-11ad-6d43-463f-4af998588ec3" testName="ConvertAIS6_BitCharacterToASCII(&quot;57&quot;,&quot;'9'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002200" startTime="2024-04-03T16:58:35.3438897+02:00" endTime="2024-04-03T16:58:35.3441094+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5a36835-5327-4d59-9daf-5e2c0008b219">
      <Output>
        <StdOut>When I convert the AIS character value 57 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(57) (0,0s)&#xD;
Then the converted ASCII value should be '9'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(9) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b887886e-523d-4c63-80e2-bd351106a301" testId="1b06e212-fb6a-fdcd-0c5e-0e85b90581b8" testName="RadioSlotTimeout(&quot;13m9`rdw01QAv`&lt;WiMAbF3ap2H1a&quot;,&quot;0&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:34.9924717+02:00" endTime="2024-04-03T16:58:34.9928078+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b887886e-523d-4c63-80e2-bd351106a301">
      <Output>
        <StdOut>When I parse '13m9`rdw01QAv`&lt;WiMAbF3ap2H1a' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m9`rdw01QAv`&lt;Wi...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 6&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(6) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6d9e0481-e09f-47de-acc0-522b10c31859" testId="959a9947-e742-b918-a0e5-cd19c2954198" testName="RateOfTurn(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:35.0052365+02:00" endTime="2024-04-03T16:58:35.0055726+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d9e0481-e09f-47de-acc0-522b10c31859">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="30d367a7-0194-4b92-974d-28b52e04ab39" testId="f084e90f-268a-f2ef-e9b5-efc789c363b9" testName="UnsignedAligned6_BitInteger(&quot;33n24L00000p3bHUiw&lt;v46`60?Kk&quot;,&quot;0&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3635786+02:00" endTime="2024-04-03T16:58:35.3638792+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="30d367a7-0194-4b92-974d-28b52e04ab39">
      <Output>
        <StdOut>Given an NMEA AIS payload of '33n24L00000p3bHUiw&lt;v46`60?Kk' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("33n24L00000p3bHUi...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0ecbf2f5-acb8-47d8-b22d-781398d1a9e9" testId="3b14af35-95b9-ece9-5dea-6485de2c6aae" testName="ConvertAIS6_BitCharacterToASCII(&quot;6&quot;,&quot;'F'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002240" startTime="2024-04-03T16:58:35.3294603+02:00" endTime="2024-04-03T16:58:35.3296839+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0ecbf2f5-acb8-47d8-b22d-781398d1a9e9">
      <Output>
        <StdOut>When I convert the AIS character value 6 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(6) (0,0s)&#xD;
Then the converted ASCII value should be 'F'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(F) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8a803e19-b9b7-41ba-8b7e-096059d23853" testId="1b8411a2-14e7-881d-84eb-9d092460f368" testName="MultipleLinesWithBlanksAtEnd" computerName="SCODE-HF8MJR2" duration="00:00:00.0013780" startTime="2024-04-03T16:58:35.5333668+02:00" endTime="2024-04-03T16:58:35.5347446+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8a803e19-b9b7-41ba-8b7e-096059d23853">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eb871ca7-e5d8-455a-b806-9e6cb1c5f3f3" testId="a99280ac-9cf1-3c25-0639-4e6a249d6c8e" testName="UnsignedAligned6_BitInteger(&quot;3000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3632654+02:00" endTime="2024-04-03T16:58:35.3635666+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb871ca7-e5d8-455a-b806-9e6cb1c5f3f3">
      <Output>
        <StdOut>Given an NMEA AIS payload of '3000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("30000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2841c4b5-00d9-4514-bafe-5419fbd36291" testId="aee4fb23-4723-0c3f-81fe-46eb3a60092d" testName="PositionFixType(&quot;500000000000000000000000000000000000000000000H0000000000000000000000000&quot;,&quot;0&quot;,&quot;IntegratedNavigationSystem&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003990" startTime="2024-04-03T16:58:35.2288649+02:00" endTime="2024-04-03T16:58:35.2292634+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2841c4b5-00d9-4514-bafe-5419fbd36291">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000H0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is IntegratedNavigationSystem&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(IntegratedNavigat...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a8238d38-cb9a-4495-ba90-2342ff041609" testId="1a5595fe-263d-88bb-9d14-61259bcd4a1e" testName="PositionFixType(&quot;50000000000000000000000000000000000000000000040000000000000000000000000&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005290" startTime="2024-04-03T16:58:35.2266780+02:00" endTime="2024-04-03T16:58:35.2272065+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a8238d38-cb9a-4495-ba90-2342ff041609">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000040000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Gps&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Gps) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f130e3e0-ea14-4691-8415-c9c285d2370e" testId="f52dd0a5-813f-0ca3-d357-85306a6fdca2" testName="AISVersion(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0020770" startTime="2024-04-03T16:58:35.1640237+02:00" endTime="2024-04-03T16:58:35.1661009+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f130e3e0-ea14-4691-8415-c9c285d2370e">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="23f284f6-08bc-4467-b587-5819cf2e431e" testId="9a45e0ce-1968-c407-44ff-a6a9b78867fe" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0010670" startTime="2024-04-03T16:58:35.0971099+02:00" endTime="2024-04-03T16:58:35.0981766+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="23f284f6-08bc-4467-b587-5819cf2e431e">
      <Output>
        <StdOut>When I parse 'C&gt;eq`d@000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Type is 19&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TypeIs(ExtendedClassBEqu...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="16081122-fce1-40e1-9e7d-53286be4082a" testId="00b192c1-97a2-fed1-74b7-a377d279b13b" testName="RadioSlotTimeout(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009090" startTime="2024-04-03T16:58:34.9868742+02:00" endTime="2024-04-03T16:58:34.9877827+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="16081122-fce1-40e1-9e7d-53286be4082a">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="40a37548-7308-42df-9faa-e4d58c6fb1d4" testId="6a2bb297-8ab8-bc9b-d295-4f3f0970ee91" testName="TimeStamp(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.0733140+02:00" endTime="2024-04-03T16:58:35.0736545+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="40a37548-7308-42df-9faa-e4d58c6fb1d4">
      <Output>
        <StdOut>When I parse 'B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m:&lt;b0008&lt;B&lt;s8TO...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49ecd53b-3b66-4742-8af7-bd40f85853a5" testId="c99ebe3e-55d4-d07e-f9f5-854d05f2aafb" testName="PeekMessageTypeWithoutDecodingInFull(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0015140" startTime="2024-04-03T16:58:35.5595583+02:00" endTime="2024-04-03T16:58:35.5610727+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49ecd53b-3b66-4742-8af7-bd40f85853a5">
      <Output>
        <StdOut>When I peek at the payload '1000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("10000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 1&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="757ba80e-d333-45a2-bf98-92ef37ebc563" testId="d5228018-3e22-aaf7-a40d-fda110134d29" testName="PartBDimensionToPort(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009430" startTime="2024-04-03T16:58:35.2804827+02:00" endTime="2024-04-03T16:58:35.2814260+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="757ba80e-d333-45a2-bf98-92ef37ebc563">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="47072802-0fc5-4403-a6fd-f30181b7fca8" testId="3aa0b42b-ee9a-aee1-eb13-70821f935a64" testName="TimeStamp(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009150" startTime="2024-04-03T16:58:35.0715416+02:00" endTime="2024-04-03T16:58:35.0724563+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="47072802-0fc5-4403-a6fd-f30181b7fca8">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="741297b7-76e6-4ab2-a3f0-66e1d13c4b01" testId="46370188-f9de-3064-68f7-790dc7e77d2f" testName="LongitudeAndLatitude(&quot;B000000007wwwwP0000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004640" startTime="2024-04-03T16:58:35.0450764+02:00" endTime="2024-04-03T16:58:35.0455407+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="741297b7-76e6-4ab2-a3f0-66e1d13c4b01">
      <Output>
        <StdOut>When I parse 'B000000007wwwwP0000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B000000007wwwwP00...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(-1) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e117aa90-b0e4-45e0-bc0b-4105a3f40fa0" testId="9e8b7538-7f5e-51df-66f5-f52588a562df" testName="RadioStatusType(&quot;B000000000000000000000002000&quot;,&quot;0&quot;,&quot;Itdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005999" startTime="2024-04-03T16:58:35.0568491+02:00" endTime="2024-04-03T16:58:35.0574490+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e117aa90-b0e4-45e0-bc0b-4105a3f40fa0">
      <Output>
        <StdOut>When I parse 'B000000000000000000000002000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RadioStatusType is Itdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RadioStatusTypeIsSOTDMA(Itdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a377287-def5-4c82-94f3-41a67d08a681" testId="aa54627f-1cae-13f1-3ead-5b3536e6a3e5" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;3&quot;,&quot;46&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3754370+02:00" endTime="2024-04-03T16:58:35.3757363+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a377287-def5-4c82-94f3-41a67d08a681">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 46&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(46) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ee46d4d3-24f7-4dfc-a11b-f3167e79d6a5" testId="1cf65927-c8c1-8594-1569-04eea56b6083" testName="ConvertAIS6_BitCharacterToASCII(&quot;54&quot;,&quot;'6'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3432018+02:00" endTime="2024-04-03T16:58:35.3434230+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee46d4d3-24f7-4dfc-a11b-f3167e79d6a5">
      <Output>
        <StdOut>When I convert the AIS character value 54 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(54) (0,0s)&#xD;
Then the converted ASCII value should be '6'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(6) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bdf575ef-c879-4a9f-ab03-bb684cf3d354" testId="79d17eac-87bf-0990-b186-23d023b73738" testName="FullMessage(&quot;Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10&quot;,&quot;0&quot;,&quot;21&quot;,&quot;3&quot;,&quot;995036238&quot;,&quot;28&quot;,&quot;JACKSON ROCK@@@@@@@@&quot;,&quot;true&quot;,&quot;69358400&quot;,&quot;-12399100&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;7&quot;,&quot;37&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0138590" startTime="2024-04-03T16:58:34.7800607+02:00" endTime="2024-04-03T16:58:34.7939192+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bdf575ef-c879-4a9f-ab03-bb684cf3d354">
      <Output>
        <StdOut>When I parse 'Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("Evlt&lt;Cf50QUaWW@97...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RepeatIndicator is 3&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RepeatIndicatorIs(3) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Mmsi is 995036238&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_MmsiIs(995036238) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AidsToNavigationType is 28&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AidsToNavigationTypeIs(IsolatedDanger) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidsToNavigation is JACKSON ROCK@@@@@@@@&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidsToNavigationIs("JACKSON ROCK@@@@@@@@") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.PositionAccuracy is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Longitude10000thMins is 69358400&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Longitude10000thMinsIs(69358400) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Latitude10000thMins is -12399100&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Latitude10000thMinsIs(-12399100) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionA is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionAIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionB is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionBIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionC is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionCIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionD is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionDIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.EpfdFixType is 7&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_EpfdFixTypeIs(Surveyed) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.TimeStampSecond is 37&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TimeStampSecondIs(37) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.OffPositionIndicator is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_OffPositionIndicatorIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AtoNStatus is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AtoNStatusIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RaimFlag is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.VirtualAtoN is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_VirtualAtoNIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AssignedMode is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBit241 is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBit241Is(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidToNavigationExtension is&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidToNavigationExtensionIs("") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBitsAtEndIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ca3b8cf9-4923-49f4-a6d7-119c795c4ca0" testId="5cdcdf43-8c7a-87dd-3541-11e8d901df78" testName="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004460" startTime="2024-04-03T16:58:35.5790699+02:00" endTime="2024-04-03T16:58:35.5795160+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca3b8cf9-4923-49f4-a6d7-119c795c4ca0">
      <Output>
        <StdOut>When I parse a message fragment part 2 of 3 with message id 0 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(2, 3, "0") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8253af2c-452f-43e7-83c8-a2adcbcd74b1" testId="ebb9df6d-2299-db14-a33b-d236a74b068d" testName="PartAMMSI(&quot;H00000@00000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004660" startTime="2024-04-03T16:58:35.2553480+02:00" endTime="2024-04-03T16:58:35.2558134+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8253af2c-452f-43e7-83c8-a2adcbcd74b1">
      <Output>
        <StdOut>When I parse 'H00000@00000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H00000@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eedf90bd-0329-4604-9bdb-1df11e1f44ba" testId="a0707f91-bdfa-2693-216b-8557e8e160d4" testName="PartAName(&quot;H3m8;Q1A8Tt0000000000000000&quot;,&quot;2&quot;,&quot;TRIO@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003640" startTime="2024-04-03T16:58:35.2602478+02:00" endTime="2024-04-03T16:58:35.2606120+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eedf90bd-0329-4604-9bdb-1df11e1f44ba">
      <Output>
        <StdOut>When I parse 'H3m8;Q1A8Tt0000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3m8;Q1A8Tt000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is TRIO@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("TRIO@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0dca4e9-3d68-481c-9136-09ff5230341c" testId="25fd5efd-34f0-9b3f-2718-c2a053b48c56" testName="DimensionToPort(&quot;C00000000000000000000000000000000000000000000000OP00&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.0875735+02:00" endTime="2024-04-03T16:58:35.0879708+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0dca4e9-3d68-481c-9136-09ff5230341c">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000000OP00' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToPort is 63&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToPortIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="219a6c6d-597c-4514-b7c4-5a1006c4536f" testId="3736d342-7e1d-842a-14d6-58f987c7f4d1" testName="PartAMessageType(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005800" startTime="2024-04-03T16:58:35.2533654+02:00" endTime="2024-04-03T16:58:35.2539452+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="219a6c6d-597c-4514-b7c4-5a1006c4536f">
      <Output>
        <StdOut>When I parse 'H000000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartA.PartNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_PartNumberIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fca96f5e-8294-4211-918a-fa23c0e4167c" testId="76ea33fc-9a4e-cf1d-9f45-da6f63a037a4" testName="UnsignedAligned6_BitInteger(&quot;ABC:&quot;,&quot;0&quot;,&quot;18&quot;,&quot;10&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3676315+02:00" endTime="2024-04-03T16:58:35.3679306+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fca96f5e-8294-4211-918a-fa23c0e4167c">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABC:' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC:", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 10&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(10) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="671bd3bd-86b0-4c02-9e7c-cb6262ceb463" testId="77b4f4e0-8658-1e3c-feed-c54181211703" testName="IEMTagBlockButNmeaGroup" computerName="SCODE-HF8MJR2" duration="00:00:00.0018840" startTime="2024-04-03T16:58:35.5511230+02:00" endTime="2024-04-03T16:58:35.5530069+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="671bd3bd-86b0-4c02-9e7c-cb6262ceb463">
      <Output>
        <StdOut>Given the line '\g:1-2-9628,s:AIS,c:1701650788*13\!AIVDM,2,1,2,B,55Mv3A`00001L=SKOG9@tlmV0F2222222222220l189446lgN5j3mDm3kc56,0*4E'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.GivenALine("\g:1-2-9628,s:AIS...") (0,0s)&#xD;
When I parse the content by message with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseTheContentByMessageAsync(False, IEC) (0,0s)&#xD;
Then the message error report 0 should include the error message 'Tag block sentence grouping should be &lt;int&gt;G&lt;int&gt;:&lt;int&gt;, but first part was not a decimal integer'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "Tag block sentenc...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="934cc283-bb6a-4fab-ad7d-bbfa675842a1" testId="dc6960e2-8232-0490-f4d0-7c7fcda95854" testName="TimeStamp(&quot;B000000000000000000000MP0000&quot;,&quot;0&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003510" startTime="2024-04-03T16:58:35.0729502+02:00" endTime="2024-04-03T16:58:35.0733013+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="934cc283-bb6a-4fab-ad7d-bbfa675842a1">
      <Output>
        <StdOut>When I parse 'B000000000000000000000MP0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 59&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0c03bced-6a70-4a5b-9730-7afb7d6dd0b8" testId="7eb3b820-10db-a369-5a3e-183bc84aeda3" testName="CourseOverGround(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:35.0341352+02:00" endTime="2024-04-03T16:58:35.0344809+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c03bced-6a70-4a5b-9730-7afb7d6dd0b8">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="90623499-550f-45ad-8044-fb430d5e2ac1" testId="e1a67b44-84e7-c6b0-cf36-814d395770ce" testName="DisplayFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003510" startTime="2024-04-03T16:58:35.0396715+02:00" endTime="2024-04-03T16:58:35.0400219+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="90623499-550f-45ad-8044-fb430d5e2ac1">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="303b67eb-a0df-4624-a2c7-96d1122a4acd" testId="161713fc-8b09-2d3b-c38e-e9fe2925aa63" testName="RepeatIndicator(&quot;:00000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006150" startTime="2024-04-03T16:58:34.8655738+02:00" endTime="2024-04-03T16:58:34.8661889+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="303b67eb-a0df-4624-a2c7-96d1122a4acd">
      <Output>
        <StdOut>When I parse ':00000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":00000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5ac969eb-5536-4867-8302-e267a167638e" testId="fea6c937-7f33-5409-b331-dd4bb97f1e2a" testName="Spare(&quot;C000000000000000000000000000000000000000000000000008&quot;,&quot;0&quot;,&quot;8&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003880" startTime="2024-04-03T16:58:35.1254692+02:00" endTime="2024-04-03T16:58:35.1258573+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5ac969eb-5536-4867-8302-e267a167638e">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000008' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 8&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7747dfa-bdf0-4277-b18f-c3d1b3447021" testId="675ba778-a08e-c48e-1f1c-2539cb263993" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;5&quot;,&quot;-17&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3532129+02:00" endTime="2024-04-03T16:58:35.3535136+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7747dfa-bdf0-4277-b18f-c3d1b3447021">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-17) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="18b4e60d-11ca-48e5-bb92-c3b951a70d38" testId="4d4fb723-f295-e7f1-9ebc-6e1541a4dde3" testName="SingleLineWhereLineTruncatedAtPaddingComma" computerName="SCODE-HF8MJR2" duration="00:00:00.0014730" startTime="2024-04-03T16:58:35.5114368+02:00" endTime="2024-04-03T16:58:35.5129093+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="18b4e60d-11ca-48e5-bb92-c3b951a70d38">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the padding is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatThePaddingIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="59c69174-bf92-4b24-b35d-87ac35960367" testId="ee78e767-37f8-6eb6-959e-e6eaa4994c47" testName="NavigationStatus(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;ReservedForFutureUse11&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:34.9832150+02:00" endTime="2024-04-03T16:58:34.9835590+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="59c69174-bf92-4b24-b35d-87ac35960367">
      <Output>
        <StdOut>When I parse '13m6;7cP020HJ`JRs9l0A?v`08&lt;9' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m6;7cP020HJ`JRs...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse11&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="89355c4a-a696-40de-a61b-b91e209b32d1" testId="96b64768-99c3-5c99-ee94-4c6601d3166c" testName="SingleBit(&quot;0000000000P00000000000000000&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003100" startTime="2024-04-03T16:58:35.3607230+02:00" endTime="2024-04-03T16:58:35.3610328+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="89355c4a-a696-40de-a61b-b91e209b32d1">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000000P00000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P000000...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b56fa3c1-f308-4536-885b-a59724b86430" testId="913fc06a-3d18-4dc6-99fe-d908a165a165" testName="MMSI(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;257745000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2252711+02:00" endTime="2024-04-03T16:58:35.2256655+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b56fa3c1-f308-4536-885b-a59724b86430">
      <Output>
        <StdOut>When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 257745000&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(257745000) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="78e593ef-f752-4fe5-9ec2-bb2d2aec229e" testId="5b7d8556-5bd7-da04-88b6-c99876456cb0" testName="SingleLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0007230" startTime="2024-04-03T16:58:35.5092126+02:00" endTime="2024-04-03T16:58:35.5099353+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="78e593ef-f752-4fe5-9ec2-bb2d2aec229e">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5637b07b-b4c4-4e2e-9344-7acf7536c167" testId="bd7780fd-fa19-5965-0760-d807f8ea9946" testName="FullMessage(&quot;&gt;&gt;m&gt;cDPp5HTL5@Ttp4j1L58pTpN2ba0EA8tr1&lt;8nbb0U&gt;0H4ThTpL0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;995339090&quot;,&quot;0&quot;,&quot;\&quot;NAVIGATIONAL WARNING **PETRON SBM** IS FAILING@\&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0012420" startTime="2024-04-03T16:58:35.1373436+02:00" endTime="2024-04-03T16:58:35.1385855+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5637b07b-b4c4-4e2e-9344-7acf7536c167">
      <Output>
        <StdOut>When I parse '&gt;&gt;m&gt;cDPp5HTL5@Ttp4j1L58pTpN2ba0EA8tr1&lt;8nbb0U&gt;0H4ThTpL0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;&gt;m&gt;cDPp5HTL5@Ttp...", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.RepeatIndicator is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.Mmsi is 995339090&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_MmsiIs(995339090) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SpareBit38 is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SpareBit38Is(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SafetyRelatedText is "NAVIGATIONAL WARNING **PETRON SBM** IS FAILING@"&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SafetyRelatedTextIs(""NAVIGATIONAL WAR...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="156f5038-45c8-4a0a-8c9b-2d98f08d041d" testId="77eb8b91-6863-70c7-ad80-7ccf88a77113" testName="RadioSlotTimeout(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003350" startTime="2024-04-03T16:58:34.9907422+02:00" endTime="2024-04-03T16:58:34.9910770+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="156f5038-45c8-4a0a-8c9b-2d98f08d041d">
      <Output>
        <StdOut>When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4bef10b5-d1e5-46db-83b7-14739dd50926" testId="fef430fa-c061-a26e-3f13-368adddf7d35" testName="RateOfTurn(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008990" startTime="2024-04-03T16:58:35.0031443+02:00" endTime="2024-04-03T16:58:35.0040427+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4bef10b5-d1e5-46db-83b7-14739dd50926">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0a2b8db2-3452-4192-8c13-f14367f76346" testId="b891cedf-639a-f9a5-6551-ea9adae01ccd" testName="SpeedOverGround(&quot;1000000001000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004710" startTime="2024-04-03T16:58:35.0152501+02:00" endTime="2024-04-03T16:58:35.0157214+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0a2b8db2-3452-4192-8c13-f14367f76346">
      <Output>
        <StdOut>When I parse '1000000001000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000010000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="68ea0f93-a08f-4fd0-b293-ca847df677f2" testId="9fde8896-f2de-f548-e144-15f1eb08814f" testName="FragmentedMessagesWithoutGroupIdsInHeader(&quot;2&quot;,&quot;2&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007260" startTime="2024-04-03T16:58:35.5778686+02:00" endTime="2024-04-03T16:58:35.5785943+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="68ea0f93-a08f-4fd0-b293-ca847df677f2">
      <Output>
        <StdOut>When I parse a message fragment part 2 of 2 with message id 6 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(2, 2, "6") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3338a079-9511-493f-878f-5a2b133ca345" testId="0f69575f-a9c9-fc1f-dbde-e8fd2944d1b3" testName="NavigationStatus(&quot;100000=000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse13&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:34.9785138+02:00" endTime="2024-04-03T16:58:34.9788570+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3338a079-9511-493f-878f-5a2b133ca345">
      <Output>
        <StdOut>When I parse '100000=000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000=0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse13&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9181c386-bf36-4303-9ca7-c9ab7bc0492e" testId="349633e9-a9b7-3daf-748b-773508b0900f" testName="TimeStamp(&quot;10000000000000000000001v0000&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0201651+02:00" endTime="2024-04-03T16:58:35.0205080+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9181c386-bf36-4303-9ca7-c9ab7bc0492e">
      <Output>
        <StdOut>When I parse '10000000000000000000001v0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 63&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2bedfef1-ceb9-4be9-9eb3-2c59fbb4b85c" testId="b9078cc5-993f-a717-a283-1d131b07ea5c" testName="IMONumber(&quot;5000003cNJ;500000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004050" startTime="2024-04-03T16:58:35.2198915+02:00" endTime="2024-04-03T16:58:35.2202959+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2bedfef1-ceb9-4be9-9eb3-2c59fbb4b85c">
      <Output>
        <StdOut>When I parse '5000003cNJ;500000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5000003cNJ;500000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 987654321&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf19c1a5-6a25-4193-a363-25c9b926b086" testId="896b3124-2cfa-5348-05c9-35d2c9df9461" testName="ShipType(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;CargoHazardousCategoryB&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004010" startTime="2024-04-03T16:58:35.2382350+02:00" endTime="2024-04-03T16:58:35.2386362+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf19c1a5-6a25-4193-a363-25c9b926b086">
      <Output>
        <StdOut>When I parse '548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("548dvb02&lt;&lt;pTiT8l0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is CargoHazardousCategoryB&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(CargoHazardousCat...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ab486e5-294b-4664-8c05-800f8d5389e9" testId="64a6915c-df53-c4b2-1c4c-4607840b4c95" testName="ConvertAIS6_BitCharacterToASCII(&quot;7&quot;,&quot;'G'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3296920+02:00" endTime="2024-04-03T16:58:35.3299129+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ab486e5-294b-4664-8c05-800f8d5389e9">
      <Output>
        <StdOut>When I convert the AIS character value 7 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(7) (0,0s)&#xD;
Then the converted ASCII value should be 'G'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(G) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9f7f1888-63f4-4b5b-ae63-04889e155eca" testId="34312caa-699f-8e86-c653-287d5b9cec05" testName="FullMessage(&quot;A028nBCt@hbs02Gvd0H@2gop2ABb&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2242121&quot;,&quot;0&quot;,&quot;-3828&quot;,&quot;21976&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2Gvd0H@2gop2ABb&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018930" startTime="2024-04-03T16:58:34.9186783+02:00" endTime="2024-04-03T16:58:34.9205709+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f7f1888-63f4-4b5b-ae63-04889e155eca">
      <Output>
        <StdOut>When I parse 'A028nBCt@hbs02Gvd0H@2gop2ABb' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028nBCt@hbs02Gvd...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Mmsi is 2242121&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_MmsiIs(2242121) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits38 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Longitude10thMins is -3828&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Longitude10thMinsIs(-3828) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Latitude10thMins is 21976&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Latitude10thMinsIs(21976) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits75 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits75Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionDataPadding is 2&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionData is 2Gvd0H@2gop2ABb&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataIs("2Gvd0H@2gop2ABb") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="29150b39-fce0-4f69-84e7-116e1c0543af" testId="10ccb84c-844f-294d-791f-90d833ad20c6" testName="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004510" startTime="2024-04-03T16:58:35.5786073+02:00" endTime="2024-04-03T16:58:35.5790578+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="29150b39-fce0-4f69-84e7-116e1c0543af">
      <Output>
        <StdOut>When I parse a message fragment part 1 of 3 with message id 0 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(1, 3, "0") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e25b0b6a-4e33-4218-bb4f-a720421e5c12" testId="8cc6dcb3-3ef8-8a08-91c6-7896afb29ea1" testName="ConvertAIS6_BitCharacterToASCII(&quot;16&quot;,&quot;'P'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002190" startTime="2024-04-03T16:58:35.3317637+02:00" endTime="2024-04-03T16:58:35.3319821+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e25b0b6a-4e33-4218-bb4f-a720421e5c12">
      <Output>
        <StdOut>When I convert the AIS character value 16 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(16) (0,0s)&#xD;
Then the converted ASCII value should be 'P'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(P) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f2d8909c-e588-44ac-98b1-b3aa7a3323b6" testId="b15165ff-2dab-597c-b73b-81c42759809a" testName="UnsignedMisaligned6_BitInteger(&quot;10000000000000000000001f0000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;55&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003030" startTime="2024-04-03T16:58:35.3714089+02:00" endTime="2024-04-03T16:58:35.3717115+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f2d8909c-e588-44ac-98b1-b3aa7a3323b6">
      <Output>
        <StdOut>Given an NMEA AIS payload of '10000000000000000000001f0000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="30707f95-9f49-418b-99f7-5c2a58c85e14" testId="d483fbac-e797-3396-f5ca-7c37c7527fb8" testName="DimensionToStarboard(&quot;C000000000000000000000000000000000000000000000000OP0&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.0894875+02:00" endTime="2024-04-03T16:58:35.0898855+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="30707f95-9f49-418b-99f7-5c2a58c85e14">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000OP0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStarboard is 63&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToStarboardIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6e82f2a1-0391-478e-b074-c928326a069e" testId="8e64c27a-ded5-a42b-b287-7e1c0c7d0a8f" testName="SingleLineWithoutNewlineOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0007000" startTime="2024-04-03T16:58:35.5432498+02:00" endTime="2024-04-03T16:58:35.5439493+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6e82f2a1-0391-478e-b074-c928326a069e">
      <Output>
        <StdOut>Given an unterminated line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fb9fd778-4444-4823-bdaa-aea572690237" testId="971197da-8fcb-7314-768d-6a68609e14ab" testName="SpeedOverGround(&quot;10000000?w000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003520" startTime="2024-04-03T16:58:35.0157345+02:00" endTime="2024-04-03T16:58:35.0160864+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fb9fd778-4444-4823-bdaa-aea572690237">
      <Output>
        <StdOut>When I parse '10000000?w000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000?w0000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1023) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7a990a7d-5815-482d-b176-d4ca622c2a1b" testId="c36a81be-ffce-9a9d-9db7-412027b94d46" testName="ETAMinute(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2107503+02:00" endTime="2024-04-03T16:58:35.2111449+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7a990a7d-5815-482d-b176-d4ca622c2a1b">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd6cd7a4-5a70-4ab8-bcbd-e1aad3b6f6b7" testId="53119093-25a2-c291-7943-6ac8304fec36" testName="CourseOverGround(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;68&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:34.9559618+02:00" endTime="2024-04-03T16:58:34.9563095+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd6cd7a4-5a70-4ab8-bcbd-e1aad3b6f6b7">
      <Output>
        <StdOut>When I parse '13m6;7cP020HJ`JRs9l0A?v`08&lt;9' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m6;7cP020HJ`JRs...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 68&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(68) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0de34d0d-bae8-4649-9d42-e60874ef1a87" testId="5981b7eb-a63b-7a23-db45-c2f59252e836" testName="PositionAccuracy(&quot;1000000000P00000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004800" startTime="2024-04-03T16:58:34.9856325+02:00" endTime="2024-04-03T16:58:34.9861121+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0de34d0d-bae8-4649-9d42-e60874ef1a87">
      <Output>
        <StdOut>When I parse '1000000000P00000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000000P000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bddab4e6-b47d-4d46-809d-ea6f08b6e297" testId="9a09bf79-60b0-b03c-1713-ca10a247dd63" testName="DimensionToBow(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0024010" startTime="2024-04-03T16:58:35.0826796+02:00" endTime="2024-04-03T16:58:35.0850809+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bddab4e6-b47d-4d46-809d-ea6f08b6e297">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToBow is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToBowIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2517aa33-fab1-44c2-b656-f9244e849a23" testId="5eada7fc-2acc-aea8-35b1-6fca73adf22a" testName="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000&lt;0&quot;,&quot;0&quot;,&quot;IntegratedNavigationSystem&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003920" startTime="2024-04-03T16:58:35.1085641+02:00" endTime="2024-04-03T16:58:35.1089558+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2517aa33-fab1-44c2-b656-f9244e849a23">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000000000&lt;0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is IntegratedNavigationSystem&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(IntegratedNavigat...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="628800e1-ea9e-4436-a9e7-b458f740965a" testId="b1513997-d316-7779-e7dc-251957007d9e" testName="SingleCRLFBlankLineOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0005689" startTime="2024-04-03T16:58:35.5413807+02:00" endTime="2024-04-03T16:58:35.5419498+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="628800e1-ea9e-4436-a9e7-b458f740965a">
      <Output>
        <StdOut>Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c231f0c0-aa8a-4bbe-bfa5-cc3ca1b1499a" testId="5ce065dc-140e-8f97-0183-83ba61be2920" testName="TimeStamp(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;31&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:35.0743720+02:00" endTime="2024-04-03T16:58:35.0747114+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c231f0c0-aa8a-4bbe-bfa5-cc3ca1b1499a">
      <Output>
        <StdOut>When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 31&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(31) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="52215dcf-f036-487c-a496-eb012c855b63" testId="a4463ca8-d345-2ac8-d414-e2b722430e40" testName="RegionalReservedBits38_45(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009320" startTime="2024-04-03T16:58:35.0625280+02:00" endTime="2024-04-03T16:58:35.0634603+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="52215dcf-f036-487c-a496-eb012c855b63">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1e5a9ef7-1e63-4b37-b1ce-5360f964173a" testId="d244013b-46db-30f8-5da4-71951c795b7a" testName="PeekMessageTypeWithoutDecodingInFull(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002390" startTime="2024-04-03T16:58:35.5626649+02:00" endTime="2024-04-03T16:58:35.5629038+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1e5a9ef7-1e63-4b37-b1ce-5360f964173a">
      <Output>
        <StdOut>When I peek at the payload '50000000000000000000000000000000000000000000000000000000000000000000000' with padding of 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("50000000000000000...", 2) (0,0s)&#xD;
Then the message type returned by peek should be 5&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c0b68023-70c2-4deb-99b9-f23e95f47bf4" testId="1a423eb0-3e54-e0c3-539d-079d0889efd7" testName="ConvertAIS6_BitCharacterToASCII(&quot;35&quot;,&quot;'#'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002850" startTime="2024-04-03T16:58:35.3364819+02:00" endTime="2024-04-03T16:58:35.3367672+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0b68023-70c2-4deb-99b9-f23e95f47bf4">
      <Output>
        <StdOut>When I convert the AIS character value 35 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(35) (0,0s)&#xD;
Then the converted ASCII value should be '#'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(#) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8e3452ad-b06b-472a-ae10-cba06a747d52" testId="5cac0706-8221-16ff-eeb5-64881d3c75ac" testName="DimensionToPort(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;19&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.1823035+02:00" endTime="2024-04-03T16:58:35.1827052+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8e3452ad-b06b-472a-ae10-cba06a747d52">
      <Output>
        <StdOut>When I parse '548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("548dvb02&lt;&lt;pTiT8l0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 19&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(19) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8039aa39-3ab3-4bfc-9ae4-89a5e5ff46f2" testId="0ecf26e4-9e7a-f173-78c5-b406abf8d2ba" testName="SpeedOverGround(&quot;C0000003wh000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.1281639+02:00" endTime="2024-04-03T16:58:35.1285603+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8039aa39-3ab3-4bfc-9ae4-89a5e5ff46f2">
      <Output>
        <StdOut>When I parse 'C0000003wh000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000003wh0000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_SpeedOverGroundTenthsIs(1023) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8f33794c-21bb-42c2-9d7b-8e9ecbf27a9e" testId="7152799f-ea99-d02c-7439-43b04cc6e5c4" testName="TimeStamp(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;13&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0740196+02:00" endTime="2024-04-03T16:58:35.0743596+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f33794c-21bb-42c2-9d7b-8e9ecbf27a9e">
      <Output>
        <StdOut>When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 13&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(13) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fc4dcd1a-d1b3-4392-bc66-56e58dd80ea8" testId="c050b12c-92dd-28b7-3fd8-dc62e7ca1abe" testName="PositionFixType(&quot;500000000000000000000000000000000000000000000@0000000000000000000000000&quot;,&quot;0&quot;,&quot;LoranC&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2280486+02:00" endTime="2024-04-03T16:58:35.2284452+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fc4dcd1a-d1b3-4392-bc66-56e58dd80ea8">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000@0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is LoranC&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(LoranC) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f9713d21-b7d0-4616-aaa9-2d92ff2e4030" testId="d0382289-48c3-472f-3928-e04a6a9f4469" testName="PartBDimensionToStern(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003470" startTime="2024-04-03T16:58:35.2875803+02:00" endTime="2024-04-03T16:58:35.2879276+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f9713d21-b7d0-4616-aaa9-2d92ff2e4030">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6232dbb9-e2c2-44cd-9fae-668c346095c3" testId="48d6c016-974d-2866-9cd5-62a3721cda10" testName="SpeedOverGround(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008910" startTime="2024-04-03T16:58:35.0143455+02:00" endTime="2024-04-03T16:58:35.0152366+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6232dbb9-e2c2-44cd-9fae-668c346095c3">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd738c19-5caf-4490-afc0-e8c178d5ccf3" testId="291856fc-8773-a015-6d4a-19d974076703" testName="UnsignedAligned6_BitInteger(&quot;ABC`&quot;,&quot;0&quot;,&quot;18&quot;,&quot;40&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3682451+02:00" endTime="2024-04-03T16:58:35.3685428+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd738c19-5caf-4490-afc0-e8c178d5ccf3">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABC`' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC`", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 40&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(40) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="51dd2372-0407-4d72-b841-2200daf9000d" testId="62f4dac7-ae89-61a1-8d14-60ec4a844c5f" testName="UnsignedMisaligned6_BitInteger(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;137&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3720363+02:00" endTime="2024-04-03T16:58:35.3723375+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="51dd2372-0407-4d72-b841-2200daf9000d">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c1a94ceb-37eb-4036-b54c-b9f2465620ca" testId="172419dd-4cb2-9494-7052-bbcb2bd6ed7c" testName="UnspecifiedStandardTagBlock(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006770" startTime="2024-04-03T16:58:35.5568877+02:00" endTime="2024-04-03T16:58:35.5575649+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c1a94ceb-37eb-4036-b54c-b9f2465620ca">
      <Output>
        <StdOut>When I parse 's:AIS,c:1706800491*63' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:AIS,c:170680049...", False, Unspecified) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800491&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800491) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b1891524-0e49-427f-bb24-569217040619" testId="13980a52-f0d5-579c-9da4-f0b43777af47" testName="UnsignedMisaligned6_BitInteger(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;137&quot;,&quot;44&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3717234+02:00" endTime="2024-04-03T16:58:35.3720244+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1891524-0e49-427f-bb24-569217040619">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13nW5&lt;00000IoPlSbE`:P8EH0534' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 44&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(44) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ebb0c7b8-b9b7-482e-a32b-6b69d5c2d87d" testId="9fd27d51-93a4-c66b-0cd3-5eafb740b272" testName="ConvertAIS6_BitCharacterToASCII(&quot;29&quot;,&quot;']'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002230" startTime="2024-04-03T16:58:35.3347905+02:00" endTime="2024-04-03T16:58:35.3350130+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ebb0c7b8-b9b7-482e-a32b-6b69d5c2d87d">
      <Output>
        <StdOut>When I convert the AIS character value 29 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(29) (0,0s)&#xD;
Then the converted ASCII value should be ']'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(]) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b5c0cee1-a95d-4467-b0e7-cda0a4eac1e7" testId="e0780b9f-c970-79da-9305-7063b7f92062" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004840" startTime="2024-04-03T16:58:34.8558798+02:00" endTime="2024-04-03T16:58:34.8563634+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5c0cee1-a95d-4467-b0e7-cda0a4eac1e7">
      <Output>
        <StdOut>When I parse 'F028n@R2N2P3D73EB6`&gt;6bT20000' with padding 0 as a Channel management&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.WhenIParseWithNmeaAisChannelManagementParser("F028n@R2N2P3D73EB...", 0) (0,0s)&#xD;
Then NmeaAisChannelManagementParser.Type is 22&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TypeIs(ChannelManagement) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dab2a53f-781d-41f1-a8ef-9b94c88aa0e2" testId="c4593ebb-b6fa-d157-6f66-e7a3618757e5" testName="TrueHeading(&quot;B00000000000000000003wP00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003540" startTime="2024-04-03T16:58:35.0761471+02:00" endTime="2024-04-03T16:58:35.0765006+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dab2a53f-781d-41f1-a8ef-9b94c88aa0e2">
      <Output>
        <StdOut>When I parse 'B00000000000000000003wP00000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="445a9b7f-1637-46ac-a581-05772d10768a" testId="e663960c-b19c-864c-a04e-af8d7bcbd81b" testName="ProgressReports" computerName="SCODE-HF8MJR2" duration="00:00:00.0042440" startTime="2024-04-03T16:58:35.4112652+02:00" endTime="2024-04-03T16:58:35.4155089+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="445a9b7f-1637-46ac-a581-05772d10768a">
      <Output>
        <StdOut>Given I have configured a MaximumUnmatchedFragmentAge of 10&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.GivenIHaveConfiguredAMaximumUnmatchedFragmentAgeOf(10) (0,0s)&#xD;
When the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54,0*63'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:3,c:1567692251...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*07'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:24,c:156769287...") (0,0s)&#xD;
And the line to message adapter receives a progress report of false, 6, 1234, 6, 1234&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAProgressReportOfFalse(False, 6, 1234, 6, 1234) (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:67,c:1567693000*34\!AIVDM,1,1,,,3CnWHf50000ga40TCHE0D0@R003B,0*4B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:67,c:156769300...") (0,0s)&#xD;
And the line to message adapter receives '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:772,c:15676932...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives a progress report of false, 10, 2345, 4, 1111&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAProgressReportOfFalse(False, 10, 2345, 4, 1111) (0,0s)&#xD;
And the line to message adapter receives '\s:722,c:1567693372*04\!AIVDM,1,1,,A,13m63A?P00P`@GFTK3s&gt;4?wR20Sf,0*71'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:722,c:15676933...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:808,c:1567693618*0A\!AIVDM,1,1,,B,B3o8B&lt;00F8:0h694gOtbgwqUoP06,0*73'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:808,c:15676936...") (0,0s)&#xD;
And the line to message adapter receives a progress report of true, 13, 2445, 3, 100&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAProgressReportOfFalse(True, 13, 2445, 3, 100) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.Progress should have been called 3 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveProgressReports(3) (0,0s)&#xD;
And progress report 0 was false, 6, 4, 1234, 6, 4, 1234&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenProgressReportWasFalse(0, False, 6, 4, 1234, 6, 4, 1234) (0,0s)&#xD;
And progress report 1 was false, 10, 7, 2345, 4, 3, 1111&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenProgressReportWasFalse(1, False, 10, 7, 2345, 4, 3, 1111) (0,0s)&#xD;
And progress report 2 was true, 13, 10, 2445, 3, 3, 100&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenProgressReportWasFalse(2, True, 13, 10, 2445, 3, 3, 100) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="34a9912e-6ef3-429c-aff1-83cd54aa6ea7" testId="2f69a475-ef74-5756-fbad-a2b11b590740" testName="PartBSpare(&quot;H000004000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004600" startTime="2024-04-03T16:58:35.3081784+02:00" endTime="2024-04-03T16:58:35.3086380+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="34a9912e-6ef3-429c-aff1-83cd54aa6ea7">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000001' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Spare is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SpareIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cb5a4761-ac26-43d2-9d7c-2269a928b829" testId="6a78ab4f-801a-2685-8fa1-ce0ec28b1267" testName="MMSI(&quot;500000@0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005230" startTime="2024-04-03T16:58:35.2230923+02:00" endTime="2024-04-03T16:58:35.2236152+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb5a4761-ac26-43d2-9d7c-2269a928b829">
      <Output>
        <StdOut>When I parse '500000@0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("500000@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="247e3557-d12e-4adb-993c-f65e3885abf8" testId="a1395b97-7898-d7b6-38d7-ca96e604ce52" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;2&quot;,&quot;-35&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3522796+02:00" endTime="2024-04-03T16:58:35.3525778+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="247e3557-d12e-4adb-993c-f65e3885abf8">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 2) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -35&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-35) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6496dd51-46e6-416d-b29a-a37d0a1d785d" testId="4fac9da8-4ab0-f19a-d964-dcaf9b00eefe" testName="ConvertAIS6_BitCharacterToASCII(&quot;49&quot;,&quot;'1'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002200" startTime="2024-04-03T16:58:35.3420591+02:00" endTime="2024-04-03T16:58:35.3422793+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6496dd51-46e6-416d-b29a-a37d0a1d785d">
      <Output>
        <StdOut>When I convert the AIS character value 49 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(49) (0,0s)&#xD;
Then the converted ASCII value should be '1'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f05f4af3-9c29-4728-9490-6613ab838cd4" testId="9046d1f2-834c-b5f1-8f16-d0c8e6104398" testName="CSUnitFlag(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;Cstdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0378946+02:00" endTime="2024-04-03T16:58:35.0382345+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f05f4af3-9c29-4728-9490-6613ab838cd4">
      <Output>
        <StdOut>When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Cstdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Cstdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66b061c8-0f0f-46ae-ade2-722c91ed919e" testId="3c39c131-25b3-e860-0ba6-b6490ac0651e" testName="PositionFixType(&quot;C000000000000000000000000000000000000000000000000040&quot;,&quot;0&quot;,&quot;Glonass&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.1069421+02:00" endTime="2024-04-03T16:58:35.1073376+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66b061c8-0f0f-46ae-ade2-722c91ed919e">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000040' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Glonass&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Glonass) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e8a63755-64da-4544-b046-28794656f50b" testId="5cb16de8-99a4-6d68-7230-11a54ec4c223" testName="RepeatIndicator(&quot;BP00000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003510" startTime="2024-04-03T16:58:35.0668771+02:00" endTime="2024-04-03T16:58:35.0672279+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e8a63755-64da-4544-b046-28794656f50b">
      <Output>
        <StdOut>When I parse 'BP00000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("BP000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="24305268-68a3-4087-861b-4564e515a803" testId="85cd4429-fe6d-07f1-e8c6-1d980684e2c6" testName="OneUnparseableLineAndOneGoodLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0017250" startTime="2024-04-03T16:58:35.5062878+02:00" endTime="2024-04-03T16:58:35.5080126+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="24305268-68a3-4087-861b-4564e515a803">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 2) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6439c4c6-9ebe-4450-8586-2e54ecab7283" testId="336feeff-fece-cd62-3351-e18a873fa550" testName="PartBVendorIDITU_R1371_4(&quot;H000004012300000000000000000&quot;,&quot;0&quot;,&quot;ABC&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003230" startTime="2024-04-03T16:58:35.3170704+02:00" endTime="2024-04-03T16:58:35.3173935+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6439c4c6-9ebe-4450-8586-2e54ecab7283">
      <Output>
        <StdOut>When I parse 'H000004012300000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040123000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is ABC&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("ABC") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dc8f55ec-a47c-4059-880d-efbe532f07e9" testId="8b9dc158-1473-a110-ca88-0481151a1607" testName="PartARepeatIndicator(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008960" startTime="2024-04-03T16:58:35.2606459+02:00" endTime="2024-04-03T16:58:35.2615416+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc8f55ec-a47c-4059-880d-efbe532f07e9">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="866fddde-8c93-4cda-b7dc-975735a3709c" testId="d2b824c9-8ccc-f6f4-47cf-89c1fcdb1b31" testName="PartBVendorIDITU_R1371_3(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;SMTE4PL&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003270" startTime="2024-04-03T16:58:35.3146744+02:00" endTime="2024-04-03T16:58:35.3150015+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="866fddde-8c93-4cda-b7dc-975735a3709c">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is SMTE4PL&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("SMTE4PL") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4807bf4d-96c8-43d1-a0a6-5ffe959d533b" testId="ddc06bca-4f6c-fe7e-049f-57c5d1a664e5" testName="PartASpare(&quot;H000000000000000000000000020&quot;,&quot;0&quot;,&quot;128&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.2663859+02:00" endTime="2024-04-03T16:58:35.2667301+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4807bf4d-96c8-43d1-a0a6-5ffe959d533b">
      <Output>
        <StdOut>When I parse 'H000000000000000000000000020' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 128&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(128) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3ca1caaf-f241-4595-a1cf-4b65e3b46c9a" testId="259fe6f1-17fa-c141-d571-525279e760f8" testName="SpareBitsAt145(&quot;100000000000000000000000L000&quot;,&quot;0&quot;,&quot;7&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:35.0132886+02:00" endTime="2024-04-03T16:58:35.0136245+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ca1caaf-f241-4595-a1cf-4b65e3b46c9a">
      <Output>
        <StdOut>When I parse '100000000000000000000000L000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 7&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(7) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7ac34b26-912c-4977-81a7-30df89a2b94e" testId="e27c294f-413c-5f33-2866-17e8ef91ff2c" testName="SingleUnparseableLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0011590" startTime="2024-04-03T16:58:35.5229169+02:00" endTime="2024-04-03T16:58:35.5240753+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ac34b26-912c-4977-81a7-30df89a2b94e">
      <Output>
        <StdOut>Given a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4d46d87-d51a-4686-8ebb-d00ec9422f8b" testId="bc44fbf3-1471-b132-cdfd-f80810a48a89" testName="ConvertAIS6_BitCharacterToASCII(&quot;36&quot;,&quot;'$'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002850" startTime="2024-04-03T16:58:35.3367779+02:00" endTime="2024-04-03T16:58:35.3370629+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4d46d87-d51a-4686-8ebb-d00ec9422f8b">
      <Output>
        <StdOut>When I convert the AIS character value 36 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(36) (0,0s)&#xD;
Then the converted ASCII value should be '$'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe($) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ed0707f9-c5c1-4351-84e6-0c5c2190f424" testId="780df155-9b20-b2b2-d16a-95572a1ee51d" testName="MessagePart(&quot;H00000&lt;000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004170" startTime="2024-04-03T16:58:35.2503533+02:00" endTime="2024-04-03T16:58:35.2507705+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ed0707f9-c5c1-4351-84e6-0c5c2190f424">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H00000&lt;000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H00000&lt;0000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1d022c6d-2b08-4990-9952-a0cfd23d98c6" testId="142db06b-dad5-da50-ef51-8aa9a3cdcd86" testName="TrueHeading(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0768689+02:00" endTime="2024-04-03T16:58:35.0772122+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1d022c6d-2b08-4990-9952-a0cfd23d98c6">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f63541d7-7219-4a2c-acd5-eb82a0beb6d8" testId="1a3848da-39df-c0ac-228d-97af0597fa4d" testName="RegionalReservedBits139_142(&quot;C000000000000000000000040000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003990" startTime="2024-04-03T16:58:35.1128059+02:00" endTime="2024-04-03T16:58:35.1132051+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f63541d7-7219-4a2c-acd5-eb82a0beb6d8">
      <Output>
        <StdOut>When I parse 'C000000000000000000000040000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="57282b69-21a0-4cbc-864f-7210938b841f" testId="7c4177d3-5fa0-aa1b-f899-b29b3d9e1993" testName="UnsignedAligned6_BitInteger(&quot;400000000000T000000000000000&quot;,&quot;0&quot;,&quot;72&quot;,&quot;36&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003040" startTime="2024-04-03T16:58:35.3667061+02:00" endTime="2024-04-03T16:58:35.3670098+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="57282b69-21a0-4cbc-864f-7210938b841f">
      <Output>
        <StdOut>Given an NMEA AIS payload of '400000000000T000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("400000000000T0000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 72&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 72) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 36&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(36) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf93fdb2-6a3f-4067-980b-8b873695889e" testId="03d11e6a-d2eb-0a2e-a132-53405e1f1ab0" testName="UnsignedAligned6_BitInteger(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004900" startTime="2024-04-03T16:58:35.3616837+02:00" endTime="2024-04-03T16:58:35.3621733+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf93fdb2-6a3f-4067-980b-8b873695889e">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2b08545a-8efa-4746-8ea8-6fe1dc728f8e" testId="a26812aa-f7bc-c269-2128-a21cd8ec88d0" testName="PartAMessageType(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0019949" startTime="2024-04-03T16:58:35.2513554+02:00" endTime="2024-04-03T16:58:35.2533503+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2b08545a-8efa-4746-8ea8-6fe1dc728f8e">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartA.PartNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_PartNumberIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9afda57f-d0b3-477b-98ee-ecba960413d4" testId="88518fd5-1a17-99e7-a229-e332018d42a7" testName="PartBSerialNumber(&quot;H00000400003www0000000000000&quot;,&quot;0&quot;,&quot;1048575&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004230" startTime="2024-04-03T16:58:35.3009783+02:00" endTime="2024-04-03T16:58:35.3014010+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9afda57f-d0b3-477b-98ee-ecba960413d4">
      <Output>
        <StdOut>When I parse 'H00000400003www0000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000400003www00...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 1048575&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(1048575) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="884c682d-735a-4b44-8f3f-5122297f4713" testId="8cc26fd9-a9f2-fa62-ab97-6b1e58f2dfbf" testName="PartBDimensionToStern(&quot;H000004000000000000000001000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004690" startTime="2024-04-03T16:58:35.2863774+02:00" endTime="2024-04-03T16:58:35.2868460+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="884c682d-735a-4b44-8f3f-5122297f4713">
      <Output>
        <StdOut>When I parse 'H000004000000000000000001000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a374eacf-e40c-4bb3-a235-7f4b7bc72e9a" testId="7888396e-14d6-a05b-438f-fe45c5b15895" testName="ETAHour(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;2&quot;,&quot;23&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003940" startTime="2024-04-03T16:58:35.2071595+02:00" endTime="2024-04-03T16:58:35.2075539+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a374eacf-e40c-4bb3-a235-7f4b7bc72e9a">
      <Output>
        <StdOut>When I parse '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("544MR0827oeaD&lt;u00...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 23&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(23) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ff60cfaf-faef-43f5-b085-e1ebca444a4b" testId="7f2763da-ce2a-e81c-bd41-13ca9b126952" testName="RepeatIndicator(&quot;Bh00000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.0672407+02:00" endTime="2024-04-03T16:58:35.0675826+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ff60cfaf-faef-43f5-b085-e1ebca444a4b">
      <Output>
        <StdOut>When I parse 'Bh00000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("Bh000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4cd08231-bb92-4969-bf39-6583fb64a309" testId="fc300ffa-3526-6696-fa1e-a4519a0553f0" testName="Message22Flag(&quot;B3m&gt;so00088pPR91r=JfOwV5WP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003579" startTime="2024-04-03T16:58:35.0479576+02:00" endTime="2024-04-03T16:58:35.0483159+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4cd08231-bb92-4969-bf39-6583fb64a309">
      <Output>
        <StdOut>When I parse 'B3m&gt;so00088pPR91r=JfOwV5WP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m&gt;so00088pPR91r...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dabfeb3c-3a59-43df-af1c-ebebe0bd48bb" testId="314e990f-64f0-4941-31b5-dbac9635f680" testName="RegionalReservedBits139_142(&quot;C000000000000000000000020000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005230" startTime="2024-04-03T16:58:35.1122676+02:00" endTime="2024-04-03T16:58:35.1127907+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dabfeb3c-3a59-43df-af1c-ebebe0bd48bb">
      <Output>
        <StdOut>When I parse 'C000000000000000000000020000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d2ce684c-c35a-4e41-b2cb-d5f57c9d59ee" testId="11f58379-48af-3869-1f0c-25f45522dad8" testName="RadioStatusType(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;Itdma&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003560" startTime="2024-04-03T16:58:35.0574639+02:00" endTime="2024-04-03T16:58:35.0578198+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d2ce684c-c35a-4e41-b2cb-d5f57c9d59ee">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RadioStatusType is Itdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RadioStatusTypeIsSOTDMA(Itdma) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8328d558-d927-42fc-bd9d-036b0178882f" testId="f0f053a5-9341-bcaf-3b14-af62c0ced1d5" testName="IECTagBlockSingleLine(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0031970" startTime="2024-04-03T16:58:35.5454036+02:00" endTime="2024-04-03T16:58:35.5486006+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8328d558-d927-42fc-bd9d-036b0178882f">
      <Output>
        <StdOut>When I parse 's:ASS,c:1706745485*72' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:ASS,c:170674548...", False, IEC) (0,0s)&#xD;
Then the Source is ASS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("ASS") (0,0s)&#xD;
And the Timestamp is 1706745485&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706745485) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8facf74c-4782-47c7-9acd-58092627b1f5" testId="3004acb1-93e4-0690-7cdb-481cc3232888" testName="SpareBitsAt145(&quot;1000000000000000000000004000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004650" startTime="2024-04-03T16:58:35.0110563+02:00" endTime="2024-04-03T16:58:35.0115212+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8facf74c-4782-47c7-9acd-58092627b1f5">
      <Output>
        <StdOut>When I parse '1000000000000000000000004000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="80eec411-7a7e-4397-9bb0-37048fc8dce2" testId="aa533b89-5bef-5471-6f00-da9b74b118d1" testName="AISTalkerId(&quot;ASVDM&quot;,&quot;LimitedBaseStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002270" startTime="2024-04-03T16:58:35.5701040+02:00" endTime="2024-04-03T16:58:35.5703313+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="80eec411-7a7e-4397-9bb0-37048fc8dce2">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'ASVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ASVDM") (0,0s)&#xD;
Then the AisTalker is 'LimitedBaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(LimitedBaseStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="caf6c81e-035b-4cc6-8caa-6e4bef5359cc" testId="7da6bd95-0b57-6c67-9a9b-9040d6929f5f" testName="PartBShipType(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;CargoAll&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:35.3065128+02:00" endTime="2024-04-03T16:58:35.3068631+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="caf6c81e-035b-4cc6-8caa-6e4bef5359cc">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is CargoAll&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(CargoAll) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="774bc92b-64c8-414e-84c7-13b8a375d522" testId="517ac1a3-f405-5ba4-0de9-2fdcdfdb9717" testName="MultipleLinesWhereFinalLineHasNoNewline" computerName="SCODE-HF8MJR2" duration="00:00:00.0015659" startTime="2024-04-03T16:58:35.4997236+02:00" endTime="2024-04-03T16:58:35.5012897+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="774bc92b-64c8-414e-84c7-13b8a375d522">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And an unterminated line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="72818764-2917-4092-b80d-7d69816ebc4c" testId="704a5629-4cd6-a984-892b-27444d492197" testName="TimeStamp(&quot;10000000000000000000001p0000&quot;,&quot;0&quot;,&quot;60&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0198090+02:00" endTime="2024-04-03T16:58:35.0201521+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72818764-2917-4092-b80d-7d69816ebc4c">
      <Output>
        <StdOut>When I parse '10000000000000000000001p0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 60&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(60) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4a7cdbf9-ed80-49ef-a837-fb7a345b29de" testId="2d805c2c-8c47-bb84-b2b0-19df4dcb8c16" testName="LineStreamParserPassesAMessageWithPaddingThatIsTheFirstOfATwo_PartMessage" computerName="SCODE-HF8MJR2" duration="00:00:00.0025810" startTime="2024-04-03T16:58:35.4025815+02:00" endTime="2024-04-03T16:58:35.4051626+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a7cdbf9-ed80-49ef-a837-fb7a345b29de">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,1*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,1*72'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting unexpected padding on a non-terminal message fragment&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingUnexpectedPaddingOnANon_TerminalMessageFragment(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3dace802-1823-40b7-84bb-3d72295a4e26" testId="aa841ef9-db63-c75c-6729-8f9ac725ae56" testName="PartBMothershipMMSI(&quot;H000004000000000000000roVRi0&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:35.2938033+02:00" endTime="2024-04-03T16:58:35.2941513+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3dace802-1823-40b7-84bb-3d72295a4e26">
      <Output>
        <StdOut>When I parse 'H000004000000000000000roVRi0' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.MothershipMmsi is 987654321&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MothershipMmsiIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c2469c3f-e59a-404e-8f6a-bf199ee98f5a" testId="5f809033-a3af-8d92-e106-5608f63bb9a6" testName="MMSI(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009100" startTime="2024-04-03T16:58:34.9681754+02:00" endTime="2024-04-03T16:58:34.9690850+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c2469c3f-e59a-404e-8f6a-bf199ee98f5a">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '0'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2d97658d-86f3-402b-b77c-5f42aade0b11" testId="d289b24c-fe5f-9382-cdac-c29da5cd6d0a" testName="PositionFixType(&quot;500000000000000000000000000000000000000000000L0000000000000000000000000&quot;,&quot;0&quot;,&quot;Surveyed&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2292761+02:00" endTime="2024-04-03T16:58:35.2296713+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d97658d-86f3-402b-b77c-5f42aade0b11">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000L0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Surveyed&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Surveyed) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8b7950ae-2d90-4e46-aca8-d5f39be42961" testId="b611c92a-8f28-e893-6032-4ca28e2e82c1" testName="ConvertAIS6_BitCharacterToASCII(&quot;40&quot;,&quot;'('&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004910" startTime="2024-04-03T16:58:35.3381958+02:00" endTime="2024-04-03T16:58:35.3386866+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8b7950ae-2d90-4e46-aca8-d5f39be42961">
      <Output>
        <StdOut>When I convert the AIS character value 40 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(40) (0,0s)&#xD;
Then the converted ASCII value should be '('&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2d24e8d9-d5ff-429d-9093-000fd03d80eb" testId="9374b079-aa6d-1c74-c345-7cc1d2bc42db" testName="FragmentedMessages(&quot;3&quot;,&quot;3&quot;,&quot;0&quot;,&quot;3451&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005540" startTime="2024-04-03T16:58:35.5761904+02:00" endTime="2024-04-03T16:58:35.5767440+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d24e8d9-d5ff-429d-9093-000fd03d80eb">
      <Output>
        <StdOut>When I parse a message fragment part 3 of 3 with message id 0 and sentence group id 3451&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(3, 3, "0", "3451") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(3) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
And the SentenceGroupId is '3451'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(3451) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="344f72b3-64d3-4633-9654-e5f470dc1750" testId="552c4bb6-d2ca-e681-2192-ef38be6f1389" testName="NavigationStatus(&quot;13m9`rdw01QAv`&lt;WiMAbF3ap2H1a&quot;,&quot;0&quot;,&quot;ReservedForFutureUse12&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:34.9835677+02:00" endTime="2024-04-03T16:58:34.9839122+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="344f72b3-64d3-4633-9654-e5f470dc1750">
      <Output>
        <StdOut>When I parse '13m9`rdw01QAv`&lt;WiMAbF3ap2H1a' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m9`rdw01QAv`&lt;Wi...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse12&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e80314c0-38fa-4491-9410-0c07effef1d9" testId="208b18eb-01a2-d978-255f-cf5932305d29" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;5&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3760499+02:00" endTime="2024-04-03T16:58:35.3763487+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e80314c0-38fa-4491-9410-0c07effef1d9">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c30a5a35-8624-4b4c-bdd1-a055af5cc30d" testId="16d5f37f-7cee-b9f0-33b2-400b1fec0376" testName="PositionFixType(&quot;500000000000000000000000000000000000000000000&lt;0000000000000000000000000&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004030" startTime="2024-04-03T16:58:35.2276366+02:00" endTime="2024-04-03T16:58:35.2280397+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c30a5a35-8624-4b4c-bdd1-a055af5cc30d">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000&lt;0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is CombinedGpsGlonass&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(CombinedGpsGlonass) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5b216011-83f4-4f88-a2be-c4e2083a3629" testId="22e69c94-7909-6b47-bca6-11f676145e1a" testName="SpeedOverGround(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;75&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0168141+02:00" endTime="2024-04-03T16:58:35.0171566+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5b216011-83f4-4f88-a2be-c4e2083a3629">
      <Output>
        <StdOut>When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 75&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(75) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66e962df-bb6d-487d-9c79-15e02a8a299b" testId="e3bdeef6-4676-079a-a19e-fe0427f5a315" testName="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3573443+02:00" endTime="2024-04-03T16:58:35.3576451+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66e962df-bb6d-487d-9c79-15e02a8a299b">
      <Output>
        <StdOut>Given an NMEA AIS payload of '2000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("2000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="67e03309-6799-4491-84b2-8456d854db12" testId="08ef5787-6f75-d434-e26a-949294aa0411" testName="PartBCallSign(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0015320" startTime="2024-04-03T16:58:35.2671057+02:00" endTime="2024-04-03T16:58:35.2686380+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="67e03309-6799-4491-84b2-8456d854db12">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is @@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ec5006b7-01f5-4826-97a8-2d7e84e51c96" testId="059d0acf-bb46-9682-7e97-02cadc6696b9" testName="UnsignedAligned6_BitInteger(&quot;2000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003050" startTime="2024-04-03T16:58:35.3626354+02:00" endTime="2024-04-03T16:58:35.3629400+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec5006b7-01f5-4826-97a8-2d7e84e51c96">
      <Output>
        <StdOut>Given an NMEA AIS payload of '2000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("20000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4fac8b9f-2634-43f4-98c9-bba98014ea12" testId="7744ff3f-d7ac-7aa2-4bab-0d3c6ea395c4" testName="PartBUnitModelCode(&quot;H0000040000P0000000000000000&quot;,&quot;0&quot;,&quot;8&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:35.3107865+02:00" endTime="2024-04-03T16:58:35.3111239+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4fac8b9f-2634-43f4-98c9-bba98014ea12">
      <Output>
        <StdOut>When I parse 'H0000040000P0000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000P00000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 8&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a54ca28f-856a-45dd-9407-0886a97fa3c2" testId="deccf647-0fab-b1b9-e228-e802eb3dde39" testName="ETADay(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003900" startTime="2024-04-03T16:58:35.2013990+02:00" endTime="2024-04-03T16:58:35.2017890+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a54ca28f-856a-45dd-9407-0886a97fa3c2">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9f8712f2-2a12-46e7-8491-7397d5cd7ff8" testId="d70a07d5-8a46-21fb-ca1a-d033e0fbb3e0" testName="DimensionToStern(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009360" startTime="2024-04-03T16:58:35.0899188+02:00" endTime="2024-04-03T16:58:35.0908551+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f8712f2-2a12-46e7-8491-7397d5cd7ff8">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStern is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToSternIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0c19efd6-c44d-4eb0-aace-3790922421e5" testId="f7e4b275-b6c9-06a9-5a5e-6701b060c6c6" testName="ConvertAIS6_BitCharacterToASCII(&quot;47&quot;,&quot;'/'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002220" startTime="2024-04-03T16:58:35.3415998+02:00" endTime="2024-04-03T16:58:35.3418213+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c19efd6-c44d-4eb0-aace-3790922421e5">
      <Output>
        <StdOut>When I convert the AIS character value 47 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(47) (0,0s)&#xD;
Then the converted ASCII value should be '/'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(/) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b5d1f336-b001-4914-937e-32dcba0f41da" testId="381e1d24-0a3b-7d94-0e6e-a09dc8472d09" testName="ConvertAIS6_BitCharacterToASCII(&quot;8&quot;,&quot;'H'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3299219+02:00" endTime="2024-04-03T16:58:35.3301426+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5d1f336-b001-4914-937e-32dcba0f41da">
      <Output>
        <StdOut>When I convert the AIS character value 8 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(8) (0,0s)&#xD;
Then the converted ASCII value should be 'H'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(H) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d5162776-bd97-4a96-a849-976bcf388f1c" testId="c2199f2f-dde9-cd9a-7004-15fca31301e7" testName="AISVersion(&quot;500000&lt;0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.1672614+02:00" endTime="2024-04-03T16:58:35.1676583+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d5162776-bd97-4a96-a849-976bcf388f1c">
      <Output>
        <StdOut>When I parse '500000&lt;0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("500000&lt;0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="00490648-d17f-4c05-86b0-06478f9ee8d4" testId="99ddd5a7-673e-d064-c1ff-d3812be81fd4" testName="ConvertAIS6_BitCharacterToASCII(&quot;38&quot;,&quot;'&amp;'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:35.3373315+02:00" endTime="2024-04-03T16:58:35.3378049+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="00490648-d17f-4c05-86b0-06478f9ee8d4">
      <Output>
        <StdOut>When I convert the AIS character value 38 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(38) (0,0s)&#xD;
Then the converted ASCII value should be '&amp;'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(&amp;) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b6b0d79e-5882-421e-9334-3930cd6919e4" testId="7ca898e7-39f5-3cfc-f60f-bc82cf3cdca0" testName="InterleavedMulti_FragmentMessagesWithoutGroupingInHeader" computerName="SCODE-HF8MJR2" duration="00:00:00.0014540" startTime="2024-04-03T16:58:35.3954617+02:00" endTime="2024-04-03T16:58:35.3969159+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b6b0d79e-5882-421e-9334-3930cd6919e4">
      <Output>
        <StdOut>When the line to message adapter receives '\s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27,c:156768615...") (0,0s)&#xD;
And the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
And the line to message adapter receives '\s:27,*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27,*5F\!AIVDM,...") (0,0s)&#xD;
And the line to message adapter receives '\s:99,*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,*55\!AIVDM,...") (0,0s)&#xD;
And the line to message adapter receives '\s:27*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27*5E\!AIVDM,3...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
And in ais message 1 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 27) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567686150) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="457561c7-e6b0-4035-a4e1-be7aed8f8b5b" testId="2e969c0b-06f1-02a6-66cc-46997c1d2236" testName="ETADay(&quot;50000000000000000000000000000000000000000000001P00000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.1989705+02:00" endTime="2024-04-03T16:58:35.1993665+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="457561c7-e6b0-4035-a4e1-be7aed8f8b5b">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000001P00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f0ec425d-28be-418a-8188-2c9533dc05ae" testId="a9fa4ae2-aaaa-b21c-9df7-c9b74e388bb0" testName="FullMessage(&quot;84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;316052108&quot;,&quot;0&quot;,&quot;200&quot;,&quot;10&quot;,&quot;2&quot;,&quot;d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011580" startTime="2024-04-03T16:58:34.8404066+02:00" endTime="2024-04-03T16:58:34.8415647+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f0ec425d-28be-418a-8188-2c9533dc05ae">
      <Output>
        <StdOut>When I parse '84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;...", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.Mmsi is 316052108&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_MmsiIs(316052108) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.SpareBits38 is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.DAC is 200&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_DACIs(200) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.FI is 10&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_FIIs(10) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationDataPadding is 2&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationData is d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataIs("d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9763aa9e-bf56-43b6-9416-44040a0c7c6f" testId="ab6c7f41-0b74-7b91-a0c3-4638afd83fdd" testName="RaimFlag(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.0024157+02:00" endTime="2024-04-03T16:58:35.0027577+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9763aa9e-bf56-43b6-9416-44040a0c7c6f">
      <Output>
        <StdOut>When I parse '13oHtV7OhN0=B9bQch;WqnCp0W3h' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0c31c8cd-9525-41db-aed7-d5da3396018c" testId="05b89b74-21c4-85ae-ec3a-0233f715e860" testName="SpeedOverGround(&quot;1kmbi20P@10cNiLTKgi6Wld&gt;0000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:35.0164561+02:00" endTime="2024-04-03T16:58:35.0168054+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c31c8cd-9525-41db-aed7-d5da3396018c">
      <Output>
        <StdOut>When I parse '1kmbi20P@10cNiLTKgi6Wld&gt;0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1kmbi20P@10cNiLTK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1886572c-0f6d-4f50-b11a-60fda4f4a9de" testId="bd128498-dc85-7445-7977-58be309f9092" testName="SingleLineWithoutNewlineOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0007230" startTime="2024-04-03T16:58:35.5180771+02:00" endTime="2024-04-03T16:58:35.5188003+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1886572c-0f6d-4f50-b11a-60fda4f4a9de">
      <Output>
        <StdOut>Given an unterminated line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a6f866f-2bb2-4da7-874d-1e849bbd4e29" testId="92e2f593-1c16-e911-13b1-2097223330be" testName="VesselName(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;AKVATRANS@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0014720" startTime="2024-04-03T16:58:35.2451223+02:00" endTime="2024-04-03T16:58:35.2465943+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a6f866f-2bb2-4da7-874d-1e849bbd4e29">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is AKVATRANS@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("AKVATRANS@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f245859a-af38-4e4e-86f2-8217ee4f0630" testId="d82d115a-487c-cdd2-35d3-b89042c5d6b8" testName="MultipleCRLFBlankLinesOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0008050" startTime="2024-04-03T16:58:35.5265853+02:00" endTime="2024-04-03T16:58:35.5273898+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f245859a-af38-4e4e-86f2-8217ee4f0630">
      <Output>
        <StdOut>Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d08b756c-403c-4c88-8925-fe56b2e9944b" testId="8cd2421b-49d9-4c32-e188-ac30042b98a1" testName="SingleUnparseableLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0010860" startTime="2024-04-03T16:58:35.5439630+02:00" endTime="2024-04-03T16:58:35.5450484+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d08b756c-403c-4c88-8925-fe56b2e9944b">
      <Output>
        <StdOut>Given a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
Then OnError should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnErrorShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And the line error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the line error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the line error report 0 should include the line number 1&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f4e71582-4dab-4705-bd7f-c7c60d538a2a" testId="97340da8-6228-03ba-0549-5bb32bcdad64" testName="OneUnparseableLineAndOneGoodLine" computerName="SCODE-HF8MJR2" duration="00:00:00.0029489" startTime="2024-04-03T16:58:35.5384183+02:00" endTime="2024-04-03T16:58:35.5413668+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f4e71582-4dab-4705-bd7f-c7c60d538a2a">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
Then OnError should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnErrorShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And the line error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the line error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the line error report 0 should include the line number 2&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheLineNumber(0, 2) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="13c4bb7e-4784-42fc-9051-38d5d675b467" testId="7855ae7e-4b65-5404-75ba-baa82a75afe4" testName="RegionalReservedBits139_142(&quot;C000000000000000000000080000000000000000000000000000&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003920" startTime="2024-04-03T16:58:35.1132144+02:00" endTime="2024-04-03T16:58:35.1136067+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="13c4bb7e-4784-42fc-9051-38d5d675b467">
      <Output>
        <StdOut>When I parse 'C000000000000000000000080000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 4&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="414085db-c6d7-4924-a0f8-7bfb175c5a23" testId="097111ac-2fbd-cee5-d04b-c1558d7086c5" testName="ShipType(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;NotAvailable&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010160" startTime="2024-04-03T16:58:35.2354115+02:00" endTime="2024-04-03T16:58:35.2364275+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="414085db-c6d7-4924-a0f8-7bfb175c5a23">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is NotAvailable&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(NotAvailable) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4efc3a4e-826a-44e7-bece-1773f152717d" testId="2b3b1975-ae71-413d-410f-f1be3f6855ae" testName="ETADay(&quot;5000000000000000000000000000000000000000000000?000000000000000000000000&quot;,&quot;2&quot;,&quot;30&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003910" startTime="2024-04-03T16:58:35.2005919+02:00" endTime="2024-04-03T16:58:35.2009831+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4efc3a4e-826a-44e7-bece-1773f152717d">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000?000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 30&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(30) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b33b8d6b-2e37-46da-a07b-db3cb027995d" testId="291b49c5-a11b-06c6-8921-59e3c8cc6041" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0005470" startTime="2024-04-03T16:58:34.9514351+02:00" endTime="2024-04-03T16:58:34.9519816+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b33b8d6b-2e37-46da-a07b-db3cb027995d">
      <Output>
        <StdOut>When I parse 'KC5E2b@U19PFdLbMuc5=ROv62&lt;7m' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("KC5E2b@U19PFdLbMu...", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4058704b-5d56-4856-83f1-3db81cbaf6b3" testId="f52ff216-48b9-236f-d1ec-ac2720df6689" testName="AssignedFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003570" startTime="2024-04-03T16:58:35.0298225+02:00" endTime="2024-04-03T16:58:35.0301797+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4058704b-5d56-4856-83f1-3db81cbaf6b3">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsAssigned is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsAssigned(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="928626a5-7c0b-4c3c-b024-db9237b838e9" testId="78984977-a8b2-d459-e574-4d0225d18d94" testName="NavigationStatus(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;ReservedForFutureUse13&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:34.9839211+02:00" endTime="2024-04-03T16:58:34.9842631+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="928626a5-7c0b-4c3c-b024-db9237b838e9">
      <Output>
        <StdOut>When I parse '13P=N7M1@10Ph14SqI7pAW@j0L0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13P=N7M1@10Ph14Sq...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse13&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cb479415-d8da-49df-bbd3-7e0d8cb9ff33" testId="af91c3c8-dea7-5346-2219-20fd8f8bbabf" testName="ConvertAIS6_BitCharacterToASCII(&quot;58&quot;,&quot;':'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002200" startTime="2024-04-03T16:58:35.3441176+02:00" endTime="2024-04-03T16:58:35.3443376+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb479415-d8da-49df-bbd3-7e0d8cb9ff33">
      <Output>
        <StdOut>When I convert the AIS character value 58 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(58) (0,0s)&#xD;
Then the converted ASCII value should be ':'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(:) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8e79384f-37d4-4bbd-87ad-7b03b0648f94" testId="678a9af5-35f2-f97c-2cfd-2c9e04eda840" testName="ETAHour(&quot;50000000000000000000000000000000000000000000000100000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005800" startTime="2024-04-03T16:58:35.2036423+02:00" endTime="2024-04-03T16:58:35.2042225+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8e79384f-37d4-4bbd-87ad-7b03b0648f94">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000100000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4dd6158e-c04e-4fb9-84e2-c23e335ee894" testId="e5fe0420-47bd-0c88-9e28-06727e84fa24" testName="Signed8_BitInteger(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;42&quot;,&quot;-128&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3513432+02:00" endTime="2024-04-03T16:58:35.3516430+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4dd6158e-c04e-4fb9-84e2-c23e335ee894">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -128&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-128) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="03173822-40b8-48a9-8ecd-4600627ed53c" testId="0ca6919c-60eb-ad15-776a-060f72bf457b" testName="RegionalReservedBits139_142(&quot;C0000000000000000000000N0000000000000000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.1159938+02:00" endTime="2024-04-03T16:58:35.1163938+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="03173822-40b8-48a9-8ecd-4600627ed53c">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000N0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 15&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(15) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4cf49e1-fddd-4ef1-a382-5b47db3ca956" testId="ba3ba26d-aa49-ab9a-a23c-c44fc8f5e966" testName="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000060000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3701556+02:00" endTime="2024-04-03T16:58:35.3704577+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4cf49e1-fddd-4ef1-a382-5b47db3ca956">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000000000000000000000060000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6d7d7857-77bf-45f2-9b24-f6f28e37f7eb" testId="56d67bc1-e43f-8c0f-1ea1-007e833b9438" testName="PartBUnitModelCode(&quot;H0000040000t0000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003620" startTime="2024-04-03T16:58:35.3111360+02:00" endTime="2024-04-03T16:58:35.3114975+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d7d7857-77bf-45f2-9b24-f6f28e37f7eb">
      <Output>
        <StdOut>When I parse 'H0000040000t0000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000t00000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 15&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(15) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fdb3dbad-f23d-4d22-8f96-8149ac985c59" testId="3e15c8fc-9697-68ef-6fbb-4ece87e90dbf" testName="PartBVendorIDITU_R1371_4(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;AMC&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003190" startTime="2024-04-03T16:58:35.3177356+02:00" endTime="2024-04-03T16:58:35.3180541+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fdb3dbad-f23d-4d22-8f96-8149ac985c59">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is AMC&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("AMC") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e1b2a0e2-63f5-49ae-9417-a3d343473a9a" testId="ab292012-e9ce-2c1c-9d0c-73ab9d04ddff" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000003t00000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3745062+02:00" endTime="2024-04-03T16:58:35.3748047+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e1b2a0e2-63f5-49ae-9417-a3d343473a9a">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000003t00000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000003t00...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 63&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="749881ae-19e0-4bfb-bd17-c61b5d8f72a7" testId="b460af32-d409-df7b-ac67-e1995d9bb65a" testName="DTEReady(&quot;53m:&lt;F82FRLThI1:220puH60l5=@E:222222221J0`D460rdR8p88888888888888888888&quot;,&quot;2&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004030" startTime="2024-04-03T16:58:35.1964704+02:00" endTime="2024-04-03T16:58:35.1968735+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="749881ae-19e0-4bfb-bd17-c61b5d8f72a7">
      <Output>
        <StdOut>When I parse '53m:&lt;F82FRLThI1:220puH60l5=@E:222222221J0`D460rdR8p88888888888888888888' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m:&lt;F82FRLThI1:2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is true&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="090793d9-6df1-4cc5-b645-435b72b4be54" testId="cfaa4022-b1ab-f1f7-b91e-af54c2ed3329" testName="Signed8_BitInteger(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;42&quot;,&quot;127&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003190" startTime="2024-04-03T16:58:35.3510162+02:00" endTime="2024-04-03T16:58:35.3513348+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="090793d9-6df1-4cc5-b645-435b72b4be54">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13oHtV7OhN0=B9bQch;WqnCp0W3h' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 127&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(127) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a1424dd1-37be-4f32-a166-d31678b41e18" testId="5c5090f8-d0b5-cce1-cb2e-686e52fa7345" testName="CallSign(&quot;50000000000000000040000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@A&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004080" startTime="2024-04-03T16:58:35.1708550+02:00" endTime="2024-04-03T16:58:35.1712624+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a1424dd1-37be-4f32-a166-d31678b41e18">
      <Output>
        <StdOut>When I parse '50000000000000000040000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is @@@@@@A&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("@@@@@@A") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0b85029-0a23-4289-b0a7-70f8b63f4677" testId="31e1a5a9-16c9-7f73-1aeb-79b52988c74e" testName="SingleLFBlankLineOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0005710" startTime="2024-04-03T16:58:35.5086288+02:00" endTime="2024-04-03T16:58:35.5091995+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0b85029-0a23-4289-b0a7-70f8b63f4677">
      <Output>
        <StdOut>Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="348cdecd-a4f9-461c-bda5-c6c677c65879" testId="fd63c204-e89d-2f23-fa32-c61bd07ead76" testName="PartBUnitModelCode(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008930" startTime="2024-04-03T16:58:35.3086734+02:00" endTime="2024-04-03T16:58:35.3095665+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="348cdecd-a4f9-461c-bda5-c6c677c65879">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1fd3ddd9-544a-4412-b0dc-6fcb2e3401a1" testId="4a411074-f5cf-cd96-13a0-a22dbb268663" testName="Two_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedWithSingle_FragmentMessageInTheMiddle" computerName="SCODE-HF8MJR2" duration="00:00:00.0013410" startTime="2024-04-03T16:58:35.4246908+02:00" endTime="2024-04-03T16:58:35.4260318+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1fd3ddd9-544a-4412-b0dc-6fcb2e3401a1">
      <Output>
        <StdOut>When the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:99*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99*55\!AIVDM,2...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 99) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567685556) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c7cfb523-ba36-4311-ad2a-d7efaad137da" testId="d8cfe6df-e428-afca-9ab7-529f9c70a7d7" testName="Draught(&quot;5000000000000000000000000000000000000000000000000wh00000000000000000000&quot;,&quot;2&quot;,&quot;255&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004060" startTime="2024-04-03T16:58:35.1928491+02:00" endTime="2024-04-03T16:58:35.1932549+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c7cfb523-ba36-4311-ad2a-d7efaad137da">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000000wh00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 255&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(255) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66918264-a21a-4c80-8cc5-8f9f3b7192e3" testId="e599713f-6235-6af3-800d-a3c888f8e708" testName="PartAMMSI(&quot;H&gt;eq`d@00000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.2561812+02:00" endTime="2024-04-03T16:58:35.2565241+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66918264-a21a-4c80-8cc5-8f9f3b7192e3">
      <Output>
        <StdOut>When I parse 'H&gt;eq`d@00000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H&gt;eq`d@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 987654321&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="432deb37-723d-4337-a518-419a8194d430" testId="08aea83b-9c36-de19-b36d-9102753e46f0" testName="FullMessage(&quot;&gt;3@pJu04U&gt;10ib04&lt;f1@qR1&lt;4HF1HuT4LF0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;219028212&quot;,&quot;0&quot;,&quot;\&quot;AIS PLZ ACK TNX SAFE VOYAGE \&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0045510" startTime="2024-04-03T16:58:35.1327774+02:00" endTime="2024-04-03T16:58:35.1373285+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="432deb37-723d-4337-a518-419a8194d430">
      <Output>
        <StdOut>When I parse '&gt;3@pJu04U&gt;10ib04&lt;f1@qR1&lt;4HF1HuT4LF0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;3@pJu04U&gt;10ib04&lt;...", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.RepeatIndicator is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.Mmsi is 219028212&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_MmsiIs(219028212) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SpareBit38 is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SpareBit38Is(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SafetyRelatedText is "AIS PLZ ACK TNX SAFE VOYAGE "&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SafetyRelatedTextIs(""AIS PLZ ACK TNX ...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7af4328a-583f-4336-9a99-27f8c8e38b03" testId="b6764b4f-bb6d-c8f9-f1eb-4a4ef88f7d7e" testName="VesselName(&quot;50000000000000000010000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005480" startTime="2024-04-03T16:58:35.2428184+02:00" endTime="2024-04-03T16:58:35.2433663+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7af4328a-583f-4336-9a99-27f8c8e38b03">
      <Output>
        <StdOut>When I parse '50000000000000000010000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is P@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("P@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="efa890f2-5571-4276-9fe8-2072be18e5a3" testId="ca9c210d-4c66-2c5b-5cfb-a3e364d4e133" testName="MMSI(&quot;K00000@00000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005000" startTime="2024-04-03T16:58:34.8646570+02:00" endTime="2024-04-03T16:58:34.8651566+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="efa890f2-5571-4276-9fe8-2072be18e5a3">
      <Output>
        <StdOut>When I parse 'K00000@00000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("K00000@00000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6a5b0d8c-2f0e-4bd9-a94c-631c0d8e2972" testId="58299824-e1ca-02a8-3545-4af1f994886c" testName="AISTalkerId(&quot;BSVDM&quot;,&quot;DeprecatedBaseStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002300" startTime="2024-04-03T16:58:35.5708131+02:00" endTime="2024-04-03T16:58:35.5710432+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6a5b0d8c-2f0e-4bd9-a94c-631c0d8e2972">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'BSVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("BSVDM") (0,0s)&#xD;
Then the AisTalker is 'DeprecatedBaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(DeprecatedBaseSta...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49b714e0-10a1-46dd-928e-ec942d788994" testId="f8e735d7-3425-7e20-d14b-ae5b8dee262f" testName="MMSI(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009400" startTime="2024-04-03T16:58:35.0982048+02:00" endTime="2024-04-03T16:58:35.0991445+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49b714e0-10a1-46dd-928e-ec942d788994">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7d3e2ac3-3108-412c-9c18-5bda54ab9229" testId="91c35acb-7e8a-3fcd-1d0a-700aa28b7566" testName="Signed8_BitInteger(&quot;00000000@0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008200" startTime="2024-04-03T16:58:35.3482292+02:00" endTime="2024-04-03T16:58:35.3490491+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7d3e2ac3-3108-412c-9c18-5bda54ab9229">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000@0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000@00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="87203082-9772-435d-b523-685ddfeae23a" testId="6b6eb170-79f4-8d79-56f6-fed63612da74" testName="ConvertAIS6_BitCharacterToASCII(&quot;5&quot;,&quot;'E'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002260" startTime="2024-04-03T16:58:35.3292265+02:00" endTime="2024-04-03T16:58:35.3294519+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="87203082-9772-435d-b523-685ddfeae23a">
      <Output>
        <StdOut>When I convert the AIS character value 5 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(5) (0,0s)&#xD;
Then the converted ASCII value should be 'E'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(E) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b9a264f6-86d8-4586-a8a8-8a9219963a83" testId="132b1293-2168-95e5-3a3a-c2f02270ba37" testName="FullMessage(&quot;?77&gt;7w1iprE@D00&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;477333500&quot;,&quot;0&quot;,&quot;477686100&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0020439" startTime="2024-04-03T16:58:34.9344486+02:00" endTime="2024-04-03T16:58:34.9364924+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b9a264f6-86d8-4586-a8a8-8a9219963a83">
      <Output>
        <StdOut>When I parse '?77&gt;7w1iprE@D00' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?77&gt;7w1iprE@D00", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
And NmeaAisInterrogationParser.RepeatIndicator is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.Mmsi is 477333500&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MmsiIs(477333500) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits38 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi1 is 477686100&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi1Is(477686100) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType11 is 5&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType11Is(5) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset11 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset11Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits88 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits88Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits108 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits108Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi2 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi2Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits158 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits158Is(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1dd6a66b-8030-45b4-87dc-8377a4a4e79a" testId="e23181f9-9b96-6d9a-0775-33bf1f31b529" testName="NmeaTagBlockButIECGroup" computerName="SCODE-HF8MJR2" duration="00:00:00.0007450" startTime="2024-04-03T16:58:35.5530201+02:00" endTime="2024-04-03T16:58:35.5537651+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1dd6a66b-8030-45b4-87dc-8377a4a4e79a">
      <Output>
        <StdOut>Given the line '\1G2:9628,s:AIS,c:1701650788*13\!AIVDM,2,1,2,B,55Mv3A`00001L=SKOG9@tlmV0F2222222222220l189446lgN5j3mDm3kc56,0*4E'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.GivenALine("\1G2:9628,s:AIS,c...") (0,0s)&#xD;
When I parse the content by message with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseTheContentByMessageAsync(False, Nmea) (0,0s)&#xD;
Then the message error report 0 should include the error message 'Tag block sentence grouping should be &lt;int&gt;-&lt;int&gt;-&lt;int&gt;, but first part was not a decimal integer'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "Tag block sentenc...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="56897cf2-6d56-473e-b7e6-50499b339443" testId="b40bce5b-06b4-17b0-07dd-736c7215ad04" testName="LongitudeAndLatitute(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;108600000&quot;,&quot;54600000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004970" startTime="2024-04-03T16:58:34.9623538+02:00" endTime="2024-04-03T16:58:34.9628506+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56897cf2-6d56-473e-b7e6-50499b339443">
      <Output>
        <StdOut>When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 108600000&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(108600000) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 54600000&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(54600000) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b91ee9ea-d57d-48cf-b5ee-34410c60e238" testId="72796d72-d947-2a45-ebf8-ced6db4cecb4" testName="CourseOverGround(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;1211&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005300" startTime="2024-04-03T16:58:35.0344930+02:00" endTime="2024-04-03T16:58:35.0350232+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b91ee9ea-d57d-48cf-b5ee-34410c60e238">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 1211&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(1211) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b55e10df-168f-46ef-be8d-cf342b367deb" testId="ac785512-8d50-0847-cea8-e321d4a50ec5" testName="ETAMonth(&quot;50000000000000000000000000000000000000000000030000000000000000000000000&quot;,&quot;2&quot;,&quot;12&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.2151383+02:00" endTime="2024-04-03T16:58:35.2155379+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b55e10df-168f-46ef-be8d-cf342b367deb">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000030000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 12&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(12) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a116216b-973a-4738-a7cf-ec49a2708832" testId="5575e3d6-c86e-0aee-1bc3-8d9a4a92d138" testName="ShipType(&quot;53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880&quot;,&quot;2&quot;,&quot;TankerAll&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003940" startTime="2024-04-03T16:58:35.2390612+02:00" endTime="2024-04-03T16:58:35.2394550+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a116216b-973a-4738-a7cf-ec49a2708832">
      <Output>
        <StdOut>When I parse '53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53QI:t02=oDi`@Q3B...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is TankerAll&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(TankerAll) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a897991f-ce9c-4dc2-aafa-33076ee7ca60" testId="45c49b25-3cb2-3582-614e-1db47dc7fff5" testName="TrueHeading(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;74&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003620" startTime="2024-04-03T16:58:35.0258153+02:00" endTime="2024-04-03T16:58:35.0261771+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a897991f-ce9c-4dc2-aafa-33076ee7ca60">
      <Output>
        <StdOut>When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 74&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(74) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5bfc60aa-533b-42f0-a76e-e599ffef9e1b" testId="1dc99b8c-bd8c-45f1-3917-7acaacea205c" testName="LongitudeAndLatitute(&quot;C0000000000000Owwwt000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005210" startTime="2024-04-03T16:58:35.0965710+02:00" endTime="2024-04-03T16:58:35.0970924+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5bfc60aa-533b-42f0-a76e-e599ffef9e1b">
      <Output>
        <StdOut>When I parse 'C0000000000000Owwwt000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000Oww...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is -1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(-1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4c479cf9-9ee9-47ad-8fe8-cd8e6551731f" testId="2b29dcd7-b4dc-bb3f-18e6-3fdea6b02239" testName="UnsignedAligned6_BitInteger(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;18&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002970" startTime="2024-04-03T16:58:35.3645089+02:00" endTime="2024-04-03T16:58:35.3648061+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4c479cf9-9ee9-47ad-8fe8-cd8e6551731f">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'B000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("B0000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(18) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="117ffe49-52e8-4047-8942-f6846000c508" testId="6a7e4c28-84ca-448a-9dcc-738a2da75705" testName="DTEReady(&quot;C00000000000000000000000000000000000000000000000000P&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005250" startTime="2024-04-03T16:58:35.0928088+02:00" endTime="2024-04-03T16:58:35.0933333+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="117ffe49-52e8-4047-8942-f6846000c508">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000000000P' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DteNotReady is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DteNotReadyIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4de0a22-b57f-4705-8c29-dda45af0643f" testId="822d1b67-f4ea-4bf1-1b8b-06e2c1b35848" testName="ETAMinute(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;60&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.2115656+02:00" endTime="2024-04-03T16:58:35.2119620+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4de0a22-b57f-4705-8c29-dda45af0643f">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 60&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(60) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="018e1bf6-7347-4b7c-80b9-afce02f3910a" testId="1c319b7e-07dd-ad3a-692c-1a1c52fbe121" testName="PositionFixType(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009640" startTime="2024-04-03T16:58:35.2257005+02:00" endTime="2024-04-03T16:58:35.2266640+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="018e1bf6-7347-4b7c-80b9-afce02f3910a">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Undefined&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Undefined) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fc7e3def-c941-411f-844c-72ab1b69ee38" testId="18be096a-ecef-f518-7ce8-8b81048ff452" testName="AISOrigin(&quot;AIVDO&quot;,&quot;Vdo&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006830" startTime="2024-04-03T16:58:35.5672438+02:00" endTime="2024-04-03T16:58:35.5679263+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fc7e3def-c941-411f-844c-72ab1b69ee38">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'AIVDO'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AIVDO") (0,0s)&#xD;
Then the DataOrigin is 'Vdo'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheDataOriginIs(Vdo) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="75514368-5c6e-490f-b24e-c2e41b449d27" testId="ebad54cf-5d79-398d-b8f0-88418703d4d3" testName="PeekMessageTypeWithoutDecodingInFull(&quot;33m9UtPP@50wwE:VJW6LS67H01&lt;@&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002380" startTime="2024-04-03T16:58:35.5624145+02:00" endTime="2024-04-03T16:58:35.5626523+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="75514368-5c6e-490f-b24e-c2e41b449d27">
      <Output>
        <StdOut>When I peek at the payload '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 3&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9cbcd4f6-3483-48ba-8eb8-3bc93dd7960c" testId="2cffeeeb-882b-c499-e64b-3c6ab7d7742d" testName="ConvertAIS6_BitCharacterToASCII(&quot;11&quot;,&quot;'K'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002240" startTime="2024-04-03T16:58:35.3306123+02:00" endTime="2024-04-03T16:58:35.3308357+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9cbcd4f6-3483-48ba-8eb8-3bc93dd7960c">
      <Output>
        <StdOut>When I convert the AIS character value 11 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(11) (0,0s)&#xD;
Then the converted ASCII value should be 'K'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(K) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="768f4f6e-a8fd-44e4-804f-a37fc864deb2" testId="dd4b69a9-9e19-cd79-e706-edabf76e54ee" testName="RateOfTurn(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;127&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:35.0055819+02:00" endTime="2024-04-03T16:58:35.0059182+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="768f4f6e-a8fd-44e4-804f-a37fc864deb2">
      <Output>
        <StdOut>When I parse '13oHtV7OhN0=B9bQch;WqnCp0W3h' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 127&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(127) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="87ce7780-93d6-463a-80d5-746d9c856799" testId="30ab9d03-f43d-9e12-3ec6-849812e563d9" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0005320" startTime="2024-04-03T16:58:34.8844711+02:00" endTime="2024-04-03T16:58:34.8850025+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="87ce7780-93d6-463a-80d5-746d9c856799">
      <Output>
        <StdOut>When I parse ';028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Coordinated Universal Time and Date Response&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(";028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Type is 11&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TypeIs(UTCDateResponse) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eae0d3ac-6a25-4d2f-bd96-3d6d75c9de0e" testId="0a0f0fef-9cab-9e68-1d66-78527db6b4ed" testName="RadioSyncState(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;UtcDirect&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011010" startTime="2024-04-03T16:58:34.9953127+02:00" endTime="2024-04-03T16:58:34.9964138+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eae0d3ac-6a25-4d2f-bd96-3d6d75c9de0e">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcDirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcDirect) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ba54892a-9b52-459c-a8a5-3ecd0e712d2c" testId="aa1341f2-f9dc-17ac-3501-7b476cca44ef" testName="PartBUnitModelCode(&quot;H0000040000&lt;0000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003250" startTime="2024-04-03T16:58:35.3104492+02:00" endTime="2024-04-03T16:58:35.3107737+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ba54892a-9b52-459c-a8a5-3ecd0e712d2c">
      <Output>
        <StdOut>When I parse 'H0000040000&lt;0000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000&lt;00000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f81678c0-1212-4d11-85a6-3d0b25b2a4b4" testId="72e70e69-55c9-381f-219c-1fe3080a24ed" testName="MMSI(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;261146000&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0518358+02:00" endTime="2024-04-03T16:58:35.0521758+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f81678c0-1212-4d11-85a6-3d0b25b2a4b4">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 261146000&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(261146000) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d753a977-39af-4d1f-ba2d-10c5d77da11a" testId="e1f840c3-3bca-0f5e-b99f-99c15c6b0d9e" testName="Destination(&quot;5000000000000000000000000000000000000000000000000000000000000000000000@&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004240" startTime="2024-04-03T16:58:35.1745178+02:00" endTime="2024-04-03T16:58:35.1749417+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d753a977-39af-4d1f-ba2d-10c5d77da11a">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000000000000000000000000000@' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is @@@@@@@@@@@@@@@@@@@A&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("@@@@@@@@@@@@@@@@@@@A") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f11aa8d3-7865-4404-9e99-383346768f63" testId="d936d2ee-b6c4-9d7f-7352-933e65fe2ff3" testName="DSCFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003470" startTime="2024-04-03T16:58:35.0421717+02:00" endTime="2024-04-03T16:58:35.0425190+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f11aa8d3-7865-4404-9e99-383346768f63">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e56bcea7-33b8-42dc-bbac-81a3b853774e" testId="bc32601a-4724-dbc7-6a27-a275859df2f3" testName="ConvertAIS6_BitCharacterToASCII(&quot;41&quot;,&quot;')'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003220" startTime="2024-04-03T16:58:35.3386999+02:00" endTime="2024-04-03T16:58:35.3390220+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e56bcea7-33b8-42dc-bbac-81a3b853774e">
      <Output>
        <StdOut>When I convert the AIS character value 41 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(41) (0,0s)&#xD;
Then the converted ASCII value should be ')'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe()) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cfeb710e-22b8-4f7d-949e-8c2bf21f476b" testId="d572a5f6-650b-0db8-4128-7d1c918c19cd" testName="ETADay(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010880" startTime="2024-04-03T16:58:35.1969104+02:00" endTime="2024-04-03T16:58:35.1979985+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cfeb710e-22b8-4f7d-949e-8c2bf21f476b">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="942573fa-b204-438c-9c35-848a5a162c72" testId="4355136b-fc60-b581-4028-86821b1bc251" testName="Three_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedAdjacently" computerName="SCODE-HF8MJR2" duration="00:00:00.0009380" startTime="2024-04-03T16:58:35.4164633+02:00" endTime="2024-04-03T16:58:35.4174011+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="942573fa-b204-438c-9c35-848a5a162c72">
      <Output>
        <StdOut>When the line to message adapter receives '\s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27,c:156768615...") (0,0s)&#xD;
And the line to message adapter receives '\s:27*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27*5F\!AIVDM,3...") (0,0s)&#xD;
And the line to message adapter receives '\s:27*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27*5E\!AIVDM,3...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 27) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567686150) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8531d479-8947-40b0-92e9-71c4b642edd3" testId="557535c4-0a1e-a22b-6af6-c0d534facfda" testName="PartAMMSI(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008830" startTime="2024-04-03T16:58:35.2544513+02:00" endTime="2024-04-03T16:58:35.2553338+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8531d479-8947-40b0-92e9-71c4b642edd3">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="448a74cd-d1d7-44b7-b805-91039273ae94" testId="81294266-c252-bcab-99f8-9b4fb844e549" testName="MessagePart(&quot;H000008000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002660" startTime="2024-04-03T16:58:35.2500744+02:00" endTime="2024-04-03T16:58:35.2503405+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="448a74cd-d1d7-44b7-b805-91039273ae94">
      <Output>
        <StdOut>When I inspect the Static Data Report part of 'H000008000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000080000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="81a81229-f098-4da7-a108-8169268c8789" testId="f9ea8c10-39f1-6b8c-d242-e390b7c20e00" testName="Two_FragmentMessageFragmentsReceivedWithSingle_FragmentMessageInTheMiddle" computerName="SCODE-HF8MJR2" duration="00:00:00.0029930" startTime="2024-04-03T16:58:35.4207719+02:00" endTime="2024-04-03T16:58:35.4237644+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="81a81229-f098-4da7-a108-8169268c8789">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 99) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567685556) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0985c6cf-f1af-45b1-bd52-a2d91bc3d5af" testId="d7b81827-7844-6e9d-90a5-f680e4cc02a1" testName="ConvertAIS6_BitCharacterToASCII(&quot;48&quot;,&quot;'0'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3418296+02:00" endTime="2024-04-03T16:58:35.3420507+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0985c6cf-f1af-45b1-bd52-a2d91bc3d5af">
      <Output>
        <StdOut>When I convert the AIS character value 48 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(48) (0,0s)&#xD;
Then the converted ASCII value should be '0'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6e14317c-947f-4138-9d16-6a3111482d84" testId="cdf8ea98-3530-0172-41be-d4aab5522b79" testName="DSCFlag(&quot;B000000000000000000000010000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004800" startTime="2024-04-03T16:58:35.0413181+02:00" endTime="2024-04-03T16:58:35.0417980+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6e14317c-947f-4138-9d16-6a3111482d84">
      <Output>
        <StdOut>When I parse 'B000000000000000000000010000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6ad6dab4-221a-46e0-8ba1-aa20449ce2a5" testId="cc63f932-80a9-0da7-11ba-8fe22eab95fe" testName="FullMessage(&quot;:815J6hrsEKP&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;538008091&quot;,&quot;0&quot;,&quot;247158200&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0045330" startTime="2024-04-03T16:58:34.8566931+02:00" endTime="2024-04-03T16:58:34.8612259+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6ad6dab4-221a-46e0-8ba1-aa20449ce2a5">
      <Output>
        <StdOut>When I parse ':815J6hrsEKP' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":815J6hrsEKP", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 538008091&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(538008091) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits38 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.DestinationMmsi is 247158200&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_DestinationMmsiIs(247158200) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits70 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits70Is(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1f1532a2-7456-4f81-b2ad-b08e95f15e9b" testId="fd5ab80b-da07-2bbc-74cd-bad8e2e224e3" testName="PartBDimensionToBow(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008930" startTime="2024-04-03T16:58:35.2706226+02:00" endTime="2024-04-03T16:58:35.2715158+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1f1532a2-7456-4f81-b2ad-b08e95f15e9b">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="21578f51-93bf-433b-a0b1-d668c6848713" testId="f62b3f6f-456c-5196-6346-6beb1fb6f47d" testName="RegionalReservedBits139_142(&quot;C0000000000000000000000H0000000000000000000000000000&quot;,&quot;0&quot;,&quot;12&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003900" startTime="2024-04-03T16:58:35.1155916+02:00" endTime="2024-04-03T16:58:35.1159812+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="21578f51-93bf-433b-a0b1-d668c6848713">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000H0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 12&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(12) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bcee05e8-1542-4a3f-9186-cb278aaaef18" testId="a6c4fe7f-ee91-bbfa-0125-2f055a1a66d2" testName="ConvertAIS6_BitCharacterToASCII(&quot;18&quot;,&quot;'R'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002200" startTime="2024-04-03T16:58:35.3322194+02:00" endTime="2024-04-03T16:58:35.3324394+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bcee05e8-1542-4a3f-9186-cb278aaaef18">
      <Output>
        <StdOut>When I convert the AIS character value 18 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(18) (0,0s)&#xD;
Then the converted ASCII value should be 'R'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(R) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d566780-9eba-41a8-8087-24dd41c9c415" testId="0a04a77c-0eb2-bdb8-77ff-0527aa34ca20" testName="AISTalkerId(&quot;ANVDM&quot;,&quot;AidToNavigationStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002310" startTime="2024-04-03T16:58:35.5696292+02:00" endTime="2024-04-03T16:58:35.5698605+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d566780-9eba-41a8-8087-24dd41c9c415">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'ANVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ANVDM") (0,0s)&#xD;
Then the AisTalker is 'AidToNavigationStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(AidToNavigationSt...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4a96229c-a29f-4607-805a-7af2019c3873" testId="233c0c1c-27f9-545b-d124-24ee06773ff7" testName="MMSI(&quot;B&gt;eq`d@000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0514837+02:00" endTime="2024-04-03T16:58:35.0518233+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4a96229c-a29f-4607-805a-7af2019c3873">
      <Output>
        <StdOut>When I parse 'B&gt;eq`d@000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 987654321&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6528a952-5782-413f-b1a9-1db09fa4a904" testId="eff3441d-74fa-e9a0-5be7-63b0c905a70e" testName="PeekMessageTypeWithoutDecodingInFull(&quot;H3m9b308tL5&lt;d`4E80000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0013180" startTime="2024-04-03T16:58:35.5638893+02:00" endTime="2024-04-03T16:58:35.5652072+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6528a952-5782-413f-b1a9-1db09fa4a904">
      <Output>
        <StdOut>When I peek at the payload 'H3m9b308tL5&lt;d`4E80000000000' with padding of 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("H3m9b308tL5&lt;d`4E8...", 2) (0,0s)&#xD;
Then the message type returned by peek should be 24&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(24) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="42b12769-980d-4b67-a26e-88033af669c5" testId="aa78429c-6dd6-d58f-4ea3-3d4eb1819341" testName="TimeStamp(&quot;1000000000000000000000020000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006400" startTime="2024-04-03T16:58:35.0187977+02:00" endTime="2024-04-03T16:58:35.0194377+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="42b12769-980d-4b67-a26e-88033af669c5">
      <Output>
        <StdOut>When I parse '1000000000000000000000020000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="128e987f-700f-44bd-a334-8c54d6289938" testId="cf315c21-638c-e374-3fa3-1d62def2beca" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000000800000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3729721+02:00" endTime="2024-04-03T16:58:35.3732697+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="128e987f-700f-44bd-a334-8c54d6289938">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000000800000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000800...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="289fc099-a23b-42c5-a212-329066e2c552" testId="95ac5e3f-49b6-7f45-2bd4-b07476d0cf69" testName="Spare(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.2409865+02:00" endTime="2024-04-03T16:58:35.2413881+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="289fc099-a23b-42c5-a212-329066e2c552">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="936e0e6c-9bdb-4ff5-8ab2-74fc69b28fe1" testId="5041a295-0876-44bc-8958-3b501f8b6cb4" testName="PartBRepeatIndicator(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008790" startTime="2024-04-03T16:58:35.2941838+02:00" endTime="2024-04-03T16:58:35.2950631+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="936e0e6c-9bdb-4ff5-8ab2-74fc69b28fe1">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="448ba159-ca8c-4996-b4cf-b10d9577a399" testId="3d359916-4a96-2c79-b7bb-dfd62b894734" testName="FragmentedMessages(&quot;3&quot;,&quot;2&quot;,&quot;0&quot;,&quot;3451&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005520" startTime="2024-04-03T16:58:35.5756260+02:00" endTime="2024-04-03T16:58:35.5761782+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="448ba159-ca8c-4996-b4cf-b10d9577a399">
      <Output>
        <StdOut>When I parse a message fragment part 2 of 3 with message id 0 and sentence group id 3451&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(2, 3, "0", "3451") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
And the SentenceGroupId is '3451'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(3451) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ec89054d-1c4e-47cb-8942-e0a03f9ff8c9" testId="2bf57e75-3dec-8bad-8922-ab5af265505d" testName="IMONumber(&quot;53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2203089+02:00" endTime="2024-04-03T16:58:35.2207058+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec89054d-1c4e-47cb-8942-e0a03f9ff8c9">
      <Output>
        <StdOut>When I parse '53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m6;7`00000hEAP0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="56381110-32e8-46b6-b335-96ff903c187d" testId="089b42c6-cf41-e615-a360-f517fc6d8347" testName="UnspecifiedStandardTagBlock(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007260" startTime="2024-04-03T16:58:35.5561485+02:00" endTime="2024-04-03T16:58:35.5568748+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="56381110-32e8-46b6-b335-96ff903c187d">
      <Output>
        <StdOut>When I parse 's:ASS,c:1706745485*72' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:ASS,c:170674548...", False, Unspecified) (0,0s)&#xD;
Then the Source is ASS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("ASS") (0,0s)&#xD;
And the Timestamp is 1706745485&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706745485) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="65157035-12c4-44ff-b966-cc9acd9b99ff" testId="bae34b8b-78bb-0f1e-0361-c3c609e24758" testName="ConvertAIS6_BitCharacterToASCII(&quot;52&quot;,&quot;'4'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3427457+02:00" endTime="2024-04-03T16:58:35.3429666+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="65157035-12c4-44ff-b966-cc9acd9b99ff">
      <Output>
        <StdOut>When I convert the AIS character value 52 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(52) (0,0s)&#xD;
Then the converted ASCII value should be '4'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="80db9d88-ec13-4ce0-ac76-c7205aa97e67" testId="e00d72cd-5b0b-9f38-8328-a5447b99e6ff" testName="FullMessage(&quot;&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;209582000&quot;,&quot;0&quot;,&quot;229456000&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot; PLS CHECK MY AIS DATA AND REPLY\&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0107890" startTime="2024-04-03T16:58:34.7652777+02:00" endTime="2024-04-03T16:58:34.7760663+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="80db9d88-ec13-4ce0-ac76-c7205aa97e67">
      <Output>
        <StdOut>When I parse '&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;37ood0ne&gt;80P@&lt;CP...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Mmsi is 209582000&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_MmsiIs(209582000) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.DestinationMmsi is 229456000&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_DestinationMmsiIs(229456000) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RetransmitIs(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SafetyRelatedText is " PLS CHECK MY AIS DATA AND REPLY"&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SafetyRelatedTextIs("" PLS CHECK MY AI...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ef5a66f8-5d48-4b43-8319-89698472674a" testId="008e5bec-09cc-0702-f1b4-d8da880f3bff" testName="RadioSyncState(&quot;1000000000000000000000000P00&quot;,&quot;0&quot;,&quot;UtcIndirect&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005980" startTime="2024-04-03T16:58:34.9964274+02:00" endTime="2024-04-03T16:58:34.9970253+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ef5a66f8-5d48-4b43-8319-89698472674a">
      <Output>
        <StdOut>When I parse '1000000000000000000000000P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcIndirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcIndirect) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="73847e26-2d32-4180-aeef-71d7efd996aa" testId="1d18b1cc-1939-d140-a85c-fa67d1e220ea" testName="RegionalReservedBits139_142(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009460" startTime="2024-04-03T16:58:35.1113073+02:00" endTime="2024-04-03T16:58:35.1122537+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="73847e26-2d32-4180-aeef-71d7efd996aa">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="08efd52a-0f98-4979-958d-aff2211c9682" testId="6da058a8-f2e7-d263-4f5d-51031d7d11ec" testName="MultipleLFBlankLinesOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0009870" startTime="2024-04-03T16:58:35.4972807+02:00" endTime="2024-04-03T16:58:35.4982679+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08efd52a-0f98-4979-958d-aff2211c9682">
      <Output>
        <StdOut>Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="99838299-0ee7-4acd-a42f-9a652505edde" testId="c2673843-9828-fcb4-b4b2-b7a8c6ee8c75" testName="SpeedOverGround(&quot;B00000000@000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:35.0699518+02:00" endTime="2024-04-03T16:58:35.0704260+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="99838299-0ee7-4acd-a42f-9a652505edde">
      <Output>
        <StdOut>When I parse 'B00000000@000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000000@0000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ce4e0d27-104a-40d3-aa33-69eb0613dde1" testId="609894d0-8d5d-7572-06f7-869c73c0e9fe" testName="Non_FragmentedMessageReceived" computerName="SCODE-HF8MJR2" duration="00:00:00.0009850" startTime="2024-04-03T16:58:35.4102672+02:00" endTime="2024-04-03T16:58:35.4112518+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ce4e0d27-104a-40d3-aa33-69eb0613dde1">
      <Output>
        <StdOut>When the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="234a282a-9ffd-4039-a2db-4bbf9ab947a5" testId="59133c35-5662-01b8-57f4-d7c5830c45e1" testName="LineStreamParserPassesTheSameSentenceOfATwo_PartMessageTwice" computerName="SCODE-HF8MJR2" duration="00:00:00.0014570" startTime="2024-04-03T16:58:35.4051774+02:00" endTime="2024-04-03T16:58:35.4066340+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="234a282a-9ffd-4039-a2db-4bbf9ab947a5">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055*55\!AIVDM,2,1,6,B,j`888888880,0*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\g:1-2-8055*55\!AIVDM,2,1,6,B,j`888888880,0*2B'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\g:1-2-8055*55\!A...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that it has received two message fragments with the same group id and position&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatItHasReceivedTwoMessageFragmentsWithTheSameGroupIdAndPosition(0) (0,0s)&#xD;
And the message error report 0 should include the line number 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 2) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bd2c5868-c59f-4099-a6b0-f7f3c55bc23c" testId="5a548450-1ff0-bcf7-46cc-5073378951c1" testName="ReadPartAAsPartBThrows" computerName="SCODE-HF8MJR2" duration="00:00:00.0041250" startTime="2024-04-03T16:58:35.3180733+02:00" endTime="2024-04-03T16:58:35.3221977+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bd2c5868-c59f-4099-a6b0-f7f3c55bc23c">
      <Output>
        <StdOut>When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part B catching exception&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartBCatchingException("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then the constructor throws ArgumentException&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenTheConstructorThrowsArgumentException() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="514c51d3-d16e-4e22-b344-ba9593f55518" testId="3ec61729-7255-7d5f-a2f2-9beef7ff66a9" testName="RepeatIndicator(&quot;1kmbi20P@10cNiLTKgi6Wld&gt;0000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003370" startTime="2024-04-03T16:58:35.0097761+02:00" endTime="2024-04-03T16:58:35.0101133+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="514c51d3-d16e-4e22-b344-ba9593f55518">
      <Output>
        <StdOut>When I parse '1kmbi20P@10cNiLTKgi6Wld&gt;0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1kmbi20P@10cNiLTK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="04ae5f29-f297-4538-bdf6-3026071578fa" testId="5fa3826b-6151-6eed-45bd-b43f22cb5dc4" testName="PositionFixType(&quot;53m8:d`2F;v4hHQR220PE8l4pr0a:2222222221J0`?6600Ht8kCR81RDj1PDSDp8888880&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.2300932+02:00" endTime="2024-04-03T16:58:35.2304890+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="04ae5f29-f297-4538-bdf6-3026071578fa">
      <Output>
        <StdOut>When I parse '53m8:d`2F;v4hHQR220PE8l4pr0a:2222222221J0`?6600Ht8kCR81RDj1PDSDp8888880' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m8:d`2F;v4hHQR2...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Undefined&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Undefined) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2e641203-6ef2-4457-8038-7e30a27bfca0" testId="96bbd594-afa6-ecde-a7c6-ac3b2bf69ea4" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000000400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3726621+02:00" endTime="2024-04-03T16:58:35.3729637+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2e641203-6ef2-4457-8038-7e30a27bfca0">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000000400000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000400...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="32b174b8-e73c-4a0f-942f-24a5d46f9e08" testId="22b971ac-7cfd-128d-ec05-0e2ab786d957" testName="UnsignedAligned6_BitInteger(&quot;ABC0&quot;,&quot;0&quot;,&quot;18&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3670183+02:00" endTime="2024-04-03T16:58:35.3673158+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="32b174b8-e73c-4a0f-942f-24a5d46f9e08">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABC0' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC0", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a0a5ad0-e96d-409e-ac77-122cf61abfbe" testId="5f3a0f66-fa06-365c-d71e-17a0544e3bb4" testName="ConvertAIS6_BitCharacterToASCII(&quot;61&quot;,&quot;'='&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002190" startTime="2024-04-03T16:58:35.3448032+02:00" endTime="2024-04-03T16:58:35.3450220+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a0a5ad0-e96d-409e-ac77-122cf61abfbe">
      <Output>
        <StdOut>When I convert the AIS character value 61 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(61) (0,0s)&#xD;
Then the converted ASCII value should be '='&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(=) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6cf557fc-e5d7-4139-af58-1e9579b19346" testId="d0e56e6d-6f86-8a13-4d4b-8acc621ef073" testName="RepeatIndicator(&quot;Ch00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003910" startTime="2024-04-03T16:58:35.1208770+02:00" endTime="2024-04-03T16:58:35.1212684+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6cf557fc-e5d7-4139-af58-1e9579b19346">
      <Output>
        <StdOut>When I parse 'Ch00000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("Ch000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5e4e0ca8-9ac0-4000-9d77-f6fffbaacffe" testId="7d10f76c-da18-5b57-f56d-734f311a48b6" testName="ConvertAIS6_BitCharacterToASCII(&quot;60&quot;,&quot;'&lt;'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3445744+02:00" endTime="2024-04-03T16:58:35.3447949+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5e4e0ca8-9ac0-4000-9d77-f6fffbaacffe">
      <Output>
        <StdOut>When I convert the AIS character value 60 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(60) (0,0s)&#xD;
Then the converted ASCII value should be '&lt;'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(&lt;) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c0edb617-3036-4e82-9663-fb2a6d6e7c5c" testId="ae0b0bf6-279f-814c-49ee-4e18b40409d5" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;2&quot;,&quot;55&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3751272+02:00" endTime="2024-04-03T16:58:35.3754253+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0edb617-3036-4e82-9663-fb2a6d6e7c5c">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 2) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8d626764-0010-4cb8-8b4e-b8c9b7f2a4c7" testId="1ad78481-33e6-7d27-ec20-d6d31531bdef" testName="PartBSerialNumber(&quot;H000004000000010000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0021840" startTime="2024-04-03T16:58:35.2983552+02:00" endTime="2024-04-03T16:58:35.3005392+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8d626764-0010-4cb8-8b4e-b8c9b7f2a4c7">
      <Output>
        <StdOut>When I parse 'H000004000000010000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000100...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="64a89db5-bb43-429a-8941-e648584a1d55" testId="276d0901-308c-3aa9-b6df-2f7c981cbee9" testName="MMSI(&quot;5&gt;eq`d@0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.2240379+02:00" endTime="2024-04-03T16:58:35.2244356+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="64a89db5-bb43-429a-8941-e648584a1d55">
      <Output>
        <StdOut>When I parse '5&gt;eq`d@0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5&gt;eq`d@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 987654321&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a13a77fd-fb4b-484f-a060-fc57ee3f982f" testId="2168f957-a1f3-93bc-ebaf-6190cde8531d" testName="RadioSlotTimeout(&quot;1000000000000000000000000@00&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:34.9889962+02:00" endTime="2024-04-03T16:58:34.9893356+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a13a77fd-fb4b-484f-a060-fc57ee3f982f">
      <Output>
        <StdOut>When I parse '1000000000000000000000000@00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 4&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="339232a0-e844-4aec-ba6f-30b52ab47480" testId="45ae910d-9968-b23e-8c68-f02256bfc65d" testName="DimensionToBow(&quot;5000000000000000000000000000000000000000wp00000000000000000000000000000&quot;,&quot;2&quot;,&quot;511&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004020" startTime="2024-04-03T16:58:35.1781999+02:00" endTime="2024-04-03T16:58:35.1786016+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="339232a0-e844-4aec-ba6f-30b52ab47480">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000wp00000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 511&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(511) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="46836a13-d2ba-4b9c-8ebd-f25521b20448" testId="75110cfd-aae7-86e5-dc47-16f86b65a3be" testName="RegionalReservedBits38_45(&quot;C000000400000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005190" startTime="2024-04-03T16:58:35.1174219+02:00" endTime="2024-04-03T16:58:35.1179406+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="46836a13-d2ba-4b9c-8ebd-f25521b20448">
      <Output>
        <StdOut>When I parse 'C000000400000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000004000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f89cde31-c639-446e-86cb-1e306c8dcaaf" testId="10d482f8-f8b8-3034-8eb1-3c583cdb999c" testName="DimensionToBow(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009430" startTime="2024-04-03T16:58:35.1766989+02:00" endTime="2024-04-03T16:58:35.1776422+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f89cde31-c639-446e-86cb-1e306c8dcaaf">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1cb44a9c-d82a-48e7-9b7b-364bf5dde151" testId="84dd30f8-3a1b-bfc4-3456-d36da061938d" testName="UnsignedAligned6_BitInteger(&quot;ABCw&quot;,&quot;0&quot;,&quot;18&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3688652+02:00" endTime="2024-04-03T16:58:35.3691645+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1cb44a9c-d82a-48e7-9b7b-364bf5dde151">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABCw' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABCw", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 63&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e3f1a101-3faa-4119-889b-a87512881a4e" testId="02579369-1b2c-ab75-c447-d81b4f2db692" testName="FullMessage(&quot;E&gt;nlfV1`:Rab7h;4Sh&lt;h1WW:@:9MbW`ghDbC@10888gh20A`0UAC`4m@iDh&quot;,&quot;0&quot;,&quot;21&quot;,&quot;0&quot;,&quot;997011096&quot;,&quot;3&quot;,&quot;PUESTO VIG Y CONT TR&quot;,&quot;true&quot;,&quot;-39159249&quot;,&quot;-32877414&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;31&quot;,&quot;true&quot;,&quot;0&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;false&quot;,&quot;AF BUEN SUCES&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0029500" startTime="2024-04-03T16:58:34.7978892+02:00" endTime="2024-04-03T16:58:34.8008392+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e3f1a101-3faa-4119-889b-a87512881a4e">
      <Output>
        <StdOut>When I parse 'E&gt;nlfV1`:Rab7h;4Sh&lt;h1WW:@:9MbW`ghDbC@10888gh20A`0UAC`4m@iDh' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("E&gt;nlfV1`:Rab7h;4S...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Mmsi is 997011096&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_MmsiIs(997011096) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AidsToNavigationType is 3&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AidsToNavigationTypeIs(FixedStructure) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidsToNavigation is PUESTO VIG Y CONT TR&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidsToNavigationIs("PUESTO VIG Y CONT TR") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.PositionAccuracy is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Longitude10000thMins is -39159249&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Longitude10000thMinsIs(-39159249) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Latitude10000thMins is -32877414&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Latitude10000thMinsIs(-32877414) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionA is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionAIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionB is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionBIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionC is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionCIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionD is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionDIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.EpfdFixType is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_EpfdFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.TimeStampSecond is 31&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TimeStampSecondIs(31) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.OffPositionIndicator is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_OffPositionIndicatorIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AtoNStatus is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AtoNStatusIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RaimFlag is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RaimFlagIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.VirtualAtoN is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_VirtualAtoNIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AssignedMode is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBit241 is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBit241Is(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidToNavigationExtension is AF BUEN SUCES&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidToNavigationExtensionIs("AF BUEN SUCES") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBitsAtEndIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e8db984b-1e97-4598-83d2-25c920bca02d" testId="c9e79aad-8881-095e-7bcc-3a4ddb4c82a0" testName="MultipleMixedBlankLinesOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0006740" startTime="2024-04-03T16:58:35.5056009+02:00" endTime="2024-04-03T16:58:35.5062745+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e8db984b-1e97-4598-83d2-25c920bca02d">
      <Output>
        <StdOut>Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e69a8926-5875-48dd-8b85-4a08349cf8a5" testId="030a17cd-b01e-119f-cda1-6268b8ff1f39" testName="NavigationStatus(&quot;13@njcg000PeVI&gt;Pu9Hnul9D0D1M&quot;,&quot;0&quot;,&quot;NotDefined&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:34.9842752+02:00" endTime="2024-04-03T16:58:34.9846151+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e69a8926-5875-48dd-8b85-4a08349cf8a5">
      <Output>
        <StdOut>When I parse '13@njcg000PeVI&gt;Pu9Hnul9D0D1M' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@njcg000PeVI&gt;Pu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotDefined&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotDefined) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="45b54438-64f7-4e4d-8de5-98998d0cd809" testId="735ac887-e916-5ba5-f56c-7180c693e802" testName="DimensionToStarboard(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009360" startTime="2024-04-03T16:58:35.0880059+02:00" endTime="2024-04-03T16:58:35.0889419+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="45b54438-64f7-4e4d-8de5-98998d0cd809">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStarboard is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToStarboardIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7a11cb6-2b32-4d86-b383-88b59a94f9a7" testId="b33c6a45-e283-9138-9bb1-f8306a5bd1bb" testName="PartBDimensionToStarboard(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.2851095+02:00" endTime="2024-04-03T16:58:35.2854505+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7a11cb6-2b32-4d86-b383-88b59a94f9a7">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c9ef5923-089d-4fac-919f-45174d43c80d" testId="83fee536-07e0-00c9-afd6-f5a6016883a2" testName="SingleLineWherePaddingIsMissing" computerName="SCODE-HF8MJR2" duration="00:00:00.0011500" startTime="2024-04-03T16:58:35.5140949+02:00" endTime="2024-04-03T16:58:35.5152448+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c9ef5923-089d-4fac-919f-45174d43c80d">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the padding is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatThePaddingIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4d2ce3a7-b53b-4ca3-940a-d81fd4fe9c06" testId="4a6156e3-eb36-b3f6-d133-0992eea8857c" testName="RadioSlotTimeout(&quot;1000000000000000000000000400&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004710" startTime="2024-04-03T16:58:34.9877966+02:00" endTime="2024-04-03T16:58:34.9882677+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4d2ce3a7-b53b-4ca3-940a-d81fd4fe9c06">
      <Output>
        <StdOut>When I parse '1000000000000000000000000400' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="585fa780-998e-4ee2-8e05-ea6c0cc0c27d" testId="5f7d7215-65d5-4d25-e282-0e8892955b15" testName="PartBMessageType(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005730" startTime="2024-04-03T16:58:35.2893508+02:00" endTime="2024-04-03T16:58:35.2899234+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="585fa780-998e-4ee2-8e05-ea6c0cc0c27d">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartB.PartNumber is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_PartNumberIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e3220856-a5a0-4b42-92a2-15f70ddac8f1" testId="e78c3666-405f-6998-272c-4e3f18482072" testName="SingleLineWherePaddingCommaPresentButValueMissing" computerName="SCODE-HF8MJR2" duration="00:00:00.0011590" startTime="2024-04-03T16:58:35.5129231+02:00" endTime="2024-04-03T16:58:35.5140817+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e3220856-a5a0-4b42-92a2-15f70ddac8f1">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the padding is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatThePaddingIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="81ba3fd5-9215-4cbb-b9e5-5af95b82549c" testId="90d1ee4d-c446-3041-ec9e-d98300634b7e" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004940" startTime="2024-04-03T16:58:34.9365158+02:00" endTime="2024-04-03T16:58:34.9370091+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="81ba3fd5-9215-4cbb-b9e5-5af95b82549c">
      <Output>
        <StdOut>When I parse '?913QK18Uf;0D00' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?913QK18Uf;0D00", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b2f3c165-e367-4d19-b04e-ddee0f533578" testId="359e89a8-1828-241f-cc5f-821a3c7f2480" testName="UnsignedAligned6_BitInteger(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,&quot;24&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3654264+02:00" endTime="2024-04-03T16:58:35.3657261+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b2f3c165-e367-4d19-b04e-ddee0f533578">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'H3mhO30PDT@V04pU@4000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 24&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(24) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d24be1ef-910f-4b25-a2b7-cd189ab15b87" testId="fe723703-7572-54b0-3474-b5d2606442ec" testName="ConvertAIS6_BitCharacterToASCII(&quot;63&quot;,&quot;'?'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3452585+02:00" endTime="2024-04-03T16:58:35.3454795+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d24be1ef-910f-4b25-a2b7-cd189ab15b87">
      <Output>
        <StdOut>When I convert the AIS character value 63 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(63) (0,0s)&#xD;
Then the converted ASCII value should be '?'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(?) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="552b2e80-74c0-46f1-b82e-b63f71e6521c" testId="966f28aa-b87e-6ac2-c900-9d582c273d12" testName="NavigationStatus(&quot;13B6BP80000jt=tPk:Isf:F@0538&quot;,&quot;0&quot;,&quot;UnderWaySailing&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:34.9821533+02:00" endTime="2024-04-03T16:58:34.9824969+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="552b2e80-74c0-46f1-b82e-b63f71e6521c">
      <Output>
        <StdOut>When I parse '13B6BP80000jt=tPk:Isf:F@0538' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13B6BP80000jt=tPk...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderWaySailing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderWaySailing) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="19ea8a8c-2674-4dc5-8e4c-0c83ad95a9b8" testId="c54e6d19-4b1c-86f6-0d62-69fdf8d7bfc4" testName="FullMessage(&quot;=6D2aSc?SAghBHVwTP0&lt;0;&lt;4:AOwhgs17wpEF:NuHP8oBsti@Rep80klilPCQ830BiH8888&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;423668110&quot;,&quot;2&quot;,&quot;870532860&quot;,&quot;0&quot;,&quot;308441060&quot;,&quot;2&quot;,&quot;196652&quot;,&quot;3&quot;,&quot;17450495&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0019680" startTime="2024-04-03T16:58:34.7424255+02:00" endTime="2024-04-03T16:58:34.7443937+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="19ea8a8c-2674-4dc5-8e4c-0c83ad95a9b8">
      <Output>
        <StdOut>When I parse '=6D2aSc?SAghBHVwTP0&lt;0;&lt;4:AOwhgs17wpEF:NuHP8oBsti@Rep80klilPCQ830BiH8888' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=6D2aSc?SAghBHVwT...", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.RepeatIndicator is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.Mmsi is 423668110&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_MmsiIs(423668110) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SpareBits38 is 2&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_Is(2) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi1 is 870532860&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi1Is(870532860) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi1 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi1Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi2 is 308441060&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMms21Is(308441060) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi2 is 2&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi2Is(2) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi3 is 196652&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi3Is(196652) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi3 is 3&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi3Is(3) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi4 is 17450495&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi4Is(17450495) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi4 is 3&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi4Is(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="482d9fe8-dda3-41cf-9aa1-25165addd0e0" testId="77bdb364-2e94-f7c1-91b4-9a68d48ca25f" testName="FragmentedMessages(&quot;2&quot;,&quot;1&quot;,&quot;6&quot;,&quot;8055&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0028630" startTime="2024-04-03T16:58:35.5713102+02:00" endTime="2024-04-03T16:58:35.5741734+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="482d9fe8-dda3-41cf-9aa1-25165addd0e0">
      <Output>
        <StdOut>When I parse a message fragment part 1 of 2 with message id 6 and sentence group id 8055&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(1, 2, "6", "8055") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)&#xD;
And the SentenceGroupId is '8055'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(8055) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88e3b582-711a-4ca0-a15b-d9b0f09290ff" testId="c31e3282-5723-ff89-1fa7-2e1e99875a2a" testName="ConvertAIS6_BitCharacterToASCII(&quot;12&quot;,&quot;'L'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3308438+02:00" endTime="2024-04-03T16:58:35.3310646+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88e3b582-711a-4ca0-a15b-d9b0f09290ff">
      <Output>
        <StdOut>When I convert the AIS character value 12 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(12) (0,0s)&#xD;
Then the converted ASCII value should be 'L'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(L) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a002684e-f232-4e1c-873f-e45bdb8cd778" testId="c15743be-2054-dc80-8348-226c8096722c" testName="PartARepeatIndicator(&quot;HP0000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.2627709+02:00" endTime="2024-04-03T16:58:35.2631136+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a002684e-f232-4e1c-873f-e45bdb8cd778">
      <Output>
        <StdOut>When I parse 'HP0000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("HP000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8f6809ba-044c-4cd1-9096-f1848b98fcb5" testId="d7f68091-ac89-0646-0c4c-f4e3da416ec5" testName="UnspecifiedStandardTagBlockWithGroup(&quot;g:1-2-7764,s:AIS,c:1706800480*13&quot;,&quot;AIS&quot;,&quot;1706800480&quot;,&quot;1&quot;,&quot;2&quot;,&quot;7764&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007930" startTime="2024-04-03T16:58:35.5575923+02:00" endTime="2024-04-03T16:58:35.5583847+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f6809ba-044c-4cd1-9096-f1848b98fcb5">
      <Output>
        <StdOut>When I parse 'g:1-2-7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("g:1-2-7764,s:AIS,...", False, Unspecified) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6a8f7d65-455d-44e9-9a4b-60fc0526c067" testId="098e9c73-ca9a-3ee4-e7f1-767cec719c47" testName="PositionAccuracy(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003540" startTime="2024-04-03T16:58:34.9864887+02:00" endTime="2024-04-03T16:58:34.9868428+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6a8f7d65-455d-44e9-9a4b-60fc0526c067">
      <Output>
        <StdOut>When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="448ecbd7-bcbf-494b-b318-27aefec992a9" testId="338893e4-1814-693c-d51f-67b660629087" testName="ConvertAIS6_BitCharacterToASCII(&quot;53&quot;,&quot;'5'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002190" startTime="2024-04-03T16:58:35.3429747+02:00" endTime="2024-04-03T16:58:35.3431935+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="448ecbd7-bcbf-494b-b318-27aefec992a9">
      <Output>
        <StdOut>When I convert the AIS character value 53 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(53) (0,0s)&#xD;
Then the converted ASCII value should be '5'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1e7f2799-a12e-463d-a948-7ac1cbe6a21f" testId="2cd6d40b-76ea-ca93-f09f-9c8892a78cd7" testName="PartBMMSI(&quot;H00000D000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004620" startTime="2024-04-03T16:58:35.2908574+02:00" endTime="2024-04-03T16:58:35.2913193+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1e7f2799-a12e-463d-a948-7ac1cbe6a21f">
      <Output>
        <StdOut>When I parse 'H00000D000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000D0000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="316f97e9-bb87-4dc0-a73f-86582d59f7f8" testId="30614867-9fa2-4396-278d-119b26f828af" testName="PartBShipType(&quot;H000004E00000000000000000000&quot;,&quot;0&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0034110" startTime="2024-04-03T16:58:35.3027234+02:00" endTime="2024-04-03T16:58:35.3061343+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="316f97e9-bb87-4dc0-a73f-86582d59f7f8">
      <Output>
        <StdOut>When I parse 'H000004E00000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H000004E000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is WingInGroundHazardousCategoryA&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(WingInGroundHazar...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5f26064b-efb5-4f4f-ad69-e34fb89dbf64" testId="4c7995db-15bd-3e77-7b92-651c88f6a7cd" testName="DimensionToStern(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;154&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1878362+02:00" endTime="2024-04-03T16:58:35.1882342+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5f26064b-efb5-4f4f-ad69-e34fb89dbf64">
      <Output>
        <StdOut>When I parse '548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("548dvb02&lt;&lt;pTiT8l0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 154&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(154) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="27365861-e828-4c22-9af2-64a55f74472d" testId="91d47562-8832-e2e4-f715-1755a2f4f7bc" testName="BandFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003530" startTime="2024-04-03T16:58:35.0316370+02:00" endTime="2024-04-03T16:58:35.0319897+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="27365861-e828-4c22-9af2-64a55f74472d">
      <Output>
        <StdOut>When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanSwitchBands is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanSwitchBands(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="546b4229-4ed3-4be7-8d67-952245713ed5" testId="28d5c8a7-4ffd-56d3-53cf-33b3b80ec1b8" testName="ETAMinute(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;34&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.2111572+02:00" endTime="2024-04-03T16:58:35.2115566+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="546b4229-4ed3-4be7-8d67-952245713ed5">
      <Output>
        <StdOut>When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 34&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(34) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="edd0bbb9-2fa7-4b33-a253-81686873c0e2" testId="61fbb03e-4a30-41be-22c2-c7721122c7e1" testName="PartBCallSign(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;LG9847&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:35.2702418+02:00" endTime="2024-04-03T16:58:35.2705880+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="edd0bbb9-2fa7-4b33-a253-81686873c0e2">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is LG9847&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("LG9847") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8e70fd03-4025-4d2f-89f4-793998d6fa6f" testId="e4671126-e6cf-ff73-46d1-7764e57406b8" testName="Name(&quot;C000000000000000000000002468:&lt;&gt;@BDFHJLNPRTV`00000000&quot;,&quot;0&quot;,&quot;ABCDEFGHIJKLMNOPQRST&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004180" startTime="2024-04-03T16:58:35.1021508+02:00" endTime="2024-04-03T16:58:35.1025689+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8e70fd03-4025-4d2f-89f4-793998d6fa6f">
      <Output>
        <StdOut>When I parse 'C000000000000000000000002468:&lt;&gt;@BDFHJLNPRTV`00000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is 'ABCDEFGHIJKLMNOPQRST'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("ABCDEFGHIJKLMNOPQRST") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7ba49bb0-5f36-4b99-961f-d3c4dd348b40" testId="2af31fc0-d7d1-0c9d-28ad-47e73c1f7d9e" testName="PartBDimensionToPort(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003330" startTime="2024-04-03T16:58:35.2822719+02:00" endTime="2024-04-03T16:58:35.2826047+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ba49bb0-5f36-4b99-961f-d3c4dd348b40">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a1b0b9b4-63df-4548-8c9c-62517781b7aa" testId="3942ec0b-4c15-50e6-30d8-c1cd036edcad" testName="FullMessage(&quot;I&gt;M4ej0&quot;,&quot;0&quot;,&quot;25&quot;,&quot;0&quot;,&quot;970010056&quot;,&quot;0&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;4&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0073150" startTime="2024-04-03T16:58:35.1402736+02:00" endTime="2024-04-03T16:58:35.1475888+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a1b0b9b4-63df-4548-8c9c-62517781b7aa">
      <Output>
        <StdOut>When I parse 'I&gt;M4ej0' with padding 0 as a Single Slot Binary Message&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.WhenIParseWithNmeaAisSingleSlotBinaryParser("I&gt;M4ej0", 0) (0,0s)&#xD;
Then NmeaAisSingleSlotBinaryParser.Type is 25&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_TypeIs(SingleSlotBinaryM...) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.RepeatIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.Mmsi is 970010056&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_MmsiIs(970010056) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationIndicatorIs(Brocast) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.BinaryDataFlag is false&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_BinaryDataFlagIs(False) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationMmsi is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationMmsiIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.SpareBits70 is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_SpareBits70Is(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DAC is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DACIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.FI is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_FIIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationDataPadding is 4&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationData is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataIs("0") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d790f94a-67fc-4e3f-ac58-319538e9c9de" testId="f610318f-db7d-5b4b-b4ce-71af0ac6f6da" testName="PartBMMSI(&quot;H3m76H4N@B?&gt;1F0&lt;;mnoh0107320&quot;,&quot;0&quot;,&quot;257017440&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:35.2920390+02:00" endTime="2024-04-03T16:58:35.2923779+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d790f94a-67fc-4e3f-ac58-319538e9c9de">
      <Output>
        <StdOut>When I parse 'H3m76H4N@B?&gt;1F0&lt;;mnoh0107320' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m76H4N@B?&gt;1F0&lt;;...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 257017440&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(257017440) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0e2e0bf9-72b8-423a-9b4f-7a6e5f521f3f" testId="9860baa1-af05-9206-7968-fea126a8aefb" testName="ETAHour(&quot;50000000000000000000000000000000000000000000000200000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004030" startTime="2024-04-03T16:58:35.2042364+02:00" endTime="2024-04-03T16:58:35.2046394+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0e2e0bf9-72b8-423a-9b4f-7a6e5f521f3f">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000200000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="02195c09-7bf6-41b4-920a-10bcf67166ae" testId="e2799fb3-ce7d-c7f3-6230-83c767aa3945" testName="ManoeuvreIndicator(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003660" startTime="2024-04-03T16:58:34.9654407+02:00" endTime="2024-04-03T16:58:34.9658068+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="02195c09-7bf6-41b4-920a-10bcf67166ae">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NotAvailable&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NotAvailable) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="852bf13d-d244-4696-accb-6ebc047a66d0" testId="484e1c5b-74b9-a825-2ce3-6fde92a5c63f" testName="TrueHeading(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009730" startTime="2024-04-03T16:58:35.1304975+02:00" endTime="2024-04-03T16:58:35.1314704+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="852bf13d-d244-4696-accb-6ebc047a66d0">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TrueHeadingDegrees is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TrueHeadingDegreesIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dc5798df-8257-4ecc-9cfc-6c12163f6cb1" testId="642bd812-134b-cd6b-46c0-17a30ad10d0f" testName="RadioSubMessage(&quot;13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq&quot;,&quot;0&quot;,&quot;2233&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:34.9949360+02:00" endTime="2024-04-03T16:58:34.9952799+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc5798df-8257-4ecc-9cfc-6c12163f6cb1">
      <Output>
        <StdOut>When I parse '13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mClB:Oi&lt;Pi:U4U5...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 2233&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(2233) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5a2ceec8-657e-45fa-933f-3abdc844ac49" testId="0d4cf52e-5d8a-9211-f817-f4b8f17842d3" testName="Message22Flag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009170" startTime="2024-04-03T16:58:35.0465351+02:00" endTime="2024-04-03T16:58:35.0474515+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5a2ceec8-657e-45fa-933f-3abdc844ac49">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="27d5ef7a-4b75-4521-bc91-a9d0163e77b7" testId="82c5474d-88a4-d245-4e10-5f0105db7747" testName="ConvertAIS6_BitCharacterToASCII(&quot;50&quot;,&quot;'2'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3422876+02:00" endTime="2024-04-03T16:58:35.3425085+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="27d5ef7a-4b75-4521-bc91-a9d0163e77b7">
      <Output>
        <StdOut>When I convert the AIS character value 50 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(50) (0,0s)&#xD;
Then the converted ASCII value should be '2'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="446e3281-6d73-4a5a-86f2-c9d8cd248849" testId="b26b3f50-d17e-27bf-d889-79f48876ce7f" testName="RadioSlotTimeout(&quot;1000000000000000000000000H00&quot;,&quot;0&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:34.9896967+02:00" endTime="2024-04-03T16:58:34.9900341+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="446e3281-6d73-4a5a-86f2-c9d8cd248849">
      <Output>
        <StdOut>When I parse '1000000000000000000000000H00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 6&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(6) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be6e4c1e-f075-4115-a2e9-8226669993e9" testId="37b6707e-37dd-db99-7038-c9cee28f7fd8" testName="RepeatIndicator(&quot;BSm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:35.0683030+02:00" endTime="2024-04-03T16:58:35.0686408+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be6e4c1e-f075-4115-a2e9-8226669993e9">
      <Output>
        <StdOut>When I parse 'BSm?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("BSm?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ddf47024-4d3b-4181-8a42-37242fb15ee2" testId="1568b428-2c9e-4c7a-6c6f-4762a62e88ef" testName="IMONumber(&quot;50000000000500000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006290" startTime="2024-04-03T16:58:35.2192492+02:00" endTime="2024-04-03T16:58:35.2198778+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ddf47024-4d3b-4181-8a42-37242fb15ee2">
      <Output>
        <StdOut>When I parse '50000000000500000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000500000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bbb43410-7367-48c0-b7bc-a3a9c4238507" testId="34a8b516-11fb-b76f-8e00-a516f684748d" testName="NmeaTagBlockSingleLineWithGroup" computerName="SCODE-HF8MJR2" duration="00:00:00.0008890" startTime="2024-04-03T16:58:35.5552339+02:00" endTime="2024-04-03T16:58:35.5561223+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bbb43410-7367-48c0-b7bc-a3a9c4238507">
      <Output>
        <StdOut>When I parse 'g:1-2-7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("g:1-2-7764,s:AIS,...", False, Nmea) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fcebf243-e2de-4e24-895f-ab37875d8c46" testId="65f9fcae-4346-b156-f4a1-ff3dbe5e5600" testName="SingleLineWithStandardButUnsupportedTagBlockFieldWithExceptionsDisabled" computerName="SCODE-HF8MJR2" duration="00:00:00.0007320" startTime="2024-04-03T16:58:35.5188137+02:00" endTime="2024-04-03T16:58:35.5195450+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fcebf243-e2de-4e24-895f-ab37875d8c46">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904,n:1*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message with exceptions disabled&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageWithExceptionsDisabledAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9602af1c-f2df-4309-98c7-87e7bc3a75c4" testId="aa14bfae-7e79-5d1c-68d4-fe90d986debc" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004490" startTime="2024-04-03T16:58:35.1494530+02:00" endTime="2024-04-03T16:58:35.1499016+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9602af1c-f2df-4309-98c7-87e7bc3a75c4">
      <Output>
        <StdOut>When I parse 'I&gt;M4ej0' with padding 0 as a Single Slot Binary Message&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.WhenIParseWithNmeaAisSingleSlotBinaryParser("I&gt;M4ej0", 0) (0,0s)&#xD;
Then NmeaAisSingleSlotBinaryParser.Type is 25&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_TypeIs(SingleSlotBinaryM...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f36534d6-84e3-46e2-8044-08c09f77136c" testId="66cb65d1-1f9c-006d-e574-286af95ae5e9" testName="RaimFlag(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003470" startTime="2024-04-03T16:58:35.0020562+02:00" endTime="2024-04-03T16:58:35.0024035+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f36534d6-84e3-46e2-8044-08c09f77136c">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="17877ab4-4722-4803-a544-0ea7437ac5a5" testId="70ab7756-84e9-25d3-c607-4ab802f85f6b" testName="LongitudeAndLatitute(&quot;100000000000001wwwwh00000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004640" startTime="2024-04-03T16:58:34.9604288+02:00" endTime="2024-04-03T16:58:34.9608929+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17877ab4-4722-4803-a544-0ea7437ac5a5">
      <Output>
        <StdOut>When I parse '100000000000001wwwwh00000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000000000001ww...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(-1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dbfa00ca-4841-4719-a794-f6fafdf9baf0" testId="32d222d0-55aa-64e4-e060-7ca36447ea37" testName="RepeatIndicator(&quot;:@0000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004980" startTime="2024-04-03T16:58:34.8661986+02:00" endTime="2024-04-03T16:58:34.8666966+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dbfa00ca-4841-4719-a794-f6fafdf9baf0">
      <Output>
        <StdOut>When I parse ':@0000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":@0000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="72e817c8-1c1a-45bb-9a64-7f40898a2615" testId="e742a83e-3ba0-dd6b-07fe-16f6159c5106" testName="RepeatIndicator(&quot;CP00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1204660+02:00" endTime="2024-04-03T16:58:35.1208635+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72e817c8-1c1a-45bb-9a64-7f40898a2615">
      <Output>
        <StdOut>When I parse 'CP00000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("CP000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2abe131c-0d2c-4125-ad75-0a4c1a2cffd0" testId="723ce79d-ca13-a4c5-fb2f-29666ac912d5" testName="CourseOverGround(&quot;B000000000000000000040000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:35.0329218+02:00" endTime="2024-04-03T16:58:35.0333957+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2abe131c-0d2c-4125-ad75-0a4c1a2cffd0">
      <Output>
        <StdOut>When I parse 'B000000000000000000040000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="533c7fa1-2e9e-4cb1-9bc1-ef47f7f5efd7" testId="7f582eb7-fe6c-6104-a26d-69fd564b233a" testName="Signed8_BitInteger(&quot;0000000Oh0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;127&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3500209+02:00" endTime="2024-04-03T16:58:35.3503205+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="533c7fa1-2e9e-4cb1-9bc1-ef47f7f5efd7">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000Oh0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000Oh00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 127&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(127) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d744790d-3559-4433-8b29-6ca89454e900" testId="775b2241-ddf5-bb27-6e87-1d523763137e" testName="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;3&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004460" startTime="2024-04-03T16:58:35.5795278+02:00" endTime="2024-04-03T16:58:35.5799737+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d744790d-3559-4433-8b29-6ca89454e900">
      <Output>
        <StdOut>When I parse a message fragment part 3 of 3 with message id 0 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(3, 3, "0") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(3) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="140c70f5-d54d-425d-807b-98b6eed81c03" testId="8ba52c88-ce82-6444-4595-423daa8a3ea8" testName="PartBMothershipMMSI(&quot;H000004000000000000000000010&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004710" startTime="2024-04-03T16:58:35.2933187+02:00" endTime="2024-04-03T16:58:35.2937896+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="140c70f5-d54d-425d-807b-98b6eed81c03">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000010' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.MothershipMmsi is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MothershipMmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ab257cd0-9bd5-4b95-a5f3-b7756534a410" testId="e22a33f9-9dcd-81d7-be49-dea324035808" testName="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;5&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3567279+02:00" endTime="2024-04-03T16:58:35.3570260+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ab257cd0-9bd5-4b95-a5f3-b7756534a410">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f950b979-d7be-456a-8e68-348091c3ce30" testId="8e8da24e-3507-ea7c-fb40-e13a27032e82" testName="MMSI(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;219014278&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004010" startTime="2024-04-03T16:58:35.2248576+02:00" endTime="2024-04-03T16:58:35.2252585+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f950b979-d7be-456a-8e68-348091c3ce30">
      <Output>
        <StdOut>When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 219014278&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(219014278) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5967592e-e5e9-42ba-aff2-60e3512faf44" testId="f3f3882d-6364-2bf1-2b20-653f20ab749a" testName="Draught(&quot;50000000000000000000000000000000000000000000000000h00000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1901905+02:00" endTime="2024-04-03T16:58:35.1905887+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5967592e-e5e9-42ba-aff2-60e3512faf44">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f126c31b-1bfd-471e-9c33-e6de765a72e1" testId="feb287eb-d373-ddc9-76bc-26e4362d8643" testName="PartBRepeatIndicator(&quot;Hh00004000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.2959178+02:00" endTime="2024-04-03T16:58:35.2962590+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f126c31b-1bfd-471e-9c33-e6de765a72e1">
      <Output>
        <StdOut>When I parse 'Hh00004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("Hh000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8792c7da-43ea-4729-b382-4a3500bd06bc" testId="2d370ee2-5ce0-563d-6806-116132fb1472" testName="ConvertAIS6_BitCharacterToASCII(&quot;30&quot;,&quot;'^'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002270" startTime="2024-04-03T16:58:35.3350211+02:00" endTime="2024-04-03T16:58:35.3352480+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8792c7da-43ea-4729-b382-4a3500bd06bc">
      <Output>
        <StdOut>When I convert the AIS character value 30 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(30) (0,0s)&#xD;
Then the converted ASCII value should be '^'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(^) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f7ac0dfe-a087-43eb-abec-f5608901552c" testId="e06de842-6fec-2f15-f145-2f83acda7674" testName="NmeaTagBlockSingleLine(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006710" startTime="2024-04-03T16:58:35.5545415+02:00" endTime="2024-04-03T16:58:35.5552122+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f7ac0dfe-a087-43eb-abec-f5608901552c">
      <Output>
        <StdOut>When I parse 's:AIS,c:1706800491*63' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:AIS,c:170680049...", False, Nmea) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800491&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800491) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ffea4620-aefc-466a-8372-b25812e47db0" testId="cecb7428-839f-83fe-3c50-23f6cddf3385" testName="RegionalReservedBits38_45(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009800" startTime="2024-04-03T16:58:35.1164288+02:00" endTime="2024-04-03T16:58:35.1174082+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ffea4620-aefc-466a-8372-b25812e47db0">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="71e3b1dc-7bd8-43cb-88ce-bfd00cb5e481" testId="2f1d17f5-ecee-b3d7-6dbc-5235b44bfdc2" testName="AISTalkerId(&quot;ADVDM&quot;,&quot;DependentBaseStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004700" startTime="2024-04-03T16:58:35.5689032+02:00" endTime="2024-04-03T16:58:35.5693734+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71e3b1dc-7bd8-43cb-88ce-bfd00cb5e481">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'ADVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ADVDM") (0,0s)&#xD;
Then the AisTalker is 'DependentBaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(DependentBaseStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="861bad28-cdc4-468f-9b13-aa92be6a251b" testId="04f96f4a-920b-e400-c28e-c29aaf25d2de" testName="TimeStamp(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008920" startTime="2024-04-03T16:58:35.0178920+02:00" endTime="2024-04-03T16:58:35.0187842+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="861bad28-cdc4-468f-9b13-aa92be6a251b">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fad4e562-1bfe-4443-8f11-39d35fe04aa1" testId="89e9c742-8d2a-3adb-6a7a-5cfb76421629" testName="RepeatIndicator(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:35.0094293+02:00" endTime="2024-04-03T16:58:35.0097674+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fad4e562-1bfe-4443-8f11-39d35fe04aa1">
      <Output>
        <StdOut>When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9ee6ca8a-b82f-42e1-b76b-22ceecdd5a16" testId="b8b17862-840a-8586-2c0f-d94215b836ed" testName="SpeedOverGround(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:35.0160988+02:00" endTime="2024-04-03T16:58:35.0164471+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9ee6ca8a-b82f-42e1-b76b-22ceecdd5a16">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="150073e9-396c-4025-a929-772bca7b424f" testId="3a12dee9-b4c2-8dc6-d860-16a66221ceb0" testName="ConvertAIS6_BitCharacterToASCII(&quot;21&quot;,&quot;'U'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002370" startTime="2024-04-03T16:58:35.3329062+02:00" endTime="2024-04-03T16:58:35.3331436+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="150073e9-396c-4025-a929-772bca7b424f">
      <Output>
        <StdOut>When I convert the AIS character value 21 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(21) (0,0s)&#xD;
Then the converted ASCII value should be 'U'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(U) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="217a89d9-4d3a-4a24-a2af-cec1a7610381" testId="c7a70460-1cf0-d41d-42af-693bc4135ef7" testName="InterleavedMulti_FragmentMessages" computerName="SCODE-HF8MJR2" duration="00:00:00.0038300" startTime="2024-04-03T16:58:35.3901541+02:00" endTime="2024-04-03T16:58:35.3939836+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="217a89d9-4d3a-4a24-a2af-cec1a7610381">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
And in ais message 1 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 27) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567686150) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2c4bf9ed-5fff-444a-a3dc-236a60054026" testId="f2848bd4-6ff4-2768-0a69-f07c12fc819b" testName="ManoeuvreIndicator(&quot;100000000000000000000000P000&quot;,&quot;0&quot;,&quot;NoSpecialManoeuvre&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006290" startTime="2024-04-03T16:58:34.9640202+02:00" endTime="2024-04-03T16:58:34.9646493+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c4bf9ed-5fff-444a-a3dc-236a60054026">
      <Output>
        <StdOut>When I parse '100000000000000000000000P000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NoSpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NoSpecialManoeuvre) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6251448d-ea87-40c5-af2b-9f09d812a2f0" testId="6ebdbbad-88a9-ff27-827f-e9056a0ff6b5" testName="NavigationStatus(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;UnderwayUsingEngine&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009290" startTime="2024-04-03T16:58:34.9710848+02:00" endTime="2024-04-03T16:58:34.9720141+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6251448d-ea87-40c5-af2b-9f09d812a2f0">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderwayUsingEngine&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="28a46f14-1446-490e-b8c6-00270dd2acc4" testId="f6ee8e72-5780-e6ee-044e-bc3807521094" testName="MultipleLinesWithBlanksAtStart" computerName="SCODE-HF8MJR2" duration="00:00:00.0014270" startTime="2024-04-03T16:58:35.5027318+02:00" endTime="2024-04-03T16:58:35.5041590+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="28a46f14-1446-490e-b8c6-00270dd2acc4">
      <Output>
        <StdOut>Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8852a762-5a97-4855-8322-9b559febb177" testId="b752a33c-2442-cf1f-5a6c-74ddeda6d07e" testName="DimensionToBow(&quot;C000000000000000000000000000000000000000000000400000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005340" startTime="2024-04-03T16:58:35.0850915+02:00" endTime="2024-04-03T16:58:35.0856249+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8852a762-5a97-4855-8322-9b559febb177">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000400000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToBow is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToBowIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ad0774ff-38ce-49ec-93a8-44aa76b11a6d" testId="19c03472-9658-4f4e-57b6-828fd9151807" testName="ConvertAIS6_BitCharacterToASCII(&quot;45&quot;,&quot;'-'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002250" startTime="2024-04-03T16:58:35.3411337+02:00" endTime="2024-04-03T16:58:35.3413584+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ad0774ff-38ce-49ec-93a8-44aa76b11a6d">
      <Output>
        <StdOut>When I convert the AIS character value 45 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(45) (0,0s)&#xD;
Then the converted ASCII value should be '-'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(-) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b2766108-dcd7-43f6-9fdf-37a017feb487" testId="87c70220-aa35-8862-9293-cc8f5599d321" testName="LongitudeAndLatitute(&quot;1000000000Owwwv0000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004690" startTime="2024-04-03T16:58:34.9599506+02:00" endTime="2024-04-03T16:58:34.9604199+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b2766108-dcd7-43f6-9fdf-37a017feb487">
      <Output>
        <StdOut>When I parse '1000000000Owwwv0000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000000Owwwv00...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(-1) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c629b441-2850-4b98-b358-f35bf3e5f80b" testId="35bccceb-f6ee-5b65-75ff-9af3618a8ffb" testName="TimeStamp(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003379" startTime="2024-04-03T16:58:35.0215639+02:00" endTime="2024-04-03T16:58:35.0219020+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c629b441-2850-4b98-b358-f35bf3e5f80b">
      <Output>
        <StdOut>When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 63&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="280ee611-0f19-4c01-a587-375324ff8704" testId="01cb9f57-d5b2-1d4d-5ca0-719caf9f76eb" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;1&quot;,&quot;27&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3748164+02:00" endTime="2024-04-03T16:58:35.3751154+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="280ee611-0f19-4c01-a587-375324ff8704">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 1) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 27&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(27) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bafdca4a-a8e3-4291-9e69-af013129b186" testId="ba5a4899-b217-b9d3-034a-d38d020a2947" testName="TimeStamp(&quot;10000000000000000000001n0000&quot;,&quot;0&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:35.0194509+02:00" endTime="2024-04-03T16:58:35.0197966+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bafdca4a-a8e3-4291-9e69-af013129b186">
      <Output>
        <StdOut>When I parse '10000000000000000000001n0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 59&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="292f59e1-ac43-4c2b-8216-145d3aa0a5e0" testId="0a11025d-0bea-6951-a03b-df5a9b0101b1" testName="LongitudeAndLatitute(&quot;1000000000000020000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006020" startTime="2024-04-03T16:58:34.9588517+02:00" endTime="2024-04-03T16:58:34.9594540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="292f59e1-ac43-4c2b-8216-145d3aa0a5e0">
      <Output>
        <StdOut>When I parse '1000000000000020000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000200...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(1) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7074feca-94d0-4875-9b37-984e39c18438" testId="b3ff0599-7dc1-c225-76b1-8a0a351f95a7" testName="UnsignedAligned6_BitInteger(&quot;24c`1`001kPEGSLR98IP00462D0s&quot;,&quot;0&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3629523+02:00" endTime="2024-04-03T16:58:35.3632538+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7074feca-94d0-4875-9b37-984e39c18438">
      <Output>
        <StdOut>Given an NMEA AIS payload of '24c`1`001kPEGSLR98IP00462D0s' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("24c`1`001kPEGSLR9...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="961ca922-6770-4b83-8280-46de0c022fae" testId="a2f26304-370a-5119-443e-d33906fb2fb2" testName="ETAHour(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003910" startTime="2024-04-03T16:58:35.2075630+02:00" endTime="2024-04-03T16:58:35.2079540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="961ca922-6770-4b83-8280-46de0c022fae">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 24&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(24) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1b4867d3-5667-48c0-b711-e3b225603b9d" testId="3a2417fc-e555-e259-ab1d-9374da335c4d" testName="RadioChannelCode(&quot;A&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009950" startTime="2024-04-03T16:58:35.5836256+02:00" endTime="2024-04-03T16:58:35.5846201+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1b4867d3-5667-48c0-b711-e3b225603b9d">
      <Output>
        <StdOut>When I parse a message with a radio channel code of 'A'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("A") (0,0s)&#xD;
Then the ChannelCode is 'A'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(A) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3f4759a8-9fc0-4a1b-b449-e300b46ed012" testId="f4a195c3-cd67-dbe5-70e8-8755254e7ff9" testName="PositionAccuracy(&quot;B000000008000000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0014790" startTime="2024-04-03T16:58:35.0534810+02:00" endTime="2024-04-03T16:58:35.0549602+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3f4759a8-9fc0-4a1b-b449-e300b46ed012">
      <Output>
        <StdOut>When I parse 'B000000008000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000080000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0dc2bca2-c922-482b-980a-fb6c1ec80d8d" testId="96dab6e3-da35-a803-042c-4325f95f86ca" testName="ETAMonth(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009660" startTime="2024-04-03T16:58:35.2119920+02:00" endTime="2024-04-03T16:58:35.2129576+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0dc2bca2-c922-482b-980a-fb6c1ec80d8d">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6412cbc1-fbbc-42a2-a047-651adda1fadb" testId="ab49996b-01ad-5852-f2d2-49adf4519303" testName="ETAMonth(&quot;50000000000000000000000000000000000000000000010000000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2139197+02:00" endTime="2024-04-03T16:58:35.2143142+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6412cbc1-fbbc-42a2-a047-651adda1fadb">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000010000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 4&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4a8aa53-5f5e-472a-b98f-3dc0f55d704c" testId="f7e6a6b9-506b-36e9-7cf7-356d56158f02" testName="TimeStamp(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;60&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:35.0212161+02:00" endTime="2024-04-03T16:58:35.0215552+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4a8aa53-5f5e-472a-b98f-3dc0f55d704c">
      <Output>
        <StdOut>When I parse '13oHtV7OhN0=B9bQch;WqnCp0W3h' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 60&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(60) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="59f3d97f-3d6a-450e-abc9-8c3fb83b2643" testId="578f0a1c-72ba-521f-6391-2a5eaa512e52" testName="ETAMinute(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009780" startTime="2024-04-03T16:58:35.2079878+02:00" endTime="2024-04-03T16:58:35.2089654+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="59f3d97f-3d6a-450e-abc9-8c3fb83b2643">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="60beca17-69a6-4187-b4f9-cbab13918082" testId="cd43354c-47ad-4eb3-50c3-8536028c0043" testName="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000&gt;0&quot;,&quot;0&quot;,&quot;Surveyed&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003890" startTime="2024-04-03T16:58:35.1089648+02:00" endTime="2024-04-03T16:58:35.1093540+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="60beca17-69a6-4187-b4f9-cbab13918082">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000000000&gt;0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Surveyed&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Surveyed) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="99947624-c3d9-4d1a-8f59-c6349ea9f290" testId="95be8499-1297-e662-0746-d1528520b0ca" testName="SingleLineWhereChecksumIsMissing" computerName="SCODE-HF8MJR2" duration="00:00:00.0014780" startTime="2024-04-03T16:58:35.5099454+02:00" endTime="2024-04-03T16:58:35.5114232+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="99947624-c3d9-4d1a-8f59-c6349ea9f290">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the checksum is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheChecksumIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="089ef525-adf0-44b9-b03d-2e6cd16fd54d" testId="c4dc95ea-8491-9ee1-a641-918b4c2e825c" testName="ConvertAIS6_BitCharacterToASCII(&quot;27&quot;,&quot;'['&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3343318+02:00" endTime="2024-04-03T16:58:35.3345524+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="089ef525-adf0-44b9-b03d-2e6cd16fd54d">
      <Output>
        <StdOut>When I convert the AIS character value 27 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(27) (0,0s)&#xD;
Then the converted ASCII value should be '['&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe([) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="67ceb583-f40c-4a7f-bb8c-5fea69d29b87" testId="ca1cc6d5-b6de-95ce-4799-464d81e5c7be" testName="CourseOverGround(&quot;C000000000000000000040000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005199" startTime="2024-04-03T16:58:35.0812268+02:00" endTime="2024-04-03T16:58:35.0817465+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="67ceb583-f40c-4a7f-bb8c-5fea69d29b87">
      <Output>
        <StdOut>When I parse 'C000000000000000000040000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a6a0f28c-55d6-4467-b2ce-a5e5b565297f" testId="45147d28-5223-17c0-ea05-046316f12876" testName="ManoeuvreIndicator(&quot;13n@kJ0000PIk0@Sc2==PDQd`53L&quot;,&quot;0&quot;,&quot;NoSpecialManoeuvre&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005220" startTime="2024-04-03T16:58:34.9658155+02:00" endTime="2024-04-03T16:58:34.9663371+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a6a0f28c-55d6-4467-b2ce-a5e5b565297f">
      <Output>
        <StdOut>When I parse '13n@kJ0000PIk0@Sc2==PDQd`53L' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13n@kJ0000PIk0@Sc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NoSpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NoSpecialManoeuvre) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a1cd850a-2f04-4678-8664-85c73bbecfff" testId="dfc473d2-9790-122a-6e9f-6f9fb0a017e4" testName="ETAMinute(&quot;500000000000000000000000000000000000000000000000:0000000000000000000000&quot;,&quot;2&quot;,&quot;10&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.2095212+02:00" endTime="2024-04-03T16:58:35.2099208+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a1cd850a-2f04-4678-8664-85c73bbecfff">
      <Output>
        <StdOut>When I parse '500000000000000000000000000000000000000000000000:0000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 10&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(10) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c16166e6-f86f-44df-9bee-bc8da9f49723" testId="3e0abd77-4152-a942-c224-003087419233" testName="MMSI(&quot;B00000P000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:35.0511324+02:00" endTime="2024-04-03T16:58:35.0514711+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c16166e6-f86f-44df-9bee-bc8da9f49723">
      <Output>
        <StdOut>When I parse 'B00000P000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000P0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6f38f540-4e58-4017-9e7a-bbfb4ddff8a0" testId="328553af-4061-64e4-0c38-5993242e9563" testName="ShipType(&quot;C0000000000000000000000000000000000000000000:P000000&quot;,&quot;0&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006620" startTime="2024-04-03T16:58:35.1224740+02:00" endTime="2024-04-03T16:58:35.1231361+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6f38f540-4e58-4017-9e7a-bbfb4ddff8a0">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000:P000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.ShipType is WingInGroundHazardousCategoryA&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_ShipTypeIs(WingInGroundHazar...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2e38b279-eb73-49f8-ab7e-c3c58f533b66" testId="b8992405-f960-0387-8c6c-a5bd8a30f5c1" testName="PartAName(&quot;H00000300000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003740" startTime="2024-04-03T16:58:35.2587168+02:00" endTime="2024-04-03T16:58:35.2590905+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2e38b279-eb73-49f8-ab7e-c3c58f533b66">
      <Output>
        <StdOut>When I parse 'H00000300000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000030000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is 0@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("0@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="07705f98-22ed-4ab0-bd28-911772c7126b" testId="ade64053-e0b2-d3a3-9c98-8d8104dee21c" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;11&quot;,&quot;55&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3785222+02:00" endTime="2024-04-03T16:58:35.3788218+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="07705f98-22ed-4ab0-bd28-911772c7126b">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 11&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 11) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="98e72a32-f297-4593-ba21-f3b43c2d49c5" testId="5631ac32-5d4d-8b55-1186-f0c8e79c1039" testName="PartBVendorIDITU_R1371_4(&quot;H0000040Q0000000000000000000&quot;,&quot;0&quot;,&quot;!@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004480" startTime="2024-04-03T16:58:35.3162703+02:00" endTime="2024-04-03T16:58:35.3167187+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="98e72a32-f297-4593-ba21-f3b43c2d49c5">
      <Output>
        <StdOut>When I parse 'H0000040Q0000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040Q00000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is !@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("!@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a7727ff4-2241-4953-a8ef-609e228991f3" testId="0e193da8-f513-fe5b-6683-986a53d5a600" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;10&quot;,&quot;59&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3782103+02:00" endTime="2024-04-03T16:58:35.3785097+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a7727ff4-2241-4953-a8ef-609e228991f3">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 10&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 10) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(59) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f026340f-ea54-40cf-abc7-7c9b87f9a88e" testId="73878df9-fe25-07f0-683c-760b6002cb56" testName="Destination(&quot;50000000000000000000000000000000000000000000000000&lt;00000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005500" startTime="2024-04-03T16:58:35.1739535+02:00" endTime="2024-04-03T16:58:35.1745039+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f026340f-ea54-40cf-abc7-7c9b87f9a88e">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000&lt;00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is 0@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("0@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4f519fd9-6a65-481c-a7fe-ed16bba79b37" testId="69a52391-7984-d589-1a5c-55989b0fa8d8" testName="RepeatIndicator(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004340" startTime="2024-04-03T16:58:35.2349421+02:00" endTime="2024-04-03T16:58:35.2353764+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4f519fd9-6a65-481c-a7fe-ed16bba79b37">
      <Output>
        <StdOut>When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6f42f87-b46b-4404-ad59-ddbe0688617e" testId="05b162b6-0513-a4c2-c5f5-bbeb05f0bd0d" testName="ConvertAIS6_BitCharacterToASCII(&quot;17&quot;,&quot;'Q'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002210" startTime="2024-04-03T16:58:35.3319902+02:00" endTime="2024-04-03T16:58:35.3322111+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6f42f87-b46b-4404-ad59-ddbe0688617e">
      <Output>
        <StdOut>When I convert the AIS character value 17 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(17) (0,0s)&#xD;
Then the converted ASCII value should be 'Q'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(Q) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4512b8b4-487f-47f2-a4d5-7b57d8ebe2b5" testId="2391bf4a-d116-4eb9-46c6-90f3fac542f3" testName="TimeStamp(&quot;C0000000000000000000000P0000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005180" startTime="2024-04-03T16:58:35.1295376+02:00" endTime="2024-04-03T16:58:35.1300552+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4512b8b4-487f-47f2-a4d5-7b57d8ebe2b5">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000P0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TimeStampSecondIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3dd8bf00-0f5c-4b55-9c7e-5dcf5b9b35c3" testId="6be46e58-c170-5d86-9f80-e66c6f561ea7" testName="ETADay(&quot;50000000000000000000000000000000000000000000002000000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.1993755+02:00" endTime="2024-04-03T16:58:35.1997707+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3dd8bf00-0f5c-4b55-9c7e-5dcf5b9b35c3">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000002000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 4&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aea38743-8ab7-4cda-8d94-61716a5389b4" testId="e7f7ee0b-3938-3ee5-ede0-d7640679835a" testName="PartAName(&quot;H00000100000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004970" startTime="2024-04-03T16:58:35.2582065+02:00" endTime="2024-04-03T16:58:35.2587031+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aea38743-8ab7-4cda-8d94-61716a5389b4">
      <Output>
        <StdOut>When I parse 'H00000100000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000010000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is P@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("P@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6cb6538-193d-4bbe-8358-e6279a04a33d" testId="aede5d77-2095-52bb-874b-38965070d284" testName="ETAHour(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;8&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.2063490+02:00" endTime="2024-04-03T16:58:35.2067415+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6cb6538-193d-4bbe-8358-e6279a04a33d">
      <Output>
        <StdOut>When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 8&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(8) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="03f1b56b-4c50-4326-8d57-83c56143d0cf" testId="8c70f165-7f29-08c3-7ce6-950772949299" testName="PartARepeatIndicator(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:35.2615564+02:00" endTime="2024-04-03T16:58:35.2620299+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="03f1b56b-4c50-4326-8d57-83c56143d0cf">
      <Output>
        <StdOut>When I parse 'H000000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a372b4ce-0c92-4895-9afe-87eb89b706fa" testId="9abfa4fa-0966-7acc-8fba-41269e486f0a" testName="VesselName(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;STEVNS BATTLER&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004210" startTime="2024-04-03T16:58:35.2442497+02:00" endTime="2024-04-03T16:58:35.2446709+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a372b4ce-0c92-4895-9afe-87eb89b706fa">
      <Output>
        <StdOut>When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is STEVNS BATTLER&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("STEVNS BATTLER") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c8c6e413-0556-4963-bac4-167f9a26eea4" testId="c1cc4239-760c-473e-b0c2-75fdf0e4736b" testName="AssignedFlag(&quot;C00000000000000000000000000000000000000000000000000@&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0006950" startTime="2024-04-03T16:58:35.0795429+02:00" endTime="2024-04-03T16:58:35.0802380+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c8c6e413-0556-4963-bac4-167f9a26eea4">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000000000@' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.IsAssigned is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_IsAssigned(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="804793f8-676f-4d59-b7db-8aae4857a9b4" testId="a4193d59-1aa0-0143-e9bf-4542f385da99" testName="PeekMessageTypeWithoutDecodingInFull(&quot;3000000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002390" startTime="2024-04-03T16:58:35.5621666+02:00" endTime="2024-04-03T16:58:35.5624059+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="804793f8-676f-4d59-b7db-8aae4857a9b4">
      <Output>
        <StdOut>When I peek at the payload '3000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("30000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 3&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9737be4c-8d19-4fcd-a629-974e916c99fe" testId="0679c05f-ad28-32ec-fb44-20ec880c7756" testName="PartBDimensionToPort(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003289" startTime="2024-04-03T16:58:35.2826167+02:00" endTime="2024-04-03T16:58:35.2829457+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9737be4c-8d19-4fcd-a629-974e916c99fe">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b818f708-d048-4738-8a3c-c636ec36f26a" testId="e2df7a59-6731-77b9-a220-912f28558581" testName="InterleavedSingleAndMulti_FragmentMessages" computerName="SCODE-HF8MJR2" duration="00:00:00.0056360" startTime="2024-04-03T16:58:35.3969288+02:00" endTime="2024-04-03T16:58:35.4025651+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b818f708-d048-4738-8a3c-c636ec36f26a">
      <Output>
        <StdOut>Given I have configured a MaximumUnmatchedFragmentAge of 10&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.GivenIHaveConfiguredAMaximumUnmatchedFragmentAgeOf(10) (0,0s)&#xD;
When the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:3,c:1567692251...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:24,c:156769287...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:67,c:1567693000*34\!AIVDM,1,1,,,3CnWHf50000ga40TCHE0D0@R003B,0*4B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:67,c:156769300...") (0,0s)&#xD;
And the line to message adapter receives '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:772,c:15676932...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:722,c:1567693372*04\!AIVDM,1,1,,A,13m63A?P00P`@GFTK3s&gt;4?wR20Sf,0*71'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:722,c:15676933...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:808,c:1567693618*0A\!AIVDM,1,1,,B,B3o8B&lt;00F8:0h694gOtbgwqUoP06,0*73'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:808,c:15676936...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 10 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(10) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 42) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567684904) (0,0s)&#xD;
And in ais message 2 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the source from the first NMEA line should be 3&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(2, 3) (0,0s)&#xD;
And in ais message 2 the timestamp from the first NMEA line should be 1567692251&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(2, 1567692251) (0,0s)&#xD;
And in ais message 3 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the source from the first NMEA line should be 24&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(3, 24) (0,0s)&#xD;
And in ais message 3 the timestamp from the first NMEA line should be 1567692878&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(3, 1567692878) (0,0s)&#xD;
And in ais message 4 the payload should be '3CnWHf50000ga40TCHE0D0@R003B' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(4, "3CnWHf50000ga40TC...", 0) (0,0s)&#xD;
And in ais message 4 the source from the first NMEA line should be 67&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(4, 67) (0,0s)&#xD;
And in ais message 4 the timestamp from the first NMEA line should be 1567693000&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(4, 1567693000) (0,0s)&#xD;
And in ais message 5 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(5, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And in ais message 5 the source from the first NMEA line should be 772&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(5, 772) (0,0s)&#xD;
And in ais message 5 the timestamp from the first NMEA line should be 1567693246&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(5, 1567693246) (0,0s)&#xD;
And in ais message 6 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(6, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 6 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(6, 99) (0,0s)&#xD;
And in ais message 6 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(6, 1567685556) (0,0s)&#xD;
And in ais message 7 the payload should be '13m63A?P00P`@GFTK3s&gt;4?wR20Sf' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(7, "13m63A?P00P`@GFTK...", 0) (0,0s)&#xD;
And in ais message 7 the source from the first NMEA line should be 722&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(7, 722) (0,0s)&#xD;
And in ais message 7 the timestamp from the first NMEA line should be 1567693372&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(7, 1567693372) (0,0s)&#xD;
And in ais message 8 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(8, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 8 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(8, 27) (0,0s)&#xD;
And in ais message 8 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(8, 1567686150) (0,0s)&#xD;
And in ais message 9 the payload should be 'B3o8B&lt;00F8:0h694gOtbgwqUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(9, "B3o8B&lt;00F8:0h694g...", 0) (0,0s)&#xD;
And in ais message 9 the source from the first NMEA line should be 808&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(9, 808) (0,0s)&#xD;
And in ais message 9 the timestamp from the first NMEA line should be 1567693618&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(9, 1567693618) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eaaa9578-8e6b-4b0d-8b87-7ef14b7ceb6e" testId="e0c3c976-0fd6-a531-96df-9b28664877ba" testName="RegionalReservedBits38_45(&quot;B00000?t00000000000000000000&quot;,&quot;0&quot;,&quot;255&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:35.0643203+02:00" endTime="2024-04-03T16:58:35.0646661+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eaaa9578-8e6b-4b0d-8b87-7ef14b7ceb6e">
      <Output>
        <StdOut>When I parse 'B00000?t00000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000?t000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 255&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(255) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="43ed0eff-c492-4175-9451-d90be134ea45" testId="f2fd8f20-bb30-555a-b394-2f4330258aa6" testName="MultipleLFBlankLinesOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0025020" startTime="2024-04-03T16:58:35.5274033+02:00" endTime="2024-04-03T16:58:35.5299048+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="43ed0eff-c492-4175-9451-d90be134ea45">
      <Output>
        <StdOut>Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c2942bd8-8f78-46e3-846e-1a51f7236940" testId="a684207d-6916-af8f-2310-6018fac5d443" testName="PartBVendorIDITU_R1371_3(&quot;H0000040QPPPPPP0000000000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:35.3139937+02:00" endTime="2024-04-03T16:58:35.3143292+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c2942bd8-8f78-46e3-846e-1a51f7236940">
      <Output>
        <StdOut>When I parse 'H0000040QPPPPPP0000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040QPPPPPP00...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is !&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("!") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e10a4076-ef6e-407c-bd0d-daf2728bcdc8" testId="61079c10-1e66-7a51-b44f-f81fba0c2f8e" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;14&quot;,&quot;62&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3791433+02:00" endTime="2024-04-03T16:58:35.3794428+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e10a4076-ef6e-407c-bd0d-daf2728bcdc8">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 14&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 14) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 62&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(62) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="52d5363c-267b-4051-bf7d-cd50ef86b065" testId="6134dbac-1e64-cb59-e280-d1c8c56cd72b" testName="ConvertAIS6_BitCharacterToASCII(&quot;23&quot;,&quot;'W'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002260" startTime="2024-04-03T16:58:35.3333889+02:00" endTime="2024-04-03T16:58:35.3336145+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="52d5363c-267b-4051-bf7d-cd50ef86b065">
      <Output>
        <StdOut>When I convert the AIS character value 23 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(23) (0,0s)&#xD;
Then the converted ASCII value should be 'W'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(W) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="83f802f6-853f-4dbf-b6da-29a1ab49f722" testId="e3774045-3f96-cb80-56d7-1af371ee4f2f" testName="VesselName(&quot;50000000000000000000000000000000000000400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004200" startTime="2024-04-03T16:58:35.2438168+02:00" endTime="2024-04-03T16:58:35.2442371+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="83f802f6-853f-4dbf-b6da-29a1ab49f722">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000400000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is @@@@@@@@@@@@@@@@@@@A&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("@@@@@@@@@@@@@@@@@@@A") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8f15fda0-e438-4e19-a338-f5d6dfa86ccd" testId="3ddc396e-9c48-d3e0-9b59-9cbded94a347" testName="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000120000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;33&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003030" startTime="2024-04-03T16:58:35.3707797+02:00" endTime="2024-04-03T16:58:35.3710828+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8f15fda0-e438-4e19-a338-f5d6dfa86ccd">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000000000000000000000120000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 33&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(33) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ff66941e-54fa-45e6-9bb8-fa8c218dbd5a" testId="3f208dc4-93b2-3998-6ffe-e403c2dfe9a7" testName="RepeatIndicator(&quot;B@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008360" startTime="2024-04-03T16:58:35.0660279+02:00" endTime="2024-04-03T16:58:35.0668634+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ff66941e-54fa-45e6-9bb8-fa8c218dbd5a">
      <Output>
        <StdOut>When I parse 'B@00000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B@000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="21ac0972-8811-4cce-8fab-fe37bb7b8a33" testId="63f5b22f-c1e1-7d33-3341-e96a68b4a065" testName="NavigationStatus(&quot;100000?000000000000000000000&quot;,&quot;0&quot;,&quot;NotDefined&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:34.9792231+02:00" endTime="2024-04-03T16:58:34.9795677+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="21ac0972-8811-4cce-8fab-fe37bb7b8a33">
      <Output>
        <StdOut>When I parse '100000?000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000?0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotDefined&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotDefined) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b9f5bb14-7778-43ea-a440-e4d1d0f2102c" testId="69bd1461-43f3-90c2-894e-c7fa62d5743f" testName="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000040000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004430" startTime="2024-04-03T16:58:35.3697037+02:00" endTime="2024-04-03T16:58:35.3701463+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b9f5bb14-7778-43ea-a440-e4d1d0f2102c">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000000000000000000000040000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf73c75f-8e4b-4cae-b4b5-dbe6da949084" testId="1c551731-8bc4-c7cc-c6f6-6fe822e92e28" testName="RadioSyncState(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;UtcDirect&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003680" startTime="2024-04-03T16:58:34.9979912+02:00" endTime="2024-04-03T16:58:34.9983593+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf73c75f-8e4b-4cae-b4b5-dbe6da949084">
      <Output>
        <StdOut>When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcDirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcDirect) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ff2f0970-fc54-45e3-9365-b391a9ad892e" testId="dec34cec-12cb-d29e-5e83-99010d804453" testName="Spare(&quot;C00000000000000000000000000000000000000000000000000&gt;&quot;,&quot;0&quot;,&quot;14&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003869" startTime="2024-04-03T16:58:35.1258662+02:00" endTime="2024-04-03T16:58:35.1262529+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ff2f0970-fc54-45e3-9365-b391a9ad892e">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000000000&gt;' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 14&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(14) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="32f01efc-33af-4411-afc9-a2951be40d1d" testId="b9ac81f8-e330-8f54-8c91-c6de096f0682" testName="Spare(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009440" startTime="2024-04-03T16:58:35.1231716+02:00" endTime="2024-04-03T16:58:35.1241150+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="32f01efc-33af-4411-afc9-a2951be40d1d">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="073eb842-d4c6-4648-8c5d-18cc893961db" testId="83a00785-11d4-f91a-fb8a-8ef30c91d13c" testName="AISTalkerId(&quot;SAVDM&quot;,&quot;PhysicalShoreStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002250" startTime="2024-04-03T16:58:35.5710514+02:00" endTime="2024-04-03T16:58:35.5712762+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="073eb842-d4c6-4648-8c5d-18cc893961db">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'SAVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("SAVDM") (0,0s)&#xD;
Then the AisTalker is 'PhysicalShoreStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(PhysicalShoreStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="da06e79e-83c3-41a8-912b-f15ff1da4710" testId="674a2039-9e30-0e88-bd6b-59eae87d2ee0" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;4&quot;,&quot;29&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002970" startTime="2024-04-03T16:58:35.3757445+02:00" endTime="2024-04-03T16:58:35.3760417+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="da06e79e-83c3-41a8-912b-f15ff1da4710">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 29&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(29) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1e6e2b3b-8f0f-491b-9225-d80ac223f35e" testId="08fd8447-b106-9d22-9742-c9fe6cd3a2f4" testName="AISVersion(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.1684869+02:00" endTime="2024-04-03T16:58:35.1688839+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1e6e2b3b-8f0f-491b-9225-d80ac223f35e">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b390d7c4-f775-4961-97b6-a7e756946b6c" testId="dc8bd6fa-53ee-0563-8572-adc5f47cf5aa" testName="PartBSpare(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009110" startTime="2024-04-03T16:58:35.3072541+02:00" endTime="2024-04-03T16:58:35.3081650+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b390d7c4-f775-4961-97b6-a7e756946b6c">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Spare is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SpareIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3ead2af9-3d67-434e-ae9b-aeeefe80aa9f" testId="74b131ad-7f18-876c-b22b-a6081f2694a3" testName="FullMessage(&quot;A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,&quot;0&quot;,&quot;9&quot;,&quot;524&quot;,&quot;4832&quot;,&quot;5&quot;,&quot;4&quot;,&quot;0&quot;,&quot;1572403,342810,16584196,567978&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011199" startTime="2024-04-03T16:58:34.9111663+02:00" endTime="2024-04-03T16:58:34.9122862+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ead2af9-3d67-434e-ae9b-aeeefe80aa9f">
      <Output>
        <StdOut>When I parse 'A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb' with padding 0 as a Differential Correction Data&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.WhenIParseWithNmeaAisDifferentialCorrectionDataParser("A028jQ02QLfep2H&lt;U...", 0) (0,0s)&#xD;
Then NmeaAisDifferentialCorrectionDataParser.MessageType is 9&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Station is 524&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_StationIs(524) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.ZCount is 4832&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_ZCountIs(4832) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.SequenceNumber is 5&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_SequenceNumberIs(5) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.DgnssDataWordCount is 4&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_DgnssDataWordCountIs(4) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Health is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_HealthIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.WriteDgnssDataWord is 1572403,342810,16584196,567978&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_Is(System.UInt32[]) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ecc3c77e-b5cb-4502-912f-3e782ce24db8" testId="25eea7e8-7e85-5442-338a-e6db5aaf5b9f" testName="PartBVendorIDITU_R1371_4(&quot;H0000040QPP00000000000000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003240" startTime="2024-04-03T16:58:35.3167324+02:00" endTime="2024-04-03T16:58:35.3170565+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ecc3c77e-b5cb-4502-912f-3e782ce24db8">
      <Output>
        <StdOut>When I parse 'H0000040QPP00000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040QPP000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is !&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("!") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aa2d86b8-f392-48bc-a7d9-1a3ad922d186" testId="d4efc13a-bec2-6a4b-8772-f5444865c444" testName="FirstFragmentOfTwo_PartMessageWithoutGroupingInHeaderReceived" computerName="SCODE-HF8MJR2" duration="00:00:00.0008100" startTime="2024-04-03T16:58:35.3893300+02:00" endTime="2024-04-03T16:58:35.3901401+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aa2d86b8-f392-48bc-a7d9-1a3ad922d186">
      <Output>
        <StdOut>When the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 54</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0cf76986-9cb6-44e6-ab20-762e3bee231f" testId="3e9548bc-c9d4-3bd3-145f-680c5b777cd1" testName="PartBRepeatIndicator(&quot;H@00004000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004690" startTime="2024-04-03T16:58:35.2950770+02:00" endTime="2024-04-03T16:58:35.2955460+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0cf76986-9cb6-44e6-ab20-762e3bee231f">
      <Output>
        <StdOut>When I parse 'H@00004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H@000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="785f41ce-958f-4e19-8a9b-c2be1540a8b7" testId="108ad442-1083-a607-e794-889b6697f857" testName="RadioSubMessage(&quot;10000000000000000000000003ww&quot;,&quot;0&quot;,&quot;16383&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:34.9945750+02:00" endTime="2024-04-03T16:58:34.9949229+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="785f41ce-958f-4e19-8a9b-c2be1540a8b7">
      <Output>
        <StdOut>When I parse '10000000000000000000000003ww' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 16383&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(16383) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fc652f01-6fe0-4825-a5f8-be4074e239ae" testId="d6564536-1588-767b-392e-af461babdfd8" testName="FullMessage(&quot;FM5293Ppsrh1S?SmKP0&gt;0BOkJ0t0&quot;,&quot;0&quot;,&quot;22&quot;,&quot;1&quot;,&quot;877693198&quot;,&quot;0&quot;,&quot;910&quot;,&quot;4012&quot;,&quot;0&quot;,&quot;false&quot;,&quot;50812&quot;,&quot;62830&quot;,&quot;56&quot;,&quot;2367&quot;,&quot;1&quot;,&quot;false&quot;,&quot;false&quot;,&quot;6&quot;,&quot;6819584&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0028890" startTime="2024-04-03T16:58:34.8529625+02:00" endTime="2024-04-03T16:58:34.8558517+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fc652f01-6fe0-4825-a5f8-be4074e239ae">
      <Output>
        <StdOut>When I parse 'FM5293Ppsrh1S?SmKP0&gt;0BOkJ0t0' with padding 0 as a Channel management&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.WhenIParseWithNmeaAisChannelManagementParser("FM5293Ppsrh1S?SmK...", 0) (0,0s)&#xD;
Then NmeaAisChannelManagementParser.Type is 22&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TypeIs(ChannelManagement) (0,0s)&#xD;
And NmeaAisChannelManagementParser.RepeatIndicator is 1&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_RepeatIndicatorIs(1) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Mmsi is 877693198&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MmsiIs(877693198) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits38 is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelA is 910&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelAIs(910) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelB is 4012&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBIs(4012) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TxRxMode is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TxRxModeIs(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.LowPower is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_LowPowerIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins1 is 50812&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins1Is(50812) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins1 is 62830&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins1Is(62830) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins2 is 56&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins2Is(56) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins2 is 2367&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins2Is(2367) (0,0s)&#xD;
And NmeaAisChannelManagementParser.MessageIndicator is 1&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MessageIndicatorIs(Addressed) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelABandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelABandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelBBandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBBandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TransitionalZoneSize is 6&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TransitionalZoneSizeIs(6) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits145 is 6819584&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits145Is(6819584) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cfd5bbbb-68eb-4c45-a6b6-db82e5175f80" testId="23665826-5b54-b176-1a28-171a18d761a7" testName="SpareBitsAt145(&quot;100000000000000000000000D000&quot;,&quot;0&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0125937+02:00" endTime="2024-04-03T16:58:35.0129368+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cfd5bbbb-68eb-4c45-a6b6-db82e5175f80">
      <Output>
        <StdOut>When I parse '100000000000000000000000D000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6c41b5f-f1a0-41f6-94e4-848009eb0dbb" testId="9eee4542-8284-0d0c-a7cb-35b376e5ae4f" testName="RepeatIndicator(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011379" startTime="2024-04-03T16:58:35.1187838+02:00" endTime="2024-04-03T16:58:35.1199215+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6c41b5f-f1a0-41f6-94e4-848009eb0dbb">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7b3928d9-0f91-481a-a408-1911b8764ad3" testId="9573f45c-a243-c326-3db5-40b1671510b0" testName="LongitudeAndLatitude(&quot;B0000000000000Owwwt000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004630" startTime="2024-04-03T16:58:35.0455528+02:00" endTime="2024-04-03T16:58:35.0460160+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b3928d9-0f91-481a-a408-1911b8764ad3">
      <Output>
        <StdOut>When I parse 'B0000000000000Owwwt000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000Oww...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(-1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a87f577b-b362-46d4-9577-958f9312495a" testId="a9720abd-8c66-4581-9c43-32aa0c4ade3a" testName="NavigationStatus(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;AtAnchor&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:34.9799277+02:00" endTime="2024-04-03T16:58:34.9802672+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a87f577b-b362-46d4-9577-958f9312495a">
      <Output>
        <StdOut>When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is AtAnchor&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(AtAnchor) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f2447020-88ba-4cb4-ad6a-dd100dfc9181" testId="d73da228-b736-c506-4b90-2c56e181e7c5" testName="Draught(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;15&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1936766+02:00" endTime="2024-04-03T16:58:35.1940749+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f2447020-88ba-4cb4-ad6a-dd100dfc9181">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 15&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(15) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1192d105-91c6-4090-bdfb-7e7c31d19b53" testId="e1330fba-e1ca-6d45-259c-265b4255d5ba" testName="DimensionToStarboard(&quot;C0000000000000000000000000000000000000000000000000P0&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005180" startTime="2024-04-03T16:58:35.0889560+02:00" endTime="2024-04-03T16:58:35.0894738+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1192d105-91c6-4090-bdfb-7e7c31d19b53">
      <Output>
        <StdOut>When I parse 'C0000000000000000000000000000000000000000000000000P0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStarboard is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToStarboardIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5be810de-8897-4f0f-8ce6-4a389d8a4945" testId="00184939-9091-f4e7-f8ff-d32cfd1fa0d8" testName="RepeatIndicator(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004050" startTime="2024-04-03T16:58:35.2344862+02:00" endTime="2024-04-03T16:58:35.2348908+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5be810de-8897-4f0f-8ce6-4a389d8a4945">
      <Output>
        <StdOut>When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="87db8223-c1dd-4fce-8bbd-19d1672cb56d" testId="505d964f-380e-e2b3-7264-be63f7f44c3e" testName="PeekMessageTypeWithoutDecodingInFull(&quot;B3o8B&lt;00F8:0h694gOtbgwqUoP06&quot;,&quot;0&quot;,&quot;18&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002360" startTime="2024-04-03T16:58:35.5634001+02:00" endTime="2024-04-03T16:58:35.5636362+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="87db8223-c1dd-4fce-8bbd-19d1672cb56d">
      <Output>
        <StdOut>When I peek at the payload 'B3o8B&lt;00F8:0h694gOtbgwqUoP06' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("B3o8B&lt;00F8:0h694g...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 18&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(18) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66a599d7-0010-4799-9fd3-36f2d18889ed" testId="9871e5b8-1181-6683-ecd1-13364afde5e0" testName="PartBCallSign(&quot;H00000400000000QPPPPPP000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003520" startTime="2024-04-03T16:58:35.2691569+02:00" endTime="2024-04-03T16:58:35.2695086+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66a599d7-0010-4799-9fd3-36f2d18889ed">
      <Output>
        <StdOut>When I parse 'H00000400000000QPPPPPP000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000400000000QP...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is !&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("!") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="45e72812-4dc9-4d6d-bc24-c9f5fbe764ce" testId="66dd722f-a0ed-5b85-3dd5-406e16bf25fc" testName="Signed8_BitInteger(&quot;00000001@0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003020" startTime="2024-04-03T16:58:35.3497109+02:00" endTime="2024-04-03T16:58:35.3500125+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="45e72812-4dc9-4d6d-bc24-c9f5fbe764ce">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000001@0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000001@00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ce1c94e0-4193-45ce-9282-456deeb9f576" testId="c7f54bf3-60c4-dc88-f50d-b2544a8110c7" testName="MMSI(&quot;K00000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005220" startTime="2024-04-03T16:58:34.8641218+02:00" endTime="2024-04-03T16:58:34.8646436+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ce1c94e0-4193-45ce-9282-456deeb9f576">
      <Output>
        <StdOut>When I parse 'K00000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("K00000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c0f992c3-3295-46bf-b358-0d4aeeac67c8" testId="81f09891-d621-cffd-cfb3-4bf3e737a18e" testName="ConvertAIS6_BitCharacterToASCII(&quot;39&quot;,&quot;'''&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003730" startTime="2024-04-03T16:58:35.3378146+02:00" endTime="2024-04-03T16:58:35.3381870+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0f992c3-3295-46bf-b358-0d4aeeac67c8">
      <Output>
        <StdOut>When I convert the AIS character value 39 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(39) (0,0s)&#xD;
Then the converted ASCII value should be '''&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(') (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d75f7a26-fe6f-41bc-8839-80ecd963a0d5" testId="bfa23b9b-f329-c854-571b-2c0a6dda82fd" testName="PartBSerialNumber(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0011460" startTime="2024-04-03T16:58:35.2966455+02:00" endTime="2024-04-03T16:58:35.2977912+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d75f7a26-fe6f-41bc-8839-80ecd963a0d5">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="759625d9-c944-4683-8d36-12ce113bdf82" testId="57dbe557-f257-4c9f-cd16-7068945dfe64" testName="PartBDimensionToStarboard(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009070" startTime="2024-04-03T16:58:35.2829732+02:00" endTime="2024-04-03T16:58:35.2838806+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="759625d9-c944-4683-8d36-12ce113bdf82">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="81b0cdcb-52c4-4613-8073-a8637ed8af91" testId="84aa8b3c-e0d9-3874-ab3d-6d47574a9a64" testName="DimensionToPort(&quot;50000000000000000000000000000000000000000001000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005260" startTime="2024-04-03T16:58:35.1808232+02:00" endTime="2024-04-03T16:58:35.1813490+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="81b0cdcb-52c4-4613-8073-a8637ed8af91">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000001000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c1cb14fe-c10f-4da2-9043-50fa85234579" testId="27e5818b-c211-b307-55d5-e9e4ee43fa5b" testName="ETADay(&quot;5000000000000000000000000000000000000000000000?P00000000000000000000000&quot;,&quot;2&quot;,&quot;31&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003920" startTime="2024-04-03T16:58:35.2009953+02:00" endTime="2024-04-03T16:58:35.2013868+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c1cb14fe-c10f-4da2-9043-50fa85234579">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000?P00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 31&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(31) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2f027c84-a194-4035-a10b-8dc6254cc72d" testId="f4359848-50f9-dd13-5a20-37a03dd5d2e2" testName="PartBCallSign(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;LJVK@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003450" startTime="2024-04-03T16:58:35.2698842+02:00" endTime="2024-04-03T16:58:35.2702292+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2f027c84-a194-4035-a10b-8dc6254cc72d">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is LJVK@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("LJVK@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="97b4d8ea-5ff2-485c-8c03-fe2d1475973d" testId="314a4f8a-8ddb-5592-c09d-aad4665d90ab" testName="AISTalkerId(&quot;ABVDM&quot;,&quot;BaseStation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009280" startTime="2024-04-03T16:58:35.5679616+02:00" endTime="2024-04-03T16:58:35.5688900+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="97b4d8ea-5ff2-485c-8c03-fe2d1475973d">
      <Output>
        <StdOut>When I parse a message with a packet tag field of 'ABVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ABVDM") (0,0s)&#xD;
Then the AisTalker is 'BaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(BaseStation) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="38247c2a-7056-40da-bca9-f870bca2205a" testId="2e5a7aab-46ce-cefd-4367-d527b7469ca5" testName="MMSI(&quot;1&gt;eq`d@000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003600" startTime="2024-04-03T16:58:34.9699573+02:00" endTime="2024-04-03T16:58:34.9703170+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="38247c2a-7056-40da-bca9-f870bca2205a">
      <Output>
        <StdOut>When I parse '1&gt;eq`d@000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '987654321'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(987654321) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bb4a456d-65e4-45e6-8aae-475f47836450" testId="1a811642-3dcc-43cb-8a91-43083c1eb5af" testName="ConvertAIS6_BitCharacterToASCII(&quot;44&quot;,&quot;','&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002250" startTime="2024-04-03T16:58:35.3409003+02:00" endTime="2024-04-03T16:58:35.3411254+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bb4a456d-65e4-45e6-8aae-475f47836450">
      <Output>
        <StdOut>When I convert the AIS character value 44 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(44) (0,0s)&#xD;
Then the converted ASCII value should be ','&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(,) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cd5b4329-5681-4c5a-afc3-e4c6bd808b3e" testId="d9b9a2f9-d619-6d7d-4662-c020e28d506a" testName="Name(&quot;C000000000000000000000002000000000000000000000000000&quot;,&quot;0&quot;,&quot;A@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005430" startTime="2024-04-03T16:58:35.1015944+02:00" endTime="2024-04-03T16:58:35.1021373+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cd5b4329-5681-4c5a-afc3-e4c6bd808b3e">
      <Output>
        <StdOut>When I parse 'C000000000000000000000002000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is 'A@@@@@@@@@@@@@@@@@@@'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("A@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd70ca57-ba2f-40f8-a1b7-438836603a9a" testId="c36eba9d-af26-c6ba-a888-becc74d9511f" testName="SpareBitsAt145(&quot;100000000000000000000000@000&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003390" startTime="2024-04-03T16:58:35.0122459+02:00" endTime="2024-04-03T16:58:35.0125847+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd70ca57-ba2f-40f8-a1b7-438836603a9a">
      <Output>
        <StdOut>When I parse '100000000000000000000000@000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 4&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="082de1b8-11d8-46d3-9a01-442bf93e4e64" testId="42437387-d93f-3277-2912-7af75f380bd0" testName="PositionAccuracy(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009630" startTime="2024-04-03T16:58:35.1038931+02:00" endTime="2024-04-03T16:58:35.1048561+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="082de1b8-11d8-46d3-9a01-442bf93e4e64">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionAccuracyIs(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="609a4f6e-6589-443b-8bf3-1b743ad7921d" testId="f800f507-b0e1-50dc-446d-4fca2f94e592" testName="ETAMonth(&quot;5000000000000000000000000000000000000000000000P000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.2135091+02:00" endTime="2024-04-03T16:58:35.2139071+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="609a4f6e-6589-443b-8bf3-1b743ad7921d">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000P000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d318526-9e7a-4866-82fe-4d0d9028637b" testId="56e2ca14-659c-5639-9715-9f19a2efc652" testName="RepeatIndicator(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003440" startTime="2024-04-03T16:58:35.0675960+02:00" endTime="2024-04-03T16:58:35.0679403+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d318526-9e7a-4866-82fe-4d0d9028637b">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d9725221-831f-4362-92ad-f2552928feb8" testId="9a861f8d-2ac2-1344-a2c0-587977c5b8e7" testName="Name(&quot;C00000000000000000000000bdfhjlnprtw13579;=?A00000000&quot;,&quot;0&quot;,&quot;UVWXYZ[\\]^_ !\&quot;#$%&amp;'(&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004230" startTime="2024-04-03T16:58:35.1025818+02:00" endTime="2024-04-03T16:58:35.1030047+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d9725221-831f-4362-92ad-f2552928feb8">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000bdfhjlnprtw13579;=?A00000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is 'UVWXYZ[\]^_ !"#$%&amp;'('&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("UVWXYZ[\]^_ !"#$%&amp;'(") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8e0f445d-813c-4da7-bed2-404091a60138" testId="1efc7ad1-d30a-6229-a9d8-5442d6439277" testName="UnspecifiedStandardTagBlockWithGroup(&quot;1G2:7764,s:AIS,c:1706800480*33&quot;,&quot;AIS&quot;,&quot;1706800480&quot;,&quot;1&quot;,&quot;2&quot;,&quot;7764&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0007280" startTime="2024-04-03T16:58:35.5583979+02:00" endTime="2024-04-03T16:58:35.5591261+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8e0f445d-813c-4da7-bed2-404091a60138">
      <Output>
        <StdOut>When I parse 'g:1-2-7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("g:1-2-7764,s:AIS,...", False, Unspecified) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8ed4ef2a-bac6-480e-b2aa-0e84cab2578b" testId="1ff0a8ce-40d7-5b4f-907c-956bd16b6e23" testName="SpareBitsAt145(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003340" startTime="2024-04-03T16:58:35.0136332+02:00" endTime="2024-04-03T16:58:35.0139673+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8ed4ef2a-bac6-480e-b2aa-0e84cab2578b">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ae5ea1c1-2bd6-461c-a49e-49b88ed08395" testId="c1701f6b-b5f7-6323-8e44-da55a16f53e8" testName="MMSI(&quot;100000@000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004770" startTime="2024-04-03T16:58:34.9690986+02:00" endTime="2024-04-03T16:58:34.9695752+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae5ea1c1-2bd6-461c-a49e-49b88ed08395">
      <Output>
        <StdOut>When I parse '100000@000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '1'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9e427cfb-64e9-488c-ac95-68bd2017df25" testId="c4d5de09-f9e1-4b62-1f58-8fc3809a1d12" testName="CourseOverGround(&quot;C000000000000000003Pt0000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3599&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.0817602+02:00" endTime="2024-04-03T16:58:35.0821571+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9e427cfb-64e9-488c-ac95-68bd2017df25">
      <Output>
        <StdOut>When I parse 'C000000000000000003Pt0000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 3599&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(3599) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="52f221a4-44fc-4fae-bda4-e52336dee12f" testId="ab8fb1f5-9884-5e74-0e57-febba0b3f273" testName="MMSI(&quot;C00000P000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003890" startTime="2024-04-03T16:58:35.0996903+02:00" endTime="2024-04-03T16:58:35.1000789+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="52f221a4-44fc-4fae-bda4-e52336dee12f">
      <Output>
        <StdOut>When I parse 'C00000P000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000P0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e3a3ef24-48f8-4ec1-bc19-4faa7cc961c8" testId="e4bd6d87-cbfa-e535-2730-50f3e1d68da7" testName="DimensionToBow(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.1786111+02:00" endTime="2024-04-03T16:58:35.1790108+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e3a3ef24-48f8-4ec1-bc19-4faa7cc961c8">
      <Output>
        <StdOut>When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3e40e910-f013-4d21-ab71-7073dc519033" testId="83d26cf2-7b29-36a9-3ba4-4ed99c7f430f" testName="UnsignedAligned6_BitInteger(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004400" startTime="2024-04-03T16:58:35.3621825+02:00" endTime="2024-04-03T16:58:35.3626225+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3e40e910-f013-4d21-ab71-7073dc519033">
      <Output>
        <StdOut>Given an NMEA AIS payload of '13nW5&lt;00000IoPlSbE`:P8EH0534' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d34de024-e30b-4d65-95b9-15ef26e0cc6a" testId="9f0468c7-ecd4-cbe1-ff6d-0a7c418db9cf" testName="MultipleMixedBlankLinesOnly" computerName="SCODE-HF8MJR2" duration="00:00:00.0006730" startTime="2024-04-03T16:58:35.5377314+02:00" endTime="2024-04-03T16:58:35.5384047+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d34de024-e30b-4d65-95b9-15ef26e0cc6a">
      <Output>
        <StdOut>Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf3bd171-6096-471f-ae5b-6ce57784a288" testId="c37e1422-3dbd-d1a5-a331-1b8b0cbfd640" testName="LongitudeAndLatitute(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0014710" startTime="2024-04-03T16:58:35.0933703+02:00" endTime="2024-04-03T16:58:35.0948407+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf3bd171-6096-471f-ae5b-6ce57784a288">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c283d540-1f00-4d15-b404-e840a69081aa" testId="8a3e8abb-afad-23dd-2fb5-0e4c27fd5f01" testName="RepeatIndicator(&quot;C@00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005199" startTime="2024-04-03T16:58:35.1199318+02:00" endTime="2024-04-03T16:58:35.1204521+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c283d540-1f00-4d15-b404-e840a69081aa">
      <Output>
        <StdOut>When I parse 'C@00000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C@000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0e0175a-2583-41dc-8601-b1892510055a" testId="1099d86c-0f9c-edc3-889c-f9d51735be57" testName="ConvertAIS6_BitCharacterToASCII(&quot;14&quot;,&quot;'N'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002220" startTime="2024-04-03T16:58:35.3313047+02:00" endTime="2024-04-03T16:58:35.3315262+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0e0175a-2583-41dc-8601-b1892510055a">
      <Output>
        <StdOut>When I convert the AIS character value 14 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(14) (0,0s)&#xD;
Then the converted ASCII value should be 'N'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(N) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ae79789a-524f-4a30-bde3-6a9303b18e35" testId="4274ab3c-e0aa-6bb6-cc50-a605ccba2618" testName="PartAName(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;HEIDI ANITA@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003660" startTime="2024-04-03T16:58:35.2598694+02:00" endTime="2024-04-03T16:58:35.2602353+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ae79789a-524f-4a30-bde3-6a9303b18e35">
      <Output>
        <StdOut>When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is HEIDI ANITA@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("HEIDI ANITA@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6fccb6d4-9f4c-4381-9e4e-afc518695050" testId="777134f8-508c-26ca-e60a-1a9b11a7672c" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;9&quot;,&quot;61&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003070" startTime="2024-04-03T16:58:35.3778913+02:00" endTime="2024-04-03T16:58:35.3781981+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6fccb6d4-9f4c-4381-9e4e-afc518695050">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 9&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 9) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 61&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(61) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7b837e0e-f0d8-4755-a99b-b5ee28ce491c" testId="283ee842-4baa-9fde-148d-9efa193b3d0b" testName="FullMessage(&quot;6&gt;p?paQREindIt4&lt;&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;998504614&quot;,&quot;0&quot;,&quot;412469099&quot;,&quot;false&quot;,&quot;false&quot;,&quot;415&quot;,&quot;1&quot;,&quot;4&quot;,&quot;4&lt;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0015750" startTime="2024-04-03T16:58:34.7628341+02:00" endTime="2024-04-03T16:58:34.7644089+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b837e0e-f0d8-4755-a99b-b5ee28ce491c">
      <Output>
        <StdOut>When I parse '6&gt;p?paQREindIt4&lt;' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;p?paQREindIt4&lt;", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Mmsi is 998504614&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_MmsiIs(998504614) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DestinationMmsi is 412469099&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DestinationMmsiIs(412469099) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DAC is 415&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DACIs(415) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.FI is 1&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_FIIs(1) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationDataPadding is 4&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationData is 4&lt;&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataIs("4&lt;") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="41e94497-9542-4661-b182-7bcb852ee4a8" testId="81dd4e8b-6629-ac01-97f5-513accb067fa" testName="PartBDimensionToStarboard(&quot;H000004000000000000000000010&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004840" startTime="2024-04-03T16:58:35.2838940+02:00" endTime="2024-04-03T16:58:35.2843782+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="41e94497-9542-4661-b182-7bcb852ee4a8">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000010' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="285ecc79-072f-49dc-8e11-c364a06bb404" testId="36a24959-d963-38c7-9e41-615a77ffe4c5" testName="UnsignedAligned6_BitInteger(&quot;ABCA&quot;,&quot;0&quot;,&quot;18&quot;,&quot;17&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3679390+02:00" endTime="2024-04-03T16:58:35.3682366+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="285ecc79-072f-49dc-8e11-c364a06bb404">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABCA' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABCA", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(17) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="86cf0d85-6e77-463c-bef6-6f914a1bb6ce" testId="1cf779d5-84bd-b9ef-2695-58483d54d708" testName="PartBVendorIDITU_R1371_3(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008930" startTime="2024-04-03T16:58:35.3115298+02:00" endTime="2024-04-03T16:58:35.3124225+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="86cf0d85-6e77-463c-bef6-6f914a1bb6ce">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is @@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5a816b04-3251-4af5-9763-624ae018cb24" testId="98d00d21-bc84-f67f-930b-bec52c9a47c3" testName="RadioChannelCode(&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002320" startTime="2024-04-03T16:58:35.5849857+02:00" endTime="2024-04-03T16:58:35.5852173+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5a816b04-3251-4af5-9763-624ae018cb24">
      <Output>
        <StdOut>When I parse a message with a radio channel code of '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("1") (0,0s)&#xD;
Then the ChannelCode is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2dd4ee39-8a6a-4448-80df-fe443ca65646" testId="079e9c46-1fbf-487e-2a09-c2bd8760f074" testName="PeekMessageTypeWithoutDecodingInFull(&quot;53m8lk`00000hS;;SP0Hu&lt;p61HTdTpL00000000F0H&lt;654@pt0;@0000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002360" startTime="2024-04-03T16:58:35.5629121+02:00" endTime="2024-04-03T16:58:35.5631482+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2dd4ee39-8a6a-4448-80df-fe443ca65646">
      <Output>
        <StdOut>When I peek at the payload '53m8lk`00000hS;;SP0Hu&lt;p61HTdTpL00000000F0H&lt;654@pt0;@0000000000000000000' with padding of 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("53m8lk`00000hS;;S...", 2) (0,0s)&#xD;
Then the message type returned by peek should be 5&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="254a6d09-f086-4486-8100-24717129d458" testId="137dac6a-552a-ba9b-d8a1-a91407de4df6" testName="Spare(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009420" startTime="2024-04-03T16:58:35.2394894+02:00" endTime="2024-04-03T16:58:35.2404312+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="254a6d09-f086-4486-8100-24717129d458">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d72073ae-a156-42bf-bd29-d00bba8827b9" testId="8c8c9ac9-f81f-0e48-361e-1080707e9383" testName="TrueHeading(&quot;13B6BP80000jt=tPk:Isf:F@0538&quot;,&quot;0&quot;,&quot;331&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.0261861+02:00" endTime="2024-04-03T16:58:35.0265271+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d72073ae-a156-42bf-bd29-d00bba8827b9">
      <Output>
        <StdOut>When I parse '13B6BP80000jt=tPk:Isf:F@0538' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13B6BP80000jt=tPk...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 331&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(331) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="16d01876-b098-4828-a3f8-5e2b69f27fb9" testId="500c6590-975e-c2cd-8808-338636ab291b" testName="CallSign(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004030" startTime="2024-04-03T16:58:35.1725092+02:00" endTime="2024-04-03T16:58:35.1729124+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="16d01876-b098-4828-a3f8-5e2b69f27fb9">
      <Output>
        <StdOut>When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is @@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="aafc8f6b-5801-4066-9a23-137e0fdac589" testId="27f38577-4d20-3dd4-9995-5791bd9b5071" testName="RateOfTurn(&quot;1000000wh0000000000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004640" startTime="2024-04-03T16:58:35.0040562+02:00" endTime="2024-04-03T16:58:35.0045200+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="aafc8f6b-5801-4066-9a23-137e0fdac589">
      <Output>
        <StdOut>When I parse '1000000wh0000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000wh00000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is -1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(-1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3b6812f2-579c-4b77-bbe4-cb1310b068dc" testId="75ecbb0d-da94-a567-a7d8-fd22a5105604" testName="UnsignedMisaligned6_BitInteger(&quot;00000000000001000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;16&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002960" startTime="2024-04-03T16:58:35.3732782+02:00" endTime="2024-04-03T16:58:35.3735737+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3b6812f2-579c-4b77-bbe4-cb1310b068dc">
      <Output>
        <StdOut>Given an NMEA AIS payload of '00000000000001000000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000001000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 16&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(16) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="022752b7-e91e-4a04-a104-cc94926e5ab2" testId="22b86104-d709-ff83-0bf7-4dc280269aba" testName="PartBDimensionToPort(&quot;H000004000000000000000000w00&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003320" startTime="2024-04-03T16:58:35.2819271+02:00" endTime="2024-04-03T16:58:35.2822589+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="022752b7-e91e-4a04-a104-cc94926e5ab2">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000w00' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 63&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c5508f40-11f3-4497-a622-bce1d85b4602" testId="389bdfd8-3d3f-142c-3add-0f8f153be9bf" testName="RepeatIndicator(&quot;5h000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003970" startTime="2024-04-03T16:58:35.2336702+02:00" endTime="2024-04-03T16:58:35.2340667+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c5508f40-11f3-4497-a622-bce1d85b4602">
      <Output>
        <StdOut>When I parse '5h000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5h000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8317725f-bc0b-4c8c-8ba4-8e104593c74e" testId="96e2f0e6-d527-22c8-d250-fc0c272db0f4" testName="ConvertAIS6_BitCharacterToASCII(&quot;20&quot;,&quot;'T'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002220" startTime="2024-04-03T16:58:35.3326766+02:00" endTime="2024-04-03T16:58:35.3328980+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8317725f-bc0b-4c8c-8ba4-8e104593c74e">
      <Output>
        <StdOut>When I convert the AIS character value 20 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(20) (0,0s)&#xD;
Then the converted ASCII value should be 'T'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(T) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1e6a71c1-cd73-4295-8646-7b43d583ae6b" testId="275fa282-b410-4d0e-58a2-59a4c093a794" testName="RepeatIndicator(&quot;Bkm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;3&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.0686495+02:00" endTime="2024-04-03T16:58:35.0689892+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1e6a71c1-cd73-4295-8646-7b43d583ae6b">
      <Output>
        <StdOut>When I parse 'Bkm?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("Bkm?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c9761eec-99a6-4bb3-b5cf-d3e0517deee3" testId="cef52192-5b56-9ddb-0304-9ecf03dedc51" testName="UnsignedAligned6_BitInteger(&quot;ABCa&quot;,&quot;0&quot;,&quot;18&quot;,&quot;41&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002990" startTime="2024-04-03T16:58:35.3685550+02:00" endTime="2024-04-03T16:58:35.3688535+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c9761eec-99a6-4bb3-b5cf-d3e0517deee3">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'ABCa' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABCa", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 41&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(41) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="283136e4-c2e9-477a-ba5e-4f960f15a86b" testId="bb291040-a3a6-b647-9c9b-ee53c274c005" testName="CallSign(&quot;50000000000300000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004050" startTime="2024-04-03T16:58:35.1704366+02:00" endTime="2024-04-03T16:58:35.1708410+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="283136e4-c2e9-477a-ba5e-4f960f15a86b">
      <Output>
        <StdOut>When I parse '50000000000300000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000300000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is 0@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("0@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fd20f20b-3482-4fec-9b0d-896daeb5aa34" testId="deb0ac60-7db0-8081-4720-4dfc3b5ac1b2" testName="RegionalReservedBits139_140(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008980" startTime="2024-04-03T16:58:35.0600285+02:00" endTime="2024-04-03T16:58:35.0609265+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fd20f20b-3482-4fec-9b0d-896daeb5aa34">
      <Output>
        <StdOut>When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7d4affec-8e2d-42d4-b0fc-88b39954a9d5" testId="926cbab8-1a50-0934-3fdc-db09ce0f0a73" testName="FullMessage(&quot;E&gt;nRFnO77h0W1T7a9hFh84`2V4W@3AEb1fHgh00003aP11H0DQ@H&gt;@&quot;,&quot;0&quot;,&quot;21&quot;,&quot;0&quot;,&quot;996710105&quot;,&quot;30&quot;,&quot;NO ANCHORS - PIPELIN&quot;,&quot;true&quot;,&quot;857450&quot;,&quot;3617150&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;7&quot;,&quot;19&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;E AREA 9&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0039390" startTime="2024-04-03T16:58:34.7939384+02:00" endTime="2024-04-03T16:58:34.7978771+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7d4affec-8e2d-42d4-b0fc-88b39954a9d5">
      <Output>
        <StdOut>When I parse 'E&gt;nRFnO77h0W1T7a9hFh84`2V4W@3AEb1fHgh00003aP11H0DQ@H&gt;@' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("E&gt;nRFnO77h0W1T7a9...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Mmsi is 996710105&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_MmsiIs(996710105) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AidsToNavigationType is 30&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AidsToNavigationTypeIs(SpecialMark) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidsToNavigation is NO ANCHORS - PIPELIN&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidsToNavigationIs("NO ANCHORS - PIPELIN") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.PositionAccuracy is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Longitude10000thMins is 857450&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Longitude10000thMinsIs(857450) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Latitude10000thMins is 3617150&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Latitude10000thMinsIs(3617150) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionA is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionAIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionB is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionBIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionC is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionCIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionD is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionDIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.EpfdFixType is 7&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_EpfdFixTypeIs(Surveyed) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.TimeStampSecond is 19&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TimeStampSecondIs(19) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.OffPositionIndicator is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_OffPositionIndicatorIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AtoNStatus is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AtoNStatusIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RaimFlag is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.VirtualAtoN is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_VirtualAtoNIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AssignedMode is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBit241 is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBit241Is(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidToNavigationExtension is E AREA 9&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidToNavigationExtensionIs("E AREA 9") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBitsAtEndIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f1c5c7ec-a001-4f6d-abe9-7402860c21d4" testId="269a766c-87ac-75be-ac23-71e9b01d9594" testName="UnsignedAligned6_BitInteger(&quot;40000000000M0000000000000000&quot;,&quot;0&quot;,&quot;66&quot;,&quot;29&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002999" startTime="2024-04-03T16:58:35.3657381+02:00" endTime="2024-04-03T16:58:35.3660378+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f1c5c7ec-a001-4f6d-abe9-7402860c21d4">
      <Output>
        <StdOut>Given an NMEA AIS payload of '40000000000M0000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("40000000000M00000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 66&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 66) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 29&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(29) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1bb892b6-e470-4ab4-b507-a662284604c1" testId="e9fd03ce-09c6-b7f9-d1ef-6f751884fdea" testName="PartBMessageType(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0013810" startTime="2024-04-03T16:58:35.2879556+02:00" endTime="2024-04-03T16:58:35.2893369+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1bb892b6-e470-4ab4-b507-a662284604c1">
      <Output>
        <StdOut>When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartB.PartNumber is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_PartNumberIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5eb5da96-be4c-43f4-8f3c-08f5232eb93d" testId="68113b74-84a0-0ddd-0b63-9bd540b31d47" testName="PositionAccuracy(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003520" startTime="2024-04-03T16:58:35.0553513+02:00" endTime="2024-04-03T16:58:35.0557036+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5eb5da96-be4c-43f4-8f3c-08f5232eb93d">
      <Output>
        <StdOut>When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3f32a0e3-ea00-448b-8af5-d91904e57c2a" testId="2a2c9429-c6c1-c0a2-7d36-0cfba8ee5a96" testName="PartBDimensionToStern(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:35.2872216+02:00" endTime="2024-04-03T16:58:35.2875714+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3f32a0e3-ea00-448b-8af5-d91904e57c2a">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8ef92176-b92d-4ff5-bda4-5141e047ef7e" testId="41ca4e6f-2ed3-ef99-9a74-c7bf219c3282" testName="NavigationStatus(&quot;1000006000000000000000000000&quot;,&quot;0&quot;,&quot;Aground&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0022330" startTime="2024-04-03T16:58:34.9740582+02:00" endTime="2024-04-03T16:58:34.9762916+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8ef92176-b92d-4ff5-bda4-5141e047ef7e">
      <Output>
        <StdOut>When I parse '1000006000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000060000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is Aground&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(Aground) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9656537b-9d1f-4bcc-b0c7-173593ffa207" testId="d27076e9-8412-bf2e-515c-77be634c128b" testName="FullMessage(&quot;I8;@OB0&quot;,&quot;0&quot;,&quot;25&quot;,&quot;0&quot;,&quot;548675400&quot;,&quot;0&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;4&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018260" startTime="2024-04-03T16:58:35.1476035+02:00" endTime="2024-04-03T16:58:35.1494290+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9656537b-9d1f-4bcc-b0c7-173593ffa207">
      <Output>
        <StdOut>When I parse 'I8;@OB0' with padding 0 as a Single Slot Binary Message&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.WhenIParseWithNmeaAisSingleSlotBinaryParser("I8;@OB0", 0) (0,0s)&#xD;
Then NmeaAisSingleSlotBinaryParser.Type is 25&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_TypeIs(SingleSlotBinaryM...) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.RepeatIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.Mmsi is 548675400&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_MmsiIs(548675400) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationIndicatorIs(Brocast) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.BinaryDataFlag is false&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_BinaryDataFlagIs(False) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationMmsi is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationMmsiIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.SpareBits70 is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_SpareBits70Is(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DAC is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DACIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.FI is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_FIIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationDataPadding is 4&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationData is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataIs("0") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="80df6597-4240-44d4-b325-86f0502e967f" testId="09349440-8c4e-7e04-3c59-e7568a74ec7e" testName="PartASpare(&quot;H00000000000000000000000000w&quot;,&quot;0&quot;,&quot;63&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003410" startTime="2024-04-03T16:58:35.2655916+02:00" endTime="2024-04-03T16:58:35.2659325+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="80df6597-4240-44d4-b325-86f0502e967f">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000000w' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 63&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(63) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="807e72a6-f838-42fa-b56a-36b988e69bc3" testId="887d3956-b829-d654-445b-3aed805427de" testName="FullMessage(&quot;?913QK18Uf;0D00&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;605086060&quot;,&quot;0&quot;,&quot;304462000&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0091980" startTime="2024-04-03T16:58:34.9229160+02:00" endTime="2024-04-03T16:58:34.9321142+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="807e72a6-f838-42fa-b56a-36b988e69bc3">
      <Output>
        <StdOut>When I parse '?913QK18Uf;0D00' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?913QK18Uf;0D00", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
And NmeaAisInterrogationParser.RepeatIndicator is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.Mmsi is 605086060&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MmsiIs(605086060) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits38 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi1 is 304462000&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi1Is(304462000) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType11 is 5&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType11Is(5) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset11 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset11Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits88 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits88Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits108 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits108Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi2 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi2Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits158 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits158Is(null) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="07cd1569-3442-4fac-b123-bde1e3131f7d" testId="0850eee5-2cf3-5613-1e91-faf7c8ab3607" testName="ShipType(&quot;53m7TH800000hS;3?P0Hu&lt;p604ltp0000000001?0P;5340Ht5531Wu=N=eN=u000000000&quot;,&quot;2&quot;,&quot;CargoNoAdditionalInformation&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.2386488+02:00" endTime="2024-04-03T16:58:35.2390488+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="07cd1569-3442-4fac-b123-bde1e3131f7d">
      <Output>
        <StdOut>When I parse '53m7TH800000hS;3?P0Hu&lt;p604ltp0000000001?0P;5340Ht5531Wu=N=eN=u000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m7TH800000hS;3?...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is CargoNoAdditionalInformation&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(CargoNoAdditional...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="97eca51e-a464-4cb8-9f70-ee57a373afee" testId="43473201-160a-f649-3642-7fb43a535791" testName="NavigationStatus(&quot;100000;000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse11&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003460" startTime="2024-04-03T16:58:34.9777931+02:00" endTime="2024-04-03T16:58:34.9781393+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="97eca51e-a464-4cb8-9f70-ee57a373afee">
      <Output>
        <StdOut>When I parse '100000;000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000;0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse11&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b5cb623a-68b6-4467-82eb-3d8201dae823" testId="1d79fabf-8846-2af6-dc4f-b24a6cb7a515" testName="DimensionToStern(&quot;C00000000000000000000000000000000000000000000000P000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005170" startTime="2024-04-03T16:58:35.0908649+02:00" endTime="2024-04-03T16:58:35.0913818+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b5cb623a-68b6-4467-82eb-3d8201dae823">
      <Output>
        <StdOut>When I parse 'C00000000000000000000000000000000000000000000000P000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStern is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToSternIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d47b8362-362c-4426-9911-ebbd1cf2a13b" testId="bcd4fcdf-b58f-3d8f-0d09-91e53522ba88" testName="AISVersion(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004000" startTime="2024-04-03T16:58:35.1680778+02:00" endTime="2024-04-03T16:58:35.1684779+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d47b8362-362c-4426-9911-ebbd1cf2a13b">
      <Output>
        <StdOut>When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ed1c36b8-b6e9-448d-aea9-210126d8e327" testId="6fcfbd81-1211-88a8-f02e-1be7ca2b98d7" testName="MultipleLines" computerName="SCODE-HF8MJR2" duration="00:00:00.0021800" startTime="2024-04-03T16:58:35.5299187+02:00" endTime="2024-04-03T16:58:35.5320987+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ed1c36b8-b6e9-448d-aea9-210126d8e327">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="543151ac-1dd7-42f7-be3c-68aff8ce263d" testId="00f9ae03-d210-c0fc-f4df-b8aed487e397" testName="RegionalReservedBits139_140(&quot;B000000000000000000000080000&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004740" startTime="2024-04-03T16:58:35.0609418+02:00" endTime="2024-04-03T16:58:35.0614153+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="543151ac-1dd7-42f7-be3c-68aff8ce263d">
      <Output>
        <StdOut>When I parse 'B000000000000000000000080000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6b5ae6c2-3cac-4b16-91bd-359cabf4e70d" testId="2adfdae0-96e2-0e9d-bd27-907e9d583150" testName="CourseOverGround(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;3562&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003480" startTime="2024-04-03T16:58:34.9566756+02:00" endTime="2024-04-03T16:58:34.9570236+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6b5ae6c2-3cac-4b16-91bd-359cabf4e70d">
      <Output>
        <StdOut>When I parse '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 3562&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(3562) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ce2f5f75-ba99-4848-92ba-4555cccd8e24" testId="db8e29ee-17f0-0eeb-d471-64fd1d0fb8a1" testName="ETADay(&quot;50000000000000000000000000000000000000000000008000000000000000000000000&quot;,&quot;2&quot;,&quot;16&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003930" startTime="2024-04-03T16:58:35.2001871+02:00" endTime="2024-04-03T16:58:35.2005796+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ce2f5f75-ba99-4848-92ba-4555cccd8e24">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000008000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 16&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(16) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="09df1e87-f48e-4bf4-bbbf-2ae29836da73" testId="fd956e77-3737-89bc-5bd6-6b0c04f0d1b0" testName="DTEReady(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004060" startTime="2024-04-03T16:58:35.1960507+02:00" endTime="2024-04-03T16:58:35.1964564+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="09df1e87-f48e-4bf4-bbbf-2ae29836da73">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is false&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9b0e1c1f-8cd5-46f3-a946-aa7150b53fe3" testId="b3ce4970-f87d-f26a-6b22-52a1f5323d10" testName="NavigationStatus(&quot;1000001000000000000000000000&quot;,&quot;0&quot;,&quot;AtAnchor&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004970" startTime="2024-04-03T16:58:34.9720279+02:00" endTime="2024-04-03T16:58:34.9725248+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9b0e1c1f-8cd5-46f3-a946-aa7150b53fe3">
      <Output>
        <StdOut>When I parse '1000001000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000010000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is AtAnchor&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(AtAnchor) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2178d419-030a-4c92-8667-a1ae6d3199ac" testId="bbcb91be-6e77-7448-eff6-d4317be900a3" testName="PartASpare(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008900" startTime="2024-04-03T16:58:35.2638550+02:00" endTime="2024-04-03T16:58:35.2647445+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2178d419-030a-4c92-8667-a1ae6d3199ac">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c305422d-f884-4d34-aefe-32ccdfed2f80" testId="d6d8f7b4-a511-d7c2-5d3a-5ccd7611a1a1" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0019730" startTime="2024-04-03T16:58:35.1617067+02:00" endTime="2024-04-03T16:58:35.1636800+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c305422d-f884-4d34-aefe-32ccdfed2f80">
      <Output>
        <StdOut>When I parse '95M2oQ@41Tr4L4H@eRvQ;2h20000' with padding 0 as a Standard Search and Rescue Aircraft Position Report&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.WhenIParseWithNmeaAisStandardSearchAndRescueAircraftPositionReportParser("95M2oQ@41Tr4L4H@e...", 0) (0,0s)&#xD;
Then NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Type is 9&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_TypeIs(StandardSARAircra...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="53d37abc-4add-41de-bec7-c06d8a3a2262" testId="70499a4a-cd76-337e-9936-3bec1e2878aa" testName="FullMessage(&quot;A028nBCt@hbs02Gvd0H@2gop2ABb&quot;,&quot;0&quot;,&quot;9&quot;,&quot;510&quot;,&quot;5632&quot;,&quot;6&quot;,&quot;2&quot;,&quot;0&quot;,&quot;720376,595114&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0016550" startTime="2024-04-03T16:58:34.9094967+02:00" endTime="2024-04-03T16:58:34.9111520+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="53d37abc-4add-41de-bec7-c06d8a3a2262">
      <Output>
        <StdOut>When I parse 'A028nBCt@hbs02Gvd0H@2gop2ABb' with padding 0 as a Differential Correction Data&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.WhenIParseWithNmeaAisDifferentialCorrectionDataParser("A028nBCt@hbs02Gvd...", 0) (0,0s)&#xD;
Then NmeaAisDifferentialCorrectionDataParser.MessageType is 9&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Station is 510&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_StationIs(510) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.ZCount is 5632&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_ZCountIs(5632) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.SequenceNumber is 6&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_SequenceNumberIs(6) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.DgnssDataWordCount is 2&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_DgnssDataWordCountIs(2) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Health is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_HealthIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.WriteDgnssDataWord is 720376,595114&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_Is(System.UInt32[]) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="91684e64-38f9-4626-a79a-601684095375" testId="cce01482-69a0-92e9-f295-9965989b71ac" testName="ConvertAIS6_BitCharacterToASCII(&quot;2&quot;,&quot;'B'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002440" startTime="2024-04-03T16:58:35.3284912+02:00" endTime="2024-04-03T16:58:35.3287355+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91684e64-38f9-4626-a79a-601684095375">
      <Output>
        <StdOut>When I convert the AIS character value 2 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(2) (0,0s)&#xD;
Then the converted ASCII value should be 'B'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(B) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="89d69754-f379-45b5-aa90-9a97c3fda20e" testId="d816c403-8230-a74d-4c74-d69637392b7d" testName="MMSI(&quot;500000P0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.2236293+02:00" endTime="2024-04-03T16:58:35.2240254+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="89d69754-f379-45b5-aa90-9a97c3fda20e">
      <Output>
        <StdOut>When I parse '500000P0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("500000P0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e3750cdf-c566-4555-8b2b-06ceb7a52a08" testId="c82b7739-1790-f643-de72-a2fef7a86c09" testName="Destination(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;HARSTAD@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004210" startTime="2024-04-03T16:58:35.1753871+02:00" endTime="2024-04-03T16:58:35.1758076+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e3750cdf-c566-4555-8b2b-06ceb7a52a08">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is HARSTAD@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("HARSTAD@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4586f305-f335-4ddc-b534-13ead581f433" testId="38dd50e1-babd-cfa6-3920-9fc68da9ec5e" testName="FragmentedMessages(&quot;2&quot;,&quot;2&quot;,&quot;6&quot;,&quot;8055&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008530" startTime="2024-04-03T16:58:35.5741868+02:00" endTime="2024-04-03T16:58:35.5750394+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4586f305-f335-4ddc-b534-13ead581f433">
      <Output>
        <StdOut>When I parse a message fragment part 2 of 2 with message id 6 and sentence group id 8055&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(2, 2, "6", "8055") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)&#xD;
And the SentenceGroupId is '8055'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(8055) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="db496219-9652-4246-8589-9401b2694083" testId="e8713e19-5cd1-fe25-5813-316021130479" testName="SingleLineWithNon_StandardTagBlockFieldWithExceptionsDisabled" computerName="SCODE-HF8MJR2" duration="00:00:00.0012890" startTime="2024-04-03T16:58:35.5152589+02:00" endTime="2024-04-03T16:58:35.5165480+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="db496219-9652-4246-8589-9401b2694083">
      <Output>
        <StdOut>Given a line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message with exceptions disabled&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageWithExceptionsDisabledAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="518111e5-9c46-4cf4-a96d-c06edd888ee2" testId="7395e4d9-3f7e-a43b-ddaf-daa2e0ca97f1" testName="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000020000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0004890" startTime="2024-04-03T16:58:35.3692025+02:00" endTime="2024-04-03T16:58:35.3696911+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="518111e5-9c46-4cf4-a96d-c06edd888ee2">
      <Output>
        <StdOut>Given an NMEA AIS payload of '1000000000000000000000020000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="58d8bb45-b6b9-426a-8e00-ea62c84c1a74" testId="e6f0a632-aedf-3d30-7401-fc58ea01e176" testName="RepeatIndicator(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003950" startTime="2024-04-03T16:58:35.2340792+02:00" endTime="2024-04-03T16:58:35.2344738+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="58d8bb45-b6b9-426a-8e00-ea62c84c1a74">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="04adb662-4f60-4296-876a-33f94bed7ac6" testId="d772bfcb-78c8-49c7-b154-7dee9ecaedd7" testName="PositionAccuracy(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003540" startTime="2024-04-03T16:58:34.9861253+02:00" endTime="2024-04-03T16:58:34.9864796+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="04adb662-4f60-4296-876a-33f94bed7ac6">
      <Output>
        <StdOut>When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cf330451-915d-4e19-9be1-fb4afa76f12e" testId="83d33432-ef67-dde9-8a5e-0a263c8737ff" testName="UnsignedAligned6_BitInteger(&quot;50000000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003030" startTime="2024-04-03T16:58:35.3638910+02:00" endTime="2024-04-03T16:58:35.3641935+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cf330451-915d-4e19-9be1-fb4afa76f12e">
      <Output>
        <StdOut>Given an NMEA AIS payload of '50000000000000000000000000000000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("50000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(5) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="548a1afe-0308-4cf6-a630-04374180c3e5" testId="10a738b5-11f7-8d2b-91d3-6633779e2c4b" testName="CallSign(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;LKLG@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003980" startTime="2024-04-03T16:58:35.1720988+02:00" endTime="2024-04-03T16:58:35.1724970+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="548a1afe-0308-4cf6-a630-04374180c3e5">
      <Output>
        <StdOut>When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is LKLG@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("LKLG@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a0be13a4-fc55-4a3a-9b09-6f663db34a99" testId="87c854c6-bfab-223b-75ec-184624731970" testName="CourseOverGround(&quot;1000000000000000000?wh000000&quot;,&quot;0&quot;,&quot;4095&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003540" startTime="2024-04-03T16:58:34.9552429+02:00" endTime="2024-04-03T16:58:34.9555970+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a0be13a4-fc55-4a3a-9b09-6f663db34a99">
      <Output>
        <StdOut>When I parse '1000000000000000000?wh000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 4095&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(4095) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="21f4e5a7-4b27-4a82-b969-ef1fd4f2ff02" testId="fb8337eb-3739-6471-250a-3d620e32af47" testName="MessageType" computerName="SCODE-HF8MJR2" duration="00:00:00.0004890" startTime="2024-04-03T16:58:34.7454414+02:00" endTime="2024-04-03T16:58:34.7459306+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="21f4e5a7-4b27-4a82-b969-ef1fd4f2ff02">
      <Output>
        <StdOut>When I parse '=8156b@iuus2' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=8156b@iuus2", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7994c3d9-0492-4866-ae5f-650d8959aeab" testId="56f85b12-9002-3421-1d3c-2ca7bb215814" testName="DTEReady(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;false&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0009810" startTime="2024-04-03T16:58:35.1945095+02:00" endTime="2024-04-03T16:58:35.1954900+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7994c3d9-0492-4866-ae5f-650d8959aeab">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is false&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(False) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="600c55bf-4b25-4440-8d92-bf6da47503ab" testId="fc3bfbbc-5dad-1f00-4d06-d751f2562ae8" testName="Draught(&quot;50000000000000000000000000000000000000000000000000@00000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005300" startTime="2024-04-03T16:58:35.1892241+02:00" endTime="2024-04-03T16:58:35.1897535+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="600c55bf-4b25-4440-8d92-bf6da47503ab">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000000@00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e9b1ad62-d59a-46f8-ba11-35e0ccd0f9fa" testId="4f2d6fef-138a-2870-170c-5b971f750254" testName="DimensionToBow(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;162&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003959" startTime="2024-04-03T16:58:35.1794288+02:00" endTime="2024-04-03T16:58:35.1798250+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e9b1ad62-d59a-46f8-ba11-35e0ccd0f9fa">
      <Output>
        <StdOut>When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 162&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(162) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="15782512-fd41-4f25-8552-7e550d25869b" testId="3c416bac-1a20-4eac-2a44-6a8bfe7edd5c" testName="PartBVendorIDITU_R1371_3(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;AMC@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003280" startTime="2024-04-03T16:58:35.3150137+02:00" endTime="2024-04-03T16:58:35.3153412+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="15782512-fd41-4f25-8552-7e550d25869b">
      <Output>
        <StdOut>When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is AMC@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("AMC@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d4b03bef-9b39-45d1-8cf2-caf0b1b3b30d" testId="069b1e62-8cb8-e7d9-3fff-5afc87978ab6" testName="CourseOverGround(&quot;B000000000000000003Q00000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003490" startTime="2024-04-03T16:58:35.0337746+02:00" endTime="2024-04-03T16:58:35.0341231+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d4b03bef-9b39-45d1-8cf2-caf0b1b3b30d">
      <Output>
        <StdOut>When I parse 'B000000000000000003Q00000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(3600) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="517de1a2-f567-4d0e-ab97-286e3d35210d" testId="3c256692-57b2-8c6e-c53d-e30d93651e2d" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;3&quot;,&quot;-69&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003050" startTime="2024-04-03T16:58:35.3525905+02:00" endTime="2024-04-03T16:58:35.3528951+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="517de1a2-f567-4d0e-ab97-286e3d35210d">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -69&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-69) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0de397da-1500-4b9a-9be7-425528b0e002" testId="b558b161-51be-d7ee-3417-5244b6244d19" testName="NavigationStatus(&quot;1000004000000000000000000000&quot;,&quot;0&quot;,&quot;ConstrainedByHerDraught&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003660" startTime="2024-04-03T16:58:34.9733049+02:00" endTime="2024-04-03T16:58:34.9736704+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0de397da-1500-4b9a-9be7-425528b0e002">
      <Output>
        <StdOut>When I parse '1000004000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000040000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ConstrainedByHerDraught&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ConstrainedByHerD...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="59c1f44e-525e-44aa-b97a-9ce9401b9e78" testId="04cc215e-1bc7-beb0-b94e-53e22b41e829" testName="Three_FragmentMessageFragmentsReceivedAdjacently" computerName="SCODE-HF8MJR2" duration="00:00:00.0009270" startTime="2024-04-03T16:58:35.4155230+02:00" endTime="2024-04-03T16:58:35.4164497+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="59c1f44e-525e-44aa-b97a-9ce9401b9e78">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 27) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567686150) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dc6f0a5a-0ba5-4ec0-a8a5-d66558306975" testId="eac65b18-a358-2de8-88c0-4e2bbcaaaf03" testName="CourseOverGround(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;3600&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:35.0353936+02:00" endTime="2024-04-03T16:58:35.0357436+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dc6f0a5a-0ba5-4ec0-a8a5-d66558306975">
      <Output>
        <StdOut>When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(3600) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="de8ac15f-aa68-4e80-ac91-0db50e639d1e" testId="3c0d627a-1c1f-b7b8-ad5f-010c087e1cf3" testName="PartASpare(&quot;H00000000000000000000000003w&quot;,&quot;0&quot;,&quot;255&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003370" startTime="2024-04-03T16:58:35.2667391+02:00" endTime="2024-04-03T16:58:35.2670759+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="de8ac15f-aa68-4e80-ac91-0db50e639d1e">
      <Output>
        <StdOut>When I parse 'H00000000000000000000000003w' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 255&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(255) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4922400c-eb05-477a-9bfa-fb45046bcb2a" testId="44c899c9-4808-4df2-dde7-1ef4ef0ae76c" testName="PartBShipType(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;Fishing&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003520" startTime="2024-04-03T16:58:35.3061483+02:00" endTime="2024-04-03T16:58:35.3065007+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4922400c-eb05-477a-9bfa-fb45046bcb2a">
      <Output>
        <StdOut>When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is Fishing&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(Fishing) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="908d2c09-8467-4faf-9883-ecf39991e2ca" testId="2fb1d4de-7abc-e8b3-2ade-aa6667667a12" testName="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;0&quot;,&quot;-73&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3516550+02:00" endTime="2024-04-03T16:58:35.3519563+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="908d2c09-8467-4faf-9883-ecf39991e2ca">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -73&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-73) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b8f86389-dc36-45bd-a347-f555eaad55fb" testId="aeea1d04-5003-2b0a-8d11-4e67264dd013" testName="PartASpare(&quot;H000000000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003420" startTime="2024-04-03T16:58:35.2652373+02:00" endTime="2024-04-03T16:58:35.2655789+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b8f86389-dc36-45bd-a347-f555eaad55fb">
      <Output>
        <StdOut>When I parse 'H000000000000000000000000001' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a52a28c7-de50-4349-bb2f-2ef0db9ceba0" testId="487373dc-dafb-4517-5c6a-5d74a95cf239" testName="ConvertAIS6_BitCharacterToASCII(&quot;4&quot;,&quot;'D'&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002270" startTime="2024-04-03T16:58:35.3289882+02:00" endTime="2024-04-03T16:58:35.3292148+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a52a28c7-de50-4349-bb2f-2ef0db9ceba0">
      <Output>
        <StdOut>When I convert the AIS character value 4 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(4) (0,0s)&#xD;
Then the converted ASCII value should be 'D'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(D) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="24c2b0dc-d898-4b89-8c3a-69ae043f0b95" testId="c39e7b60-9729-69ea-fd65-0b4405f5a9d5" testName="FragmentedMessagesWithoutGroupIdsInHeader(&quot;2&quot;,&quot;1&quot;,&quot;6&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010800" startTime="2024-04-03T16:58:35.5767759+02:00" endTime="2024-04-03T16:58:35.5778555+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="24c2b0dc-d898-4b89-8c3a-69ae043f0b95">
      <Output>
        <StdOut>When I parse a message fragment part 1 of 2 with message id 6 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(1, 2, "6") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fdb35f92-a937-4314-9834-57fbb00095bd" testId="26b7c5cd-fa39-bf9b-a908-7b4e11514f11" testName="RadioSlotTimeout(&quot;13`j@B001h0lICBPg476:TlB0@5:&quot;,&quot;0&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:34.9917755+02:00" endTime="2024-04-03T16:58:34.9921117+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fdb35f92-a937-4314-9834-57fbb00095bd">
      <Output>
        <StdOut>When I parse '13`j@B001h0lICBPg476:TlB0@5:' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13`j@B001h0lICBPg...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 4&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b42313e2-7bfb-4176-aa85-ef971c7d8faf" testId="0b102957-9529-0fb6-9d49-cd9d4fbec90b" testName="RepeatIndicator(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0008890" startTime="2024-04-03T16:58:35.0066408+02:00" endTime="2024-04-03T16:58:35.0075300+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b42313e2-7bfb-4176-aa85-ef971c7d8faf">
      <Output>
        <StdOut>When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="46099c57-31c2-456a-9665-e2fc24b3847e" testId="4e097ab2-06b3-46b7-6f12-dff8a9dfaa3d" testName="SpeedOverGround(&quot;13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003&quot;,&quot;0&quot;,&quot;304&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003430" startTime="2024-04-03T16:58:35.0171655+02:00" endTime="2024-04-03T16:58:35.0175087+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="46099c57-31c2-456a-9665-e2fc24b3847e">
      <Output>
        <StdOut>When I parse '13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m`0o9P4hPTEKLQ&gt;...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 304&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(304) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7bf3a5bf-0be3-470e-9a34-4b98fa005a7c" testId="3ba23308-6541-408c-963a-7fb1a03f105c" testName="ETAMonth(&quot;5000000000000000000000000000000000000000000000@000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005240" startTime="2024-04-03T16:58:35.2129720+02:00" endTime="2024-04-03T16:58:35.2134954+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bf3a5bf-0be3-470e-9a34-4b98fa005a7c">
      <Output>
        <StdOut>When I parse '5000000000000000000000000000000000000000000000@000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(1) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7fa3f7a8-2952-4c9d-9624-ee90d92dd08d" testId="134d491c-928e-9107-fe6f-7f3101a5feb0" testName="Draught(&quot;50000000000000000000000000000000000000000000000001000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0018260" startTime="2024-04-03T16:58:35.1906016+02:00" endTime="2024-04-03T16:58:35.1924276+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7fa3f7a8-2952-4c9d-9624-ee90d92dd08d">
      <Output>
        <StdOut>When I parse '50000000000000000000000000000000000000000000000001000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 4&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(4) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7c42c7b9-2a08-4fcb-81bb-f2eb77d62d55" testId="bd9b8e61-33e8-f211-ecf1-c7920470b7df" testName="LineStreamParserReportsErrorInFirstFragmentOfTwo_PartMessage" computerName="SCODE-HF8MJR2" duration="00:00:00.0018430" startTime="2024-04-03T16:58:35.4066474+02:00" endTime="2024-04-03T16:58:35.4084903+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7c42c7b9-2a08-4fcb-81bb-f2eb77d62d55">
      <Output>
        <StdOut>When the line to message adapter receives an error report for content 'foobar' with line number 42&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAnErrorReportForContentWithLineNumber("foobar", 42) (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'foobar'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "foobar") (0,0s)&#xD;
And the message error report 0 should include the exception reported by the line stream parser&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.ThenTheMessageErrorReportShouldIncludeTheExceptionReportedByTheLineStreamParser(0) (0,0s)&#xD;
And the message error report 0 should include the line number 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 42) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 3451</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c050e9e1-13c7-40e6-9dd1-8ccec269d08d" testId="17889428-ca02-31d3-345b-e29c5d9f7998" testName="Name(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0010650" startTime="2024-04-03T16:58:35.1005156+02:00" endTime="2024-04-03T16:58:35.1015805+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c050e9e1-13c7-40e6-9dd1-8ccec269d08d">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is '@@@@@@@@@@@@@@@@@@@@'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9bda1593-0fb1-4e75-81f2-9fae86b47fac" testId="1f0eeac0-e9b9-2e16-7718-65532f534383" testName="FirstFragmentOfTwo_PartMessageReceived" computerName="SCODE-HF8MJR2" duration="00:00:00.0086050" startTime="2024-04-03T16:58:35.3807075+02:00" endTime="2024-04-03T16:58:35.3893127+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9bda1593-0fb1-4e75-81f2-9fae86b47fac">
      <Output>
        <StdOut>When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4636e7f-595c-438e-876c-252df67fd835" testId="6bebb593-c8f9-6419-95cd-72219a5e6a10" testName="RAIMFlag(&quot;C000000000000000000000000000000000000000000000000010&quot;,&quot;0&quot;,&quot;true&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0005230" startTime="2024-04-03T16:58:35.1107484+02:00" endTime="2024-04-03T16:58:35.1112714+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4636e7f-595c-438e-876c-252df67fd835">
      <Output>
        <StdOut>When I parse 'C000000000000000000000000000000000000000000000000010' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RaimFlag is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RaimFlagIs(True) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="94d88247-07ea-4eaa-ad11-233517e4d7c4" testId="7727c02f-bdf8-5893-65cf-fe9294aadc5c" testName="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;13&quot;,&quot;31&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0002980" startTime="2024-04-03T16:58:35.3788337+02:00" endTime="2024-04-03T16:58:35.3791318+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="94d88247-07ea-4eaa-ad11-233517e4d7c4">
      <Output>
        <StdOut>Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 13&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 13) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 31&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(31) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="18906ba3-a54b-4934-99a6-bc15bd54d87e" testId="2864813a-4840-3b40-c9b3-9767e957d59d" testName="NavigationStatus(&quot;100000&lt;000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse12&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003500" startTime="2024-04-03T16:58:34.9781523+02:00" endTime="2024-04-03T16:58:34.9785019+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="18906ba3-a54b-4934-99a6-bc15bd54d87e">
      <Output>
        <StdOut>When I parse '100000&lt;000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000&lt;0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse12&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e2db0aa8-81a6-437b-b6e8-d60db015570d" testId="043ff5f8-a1b3-b881-e5cd-729ec38a7238" testName="FullMessage(&quot;4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,&quot;2241071&quot;,&quot;2003&quot;,&quot;1&quot;,&quot;20&quot;,&quot;17&quot;,&quot;37&quot;,&quot;8&quot;,&quot;false&quot;,&quot;3.215745&quot;,&quot;41.96259&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0166080" startTime="2024-04-03T16:58:34.8115866+02:00" endTime="2024-04-03T16:58:34.8281937+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e2db0aa8-81a6-437b-b6e8-d60db015570d">
      <Output>
        <StdOut>When I parse '4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Base Station Report&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("4028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisBaseStationReportParser.Type is 4&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TypeIs(BaseStationReport) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Mmsi is 2241071&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_MmsiIs(2241071) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcYear is 2003&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcYearIs(2003) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMonth is 1&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMonthIs(1) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcDay is 20&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcDayIs(20) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcHour is 17&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcHourIs(17) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMinute is 37&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMinuteIs(37) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcSecond is 8&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcSecondIs(8) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionAccuracy is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Longitude10000thMins is 3.215745&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Longitude10000thMinsIs(3,215745) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Latitude10000thMins is 41.96259&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Latitude10000thMinsIs(41,96259) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionFixType is 1&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.SpareBits139 is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RaimFlag is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.CommunicationState is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7832848f-f78f-41c1-991d-61046c67c6dd" testId="453a25f8-62d3-32f3-7562-44a6236b5e74" testName="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;61&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003010" startTime="2024-04-03T16:58:35.3585914+02:00" endTime="2024-04-03T16:58:35.3588927+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7832848f-f78f-41c1-991d-61046c67c6dd">
      <Output>
        <StdOut>Given an NMEA AIS payload of '0000000000P' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 61&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 61) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c992cdee-6fe6-44c3-82b2-affc6ebc6c26" testId="ef830dfc-44c9-8911-e019-d065b318ee64" testName="PartBMMSI(&quot;H00000T000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003400" startTime="2024-04-03T16:58:35.2913329+02:00" endTime="2024-04-03T16:58:35.2916728+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c992cdee-6fe6-44c3-82b2-affc6ebc6c26">
      <Output>
        <StdOut>When I parse 'H00000T000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000T0000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b60a88e0-03b5-4fab-bcf3-5e7a40481ec4" testId="244f3fff-d30a-d150-5bc9-b1f81e2989cd" testName="RadioSlotTimeout(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;2&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0003360" startTime="2024-04-03T16:58:34.9910855+02:00" endTime="2024-04-03T16:58:34.9914214+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b60a88e0-03b5-4fab-bcf3-5e7a40481ec4">
      <Output>
        <StdOut>When I parse '13m6;7cP020HJ`JRs9l0A?v`08&lt;9' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m6;7cP020HJ`JRs...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(2) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3559904b-42ac-42ac-b9af-bdec777875ed" testId="0281243d-3a5f-63cb-fa5a-01b65a672989" testName="FullMessage(&quot;:9NWsc1sgBDL&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;636091308&quot;,&quot;0&quot;,&quot;518998343&quot;,&quot;0&quot;,null)" computerName="SCODE-HF8MJR2" duration="00:00:00.0013250" startTime="2024-04-03T16:58:34.8612406+02:00" endTime="2024-04-03T16:58:34.8625658+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3559904b-42ac-42ac-b9af-bdec777875ed">
      <Output>
        <StdOut>When I parse ':9NWsc1sgBDL' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":9NWsc1sgBDL", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 636091308&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(636091308) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits38 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.DestinationMmsi is 518998343&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_DestinationMmsiIs(518998343) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits70 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits70Is(0) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="PartASpare(&quot;H000000000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aeea1d04-5003-2b0a-8d11-4e67264dd013">
      <Execution id="b8f86389-dc36-45bd-a347-f555eaad55fb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H000000000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;53mE09400000hoC3301&lt;4pAV222222200000000N0h:23t0Ht6CP@000000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="40f46989-e37a-3c03-1afe-33c4839c1077">
      <Execution id="e8b2fe02-3d0d-42d2-8ec3-79e82c104ce2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;53mE09400000hoC3301&lt;4pAV222222200000000N0h:23t0Ht6CP@000000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;43&quot;,&quot;'+'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9c78274a-3691-881b-aff2-405e074b0691">
      <Execution id="ba38fea0-5c51-417a-ac68-eacb5397a1c2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;43&quot;,&quot;'+'&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleMixedBlankLinesOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c9e79aad-8881-095e-7bcc-3a4ddb4c82a0">
      <Execution id="e8db984b-1e97-4598-83d2-25c920bca02d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleMixedBlankLinesOnly" />
    </UnitTest>
    <UnitTest name="ReadPartAAsPartBThrows" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5a548450-1ff0-bcf7-46cc-5073378951c1">
      <Execution id="bd2c5868-c59f-4099-a6b0-f7f3c55bc23c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="ReadPartAAsPartBThrows" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;5@000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eba72b38-8260-7cb6-1471-1c9cf588f496">
      <Execution id="5d18b21c-a53a-47db-83e5-4b716b914744" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;5@000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;50000000000000000040000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@A&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5c5090f8-d0b5-cce1-cb2e-686e52fa7345">
      <Execution id="a1424dd1-37be-4f32-a166-d31678b41e18" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;50000000000000000040000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@A&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13n53M50001P2jv`4iFe@rJ&lt;0000&quot;,&quot;0&quot;,&quot;Moored&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="30c2c3df-adb2-2c2a-77fb-57ba5562e534">
      <Execution id="0680be85-88a7-420d-9123-2e172413d461" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13n53M50001P2jv`4iFe@rJ&lt;0000&quot;,&quot;0&quot;,&quot;Moored&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;56&quot;,&quot;'8'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a71d5b0a-55d1-a684-ce6e-a29739e6138e">
      <Execution id="ac6c7c44-2936-4c1b-ab25-44477e846dcb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;56&quot;,&quot;'8'&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="500c6590-975e-c2cd-8808-338636ab291b">
      <Execution id="16d01876-b098-4828-a3f8-5e2b69f27fb9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_4(&quot;H0000040QPP00000000000000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="25eea7e8-7e85-5442-338a-e6db5aaf5b9f">
      <Execution id="ecc3c77e-b5cb-4502-912f-3e782ce24db8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_4(&quot;H0000040QPP00000000000000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBShipType(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;CargoAll&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7da6bd95-0b57-6c67-9a9b-9040d6929f5f">
      <Execution id="caf6c81e-035b-4cc6-8caa-6e4bef5359cc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBShipType(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;CargoAll&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;B00000?t00000000000000000000&quot;,&quot;0&quot;,&quot;255&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e0c3c976-0fd6-a531-96df-9b28664877ba">
      <Execution id="eaaa9578-8e6b-4b0d-8b87-7ef14b7ceb6e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;B00000?t00000000000000000000&quot;,&quot;0&quot;,&quot;255&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMMSI(&quot;H3m76H4N@B?&gt;1F0&lt;;mnoh0107320&quot;,&quot;0&quot;,&quot;257017440&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f610318f-db7d-5b4b-b4ce-71af0ac6f6da">
      <Execution id="d790f94a-67fc-4e3f-ac58-319538e9c9de" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMMSI(&quot;H3m76H4N@B?&gt;1F0&lt;;mnoh0107320&quot;,&quot;0&quot;,&quot;257017440&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;1000000000000000000000001000&quot;,&quot;0&quot;,&quot;ToBaseStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fe06932c-d038-89a2-641b-72709b0a0f65">
      <Execution id="1508c13a-b72a-41d9-b7fb-7b2abbc4516e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;1000000000000000000000001000&quot;,&quot;0&quot;,&quot;ToBaseStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H00000100000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e7f7ee0b-3938-3ee5-ede0-d7640679835a">
      <Execution id="aea38743-8ab7-4cda-8d94-61716a5389b4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H00000100000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b0150c2d-7e64-59ad-9486-1c3ce44d9090">
      <Execution id="bed898a6-98fb-4d7c-b9ed-66c9e04455d6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;ATVDM&quot;,&quot;TransmittingStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="529cc424-f0da-4def-dd66-bb280f3193d9">
      <Execution id="917f7506-a42e-40c1-9b9e-7431301c6aff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;ATVDM&quot;,&quot;TransmittingStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;6&gt;p?paQREindIt4&lt;&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;998504614&quot;,&quot;0&quot;,&quot;412469099&quot;,&quot;false&quot;,&quot;false&quot;,&quot;415&quot;,&quot;1&quot;,&quot;4&quot;,&quot;4&lt;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="283ee842-4baa-9fde-148d-9efa193b3d0b">
      <Execution id="7b837e0e-f0d8-4755-a99b-b5ee28ce491c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedBinaryMessageParserSpecsStepsFeature" name="FullMessage(&quot;6&gt;p?paQREindIt4&lt;&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;998504614&quot;,&quot;0&quot;,&quot;412469099&quot;,&quot;false&quot;,&quot;false&quot;,&quot;415&quot;,&quot;1&quot;,&quot;4&quot;,&quot;4&lt;&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13mVWJ2P01P`jBlTMPsN4?v22&lt;0G&quot;,&quot;0&quot;,&quot;NotUnderCommand&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="61454356-95a5-cff7-21fa-8eb79ed5699a">
      <Execution id="7c2f392d-d303-4650-9f1e-e1368d86f51a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13mVWJ2P01P`jBlTMPsN4?v22&lt;0G&quot;,&quot;0&quot;,&quot;NotUnderCommand&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBRepeatIndicator(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="87596738-5309-54c6-2668-51a025d16d61">
      <Execution id="fd31d2c4-06b1-4bd5-8ae3-8ab43d19f9de" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBRepeatIndicator(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000400&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4a6156e3-eb36-b3f6-d133-0992eea8857c">
      <Execution id="4d2ce3a7-b53b-4ca3-940a-d81fd4fe9c06" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000400&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLinesWithBlanksAtStart" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f6ee8e72-5780-e6ee-044e-bc3807521094">
      <Execution id="28a46f14-1446-490e-b8c6-00270dd2acc4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleLinesWithBlanksAtStart" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;100000000000000000000000H000&quot;,&quot;0&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9b24d73c-fd0b-ba63-9a82-9ff440d3f23a">
      <Execution id="196da310-f89d-4240-bb85-d942226a58d8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;100000000000000000000000H000&quot;,&quot;0&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;8&quot;,&quot;30&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6a2f65f5-9494-3f28-cae6-42d4ffe0fac1">
      <Execution id="dfcb086d-875d-4873-be05-d00dbcde291b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;8&quot;,&quot;30&quot;,null)" />
    </UnitTest>
    <UnitTest name="IMONumber(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="94a9edf7-4b7f-a86c-3ba3-89b29ab19da6">
      <Execution id="72624082-c84a-4bb8-9ef4-4c30b2fd25ac" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="IMONumber(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;1023&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="047388df-83c4-3a87-4405-1c3b99517335">
      <Execution id="62f36a78-93f9-475d-8c0b-ce7d86259710" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;1023&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;=8156b@iuus2&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;538003113&quot;,&quot;0&quot;,&quot;209582000&quot;,&quot;2&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c9b212d6-7ea6-5806-b2f3-6655bc5c22fd">
      <Execution id="5e7bad51-b234-4949-bd03-631bd107a8f5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AcknowledgementParserSpecsStepsFeature" name="FullMessage(&quot;=8156b@iuus2&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;538003113&quot;,&quot;0&quot;,&quot;209582000&quot;,&quot;2&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;3&quot;,&quot;-69&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c256692-57b2-8c6e-c53d-e30d93651e2d">
      <Execution id="517de1a2-f567-4d0e-ab97-286e3d35210d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;3&quot;,&quot;-69&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1d18b1cc-1939-d140-a85c-fa67d1e220ea">
      <Execution id="73847e26-2d32-4180-aeef-71d7efd996aa" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;&gt;3@pJu04U&gt;10ib04&lt;f1@qR1&lt;4HF1HuT4LF0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;219028212&quot;,&quot;0&quot;,&quot;\&quot;AIS PLZ ACK TNX SAFE VOYAGE \&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="08aea83b-9c36-de19-b36d-9102753e46f0">
      <Execution id="432deb37-723d-4337-a518-419a8194d430" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SafetyRelatedBroadcastParserSpecsStepsFeature" name="FullMessage(&quot;&gt;3@pJu04U&gt;10ib04&lt;f1@qR1&lt;4HF1HuT4LF0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;219028212&quot;,&quot;0&quot;,&quot;\&quot;AIS PLZ ACK TNX SAFE VOYAGE \&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;100000000000000000000000@000&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c36eba9d-af26-c6ba-a888-becc74d9511f">
      <Execution id="fd70ca57-ba2f-40f8-a1b7-438836603a9a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;100000000000000000000000@000&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;B@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3f208dc4-93b2-3998-6ffe-e403c2dfe9a7">
      <Execution id="ff66941e-54fa-45e6-9bb8-fa8c218dbd5a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;B@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;500000000000000000000000000000000000000000000000:0000000000000000000000&quot;,&quot;2&quot;,&quot;10&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dfc473d2-9790-122a-6e9f-6f9fb0a017e4">
      <Execution id="a1cd850a-2f04-4678-8664-85c73bbecfff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;500000000000000000000000000000000000000000000000:0000000000000000000000&quot;,&quot;2&quot;,&quot;10&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;50000040000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="79994107-4692-be33-6d60-41927ecc9baf">
      <Execution id="498ed8eb-7dad-4023-946d-34b98f84f868" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;50000040000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBCallSign(&quot;H000004000000001234567000000&quot;,&quot;0&quot;,&quot;ABCDEFG&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dde45fa6-e37f-b1de-99ed-78dcd17dd7a7">
      <Execution id="9240c618-9798-4469-868f-76217c63e4ba" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBCallSign(&quot;H000004000000001234567000000&quot;,&quot;0&quot;,&quot;ABCDEFG&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;0000000Oh0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;127&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7f582eb7-fe6c-6104-a26d-69fd564b233a">
      <Execution id="533c7fa1-2e9e-4cb1-9bc1-ef47f7f5efd7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;0000000Oh0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;127&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1h00000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="678d54f8-c3cb-9b7e-7d78-a6a71d446737">
      <Execution id="3e9687c0-8fb2-4a0f-9712-fae5e9339d7e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1h00000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLinesWhereFinalLineHasNoNewline" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="868a3cec-638d-9e28-cfce-53ac3105558f">
      <Execution id="ca03b63c-b2f9-4d3d-936e-4b23a258dcb2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleLinesWhereFinalLineHasNoNewline" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="11a6f218-aa23-4161-0ac4-0a498a2f6034">
      <Execution id="ae860caa-4170-46a6-8f88-a385d941b62b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c37e1422-3dbd-d1a5-a331-1b8b0cbfd640">
      <Execution id="cf3bd171-6096-471f-ae5b-6ce57784a288" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="LongitudeAndLatitute(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;58&quot;,&quot;':'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="af91c3c8-dea7-5346-2219-20fd8f8bbabf">
      <Execution id="cb479415-d8da-49df-bbd3-7e0d8cb9ff33" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;58&quot;,&quot;':'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Name(&quot;C00000000000000000000001CEGIKMOQSUWacegikmoq00000000&quot;,&quot;0&quot;,&quot;)*+,-./0123456789:;&lt;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ec375bf2-8b27-0a2d-3603-03ee93d0cd28">
      <Execution id="170c7294-8a8b-44c8-b646-b1b71ac371ef" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Name(&quot;C00000000000000000000001CEGIKMOQSUWacegikmoq00000000&quot;,&quot;0&quot;,&quot;)*+,-./0123456789:;&lt;&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;ASVDM&quot;,&quot;LimitedBaseStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aa533b89-5bef-5471-6f00-da9b74b118d1">
      <Execution id="80eec411-7a7e-4397-9bb0-37048fc8dce2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;ASVDM&quot;,&quot;LimitedBaseStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;-128&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3981900f-d4cb-7487-bed4-7b989acf9c4b">
      <Execution id="67630b7f-7b88-414d-b9b5-b5b63cdae00c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;-128&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;D02;bMR0tLfp00M6EpDu6D0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;2288246&quot;,&quot;0&quot;,&quot;2063&quot;,&quot;1&quot;,&quot;6&quot;,&quot;750&quot;,&quot;0&quot;,&quot;1&quot;,&quot;6&quot;,&quot;1125&quot;,&quot;1925&quot;,&quot;3&quot;,&quot;6&quot;,&quot;1125&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4ad0ffed-0277-2ee8-5633-814e7ca2265b">
      <Execution id="6eae7cb5-796c-4096-92e6-7203b72232dc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.DataLinkManagementMessageParserSpecsStepsFeature" name="FullMessage(&quot;D02;bMR0tLfp00M6EpDu6D0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;2288246&quot;,&quot;0&quot;,&quot;2063&quot;,&quot;1&quot;,&quot;6&quot;,&quot;750&quot;,&quot;0&quot;,&quot;1&quot;,&quot;6&quot;,&quot;1125&quot;,&quot;1925&quot;,&quot;3&quot;,&quot;6&quot;,&quot;1125&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="77eb8b91-6863-70c7-ad80-7ccf88a77113">
      <Execution id="156f5038-45c8-4a0a-8c9b-2d98f08d041d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000002H00000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;38&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f64c57db-45db-14ee-9325-bfefefe3d12b">
      <Execution id="c6f2ebb8-f4d5-433a-95c0-2f3159df9d5e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000002H00000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;38&quot;,null)" />
    </UnitTest>
    <UnitTest name="Two_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedWithSingle_FragmentMessageInTheMiddle" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4a411074-f5cf-cd96-13a0-a22dbb268663">
      <Execution id="1fd3ddd9-544a-4412-b0dc-6fcb2e3401a1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Two_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedWithSingle_FragmentMessageInTheMiddle" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d6d8f7b4-a511-d7c2-5d3a-5ccd7611a1a1">
      <Execution id="c305422d-f884-4d34-aefe-32ccdfed2f80" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StandardSearchAndRescueAircraftPositionReportParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="PartBSerialNumber(&quot;H000004000020000000000000000&quot;,&quot;0&quot;,&quot;524288&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7991c725-036c-c853-ff90-46ae1f53b750">
      <Execution id="c8f47473-3aa9-4677-a390-24ffa12cf23b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSerialNumber(&quot;H000004000020000000000000000&quot;,&quot;0&quot;,&quot;524288&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="578f0a1c-72ba-521f-6391-2a5eaa512e52">
      <Execution id="59f3d97f-3d6a-450e-abc9-8c3fb83b2643" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;50000000000000000000000000000000000000000000000H00000000000000000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="05c1327a-1a2f-a0cb-d372-2f5425d30d5f">
      <Execution id="ba5646ff-7887-4a8f-9746-ddf60dc3eaa4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;50000000000000000000000000000000000000000000000H00000000000000000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;0&quot;,&quot;-73&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2fb1d4de-7abc-e8b3-2ade-aa6667667a12">
      <Execution id="908d2c09-8467-4faf-9883-ecf39991e2ca" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;0&quot;,&quot;-73&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;C000000000000000000040000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ca1cc6d5-b6de-95ce-4799-464d81e5c7be">
      <Execution id="67ceb583-f40c-4a7f-bb8c-5fea69d29b87" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="CourseOverGround(&quot;C000000000000000000040000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000120000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;33&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3ddc396e-9c48-d3e0-9b59-9cbded94a347">
      <Execution id="8f15fda0-e438-4e19-a338-f5d6dfa86ccd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000120000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;33&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABCa&quot;,&quot;0&quot;,&quot;18&quot;,&quot;41&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cef52192-5b56-9ddb-0304-9ecf03dedc51">
      <Execution id="c9761eec-99a6-4bb3-b5cf-d3e0517deee3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABCa&quot;,&quot;0&quot;,&quot;18&quot;,&quot;41&quot;,null)" />
    </UnitTest>
    <UnitTest name="CSUnitFlag(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3515468d-2a06-a106-4fe1-a0d265eeaeca">
      <Execution id="412370b8-7d46-4ea3-944b-1f29b8823f9a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CSUnitFlag(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C000000000000000000000020000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="314e990f-64f0-4941-31b5-dbac9635f680">
      <Execution id="dabfeb3c-3a59-43df-af1c-ebebe0bd48bb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C000000000000000000000020000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;C0000000000000000000000000000000000000000000:P000000&quot;,&quot;0&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="328553af-4061-64e4-0c38-5993242e9563">
      <Execution id="6f38f540-4e58-4017-9e7a-bbfb4ddff8a0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="ShipType(&quot;C0000000000000000000000000000000000000000000:P000000&quot;,&quot;0&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000&quot;,&quot;2&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="44f35079-d059-a1a1-cc67-a215f0639d69">
      <Execution id="3c94ae3a-2350-43dd-ad1c-a1c1f03e2b31" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToBow(&quot;53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000&quot;,&quot;2&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000080&quot;,&quot;0&quot;,&quot;LoranC&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e165a77f-b10d-6a72-6e8c-173f26dd49f6">
      <Execution id="a60e7ef8-5ff6-4c30-86c3-3414e8e721f0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000080&quot;,&quot;0&quot;,&quot;LoranC&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;40000000000O0000000000000000&quot;,&quot;0&quot;,&quot;66&quot;,&quot;31&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="63f4c05e-1a3f-0836-418d-e5e62946c1aa">
      <Execution id="3a0abe62-1e2e-4ec3-87f0-866fe5c7157f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;40000000000O0000000000000000&quot;,&quot;0&quot;,&quot;66&quot;,&quot;31&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;Bkm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="275fa282-b410-4d0e-58a2-59a4c093a794">
      <Execution id="1e6a71c1-cd73-4295-8646-7b43d583ae6b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;Bkm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;LKLG@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="10a738b5-11f7-8d2b-91d3-6633779e2c4b">
      <Execution id="548a1afe-0308-4cf6-a630-04374180c3e5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;LKLG@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;10&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0e193da8-f513-fe5b-6683-986a53d5a600">
      <Execution id="a7727ff4-2241-4953-a8ef-609e228991f3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;10&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;52&quot;,&quot;'4'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bae34b8b-78bb-0f1e-0361-c3c609e24758">
      <Execution id="65157035-12c4-44ff-b966-cc9acd9b99ff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;52&quot;,&quot;'4'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;22&quot;,&quot;'V'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="056e7bc8-972c-7c12-fb65-563a136c095b">
      <Execution id="1231dbb5-f64a-4f32-8e87-9977c0cdafc4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;22&quot;,&quot;'V'&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3efb5d3d-7072-a56c-4a3a-e06c950ed4b1">
      <Execution id="e0375bac-93a5-4fb0-afb2-98e03da70c36" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MessageType(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000@00&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2168f957-a1f3-93bc-ebaf-6190cde8531d">
      <Execution id="a13a77fd-fb4b-484f-a060-fc57ee3f982f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000@00&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;2000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="059d0acf-bb46-9682-7e97-02cadc6696b9">
      <Execution id="ec5006b7-01f5-4826-97a8-2d7e84e51c96" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;2000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;19&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5cac0706-8221-16ff-eeb5-64881d3c75ac">
      <Execution id="8e3452ad-b06b-472a-ae10-cba06a747d52" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToPort(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;19&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartASpare(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bbcb91be-6e77-7448-eff6-d4317be900a3">
      <Execution id="2178d419-030a-4c92-8667-a1ae6d3199ac" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C0000000000000000000000N0000000000000000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0ca6919c-60eb-ad15-776a-060f72bf457b">
      <Execution id="03173822-40b8-48a9-8ecd-4600627ed53c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C0000000000000000000000N0000000000000000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;0000000000000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="48c28b74-a769-8c31-398c-45a63041f87c">
      <Execution id="7ad0c861-40ff-4ffc-b9cf-1a42ad1c76e2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;0000000000000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e0d21fdd-0b03-b702-79f3-12bd88e2b542">
      <Execution id="73368e7b-e7e1-4e23-89aa-cacc18570a8c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;500000000000000000000000000000000000000000000L0000000000000000000000000&quot;,&quot;0&quot;,&quot;Surveyed&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d289b24c-fe5f-9382-cdac-c29da5cd6d0a">
      <Execution id="2d97658d-86f3-402b-b77c-5f42aade0b11" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;500000000000000000000000000000000000000000000L0000000000000000000000000&quot;,&quot;0&quot;,&quot;Surveyed&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;0&quot;,&quot;'@'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c790654b-a31b-6be1-5187-c398d94e7bc3">
      <Execution id="e6344dbd-35cd-4f4a-af4a-7f1e16346200" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;0&quot;,&quot;'@'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLFBlankLineOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="31e1a5a9-16c9-7f73-1aeb-79b52988c74e">
      <Execution id="d0b85029-0a23-4289-b0a7-70f8b63f4677" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLFBlankLineOnly" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="41d82e1f-da2b-1d11-568b-3bb9ebd052c2">
      <Execution id="727ffa30-f38b-42f9-b7e5-91503c5ce14d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="681d49f3-c1a4-42c8-9889-e7acab7f6cc3">
      <Execution id="5a93b284-3120-436c-a7d4-6da134cdc688" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SafetyRelatedBroadcastParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;50000000000000000000000000000000000000000000000G00000000000000000000000&quot;,&quot;2&quot;,&quot;23&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4bcc0343-270f-e408-5ece-373da2debc90">
      <Execution id="65f687d1-bb14-4ccd-ace6-e585535f4cd8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;50000000000000000000000000000000000000000000000G00000000000000000000000&quot;,&quot;2&quot;,&quot;23&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;3600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eac65b18-a358-2de8-88c0-4e2bbcaaaf03">
      <Execution id="dc6f0a5a-0ba5-4ec0-a8a5-d66558306975" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;3600&quot;,null)" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;50000000000000000010000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b6764b4f-bb6d-c8f9-f1eb-4a4ef88f7d7e">
      <Execution id="7af4328a-583f-4336-9a99-27f8c8e38b03" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;50000000000000000010000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;5&quot;,&quot;-17&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="675ba778-a08e-c48e-1f1c-2539cb263993">
      <Execution id="b7747dfa-bdf0-4277-b18f-c3d1b3447021" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;5&quot;,&quot;-17&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBUnitModelCode(&quot;H000004000080000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c1dc7386-a289-2a43-ca7c-a9907f4128a9">
      <Execution id="7209ea64-10ac-4f4f-a369-7489c862d6f5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBUnitModelCode(&quot;H000004000080000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f8e735d7-3425-7e20-d14b-ae5b8dee262f">
      <Execution id="49b714e0-10a1-46dd-928e-ec942d788994" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="MMSI(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000060&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="09baf7eb-1f66-4f0a-5a47-ce02fc22802a">
      <Execution id="cc5a30f3-88a6-4610-867e-05a075d768e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000060&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b9ac81f8-e330-8f54-8c91-c6de096f0682">
      <Execution id="32f01efc-33af-4411-afc9-a2951be40d1d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_3(&quot;H0000040QPPPPPP0000000000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a684207d-6916-af8f-2310-6018fac5d443">
      <Execution id="c2942bd8-8f78-46e3-846e-1a51f7236940" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_3(&quot;H0000040QPPPPPP0000000000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;44`Uu;AvJEF`g14&gt;V0DV@MQ00000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,&quot;311000365&quot;,&quot;2022&quot;,&quot;9&quot;,&quot;10&quot;,&quot;22&quot;,&quot;40&quot;,&quot;47&quot;,&quot;false&quot;,&quot;14.90464&quot;,&quot;35.99721&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="29a1ba45-19af-c014-98df-2265cd94af87">
      <Execution id="38138b50-6c0f-4be6-8e93-6e3c30d2d60a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BaseStationReportParserSpecsFeature" name="FullMessage(&quot;44`Uu;AvJEF`g14&gt;V0DV@MQ00000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,&quot;311000365&quot;,&quot;2022&quot;,&quot;9&quot;,&quot;10&quot;,&quot;22&quot;,&quot;40&quot;,&quot;47&quot;,&quot;false&quot;,&quot;14.90464&quot;,&quot;35.99721&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c36a81be-ffce-9a9d-9db7-412027b94d46">
      <Execution id="7a990a7d-5815-482d-b176-d4ca622c2a1b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;C000000000000000003Q00000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="87b4c137-12d6-e08a-0616-0a0c7e541904">
      <Execution id="421ac468-88f3-4ca1-9cd1-e33441473836" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="CourseOverGround(&quot;C000000000000000003Q00000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;B00000@000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f4c5e4c3-ecb4-4678-0a45-0e075318543e">
      <Execution id="aaffc70b-e802-4602-bf02-57cfa200137a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MMSI(&quot;B00000@000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000004000000000000000000000&quot;,&quot;0&quot;,&quot;ConstrainedByHerDraught&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b558b161-51be-d7ee-3417-5244b6244d19">
      <Execution id="0de397da-1500-4b9a-9be7-425528b0e002" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000004000000000000000000000&quot;,&quot;0&quot;,&quot;ConstrainedByHerDraught&quot;,null)" />
    </UnitTest>
    <UnitTest name="Two_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedAdjacently" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bc63faa7-3894-7408-c2b8-379a48f22b24">
      <Execution id="e371ce6c-4e18-4e0b-ad86-124f4c5d4300" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Two_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedAdjacently" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;10000000000000000000001d0000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;54&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a03d9afd-4326-5e24-0e7e-ac2f20f591a3">
      <Execution id="01819bd8-44f0-41fe-99fd-97a828efaf78" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;10000000000000000000001d0000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;54&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleUnparseableLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e27c294f-413c-5f33-2866-17e8ef91ff2c">
      <Execution id="7ac34b26-912c-4977-81a7-30df89a2b94e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleUnparseableLine" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;37&quot;,&quot;'%'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1760b0d1-1ee3-4472-2fa1-f56dd1e5bedf">
      <Execution id="511e1e2c-38a4-467e-8cdb-a880c2008265" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;37&quot;,&quot;'%'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;CargoHazardousCategoryB&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="896b3124-2cfa-5348-05c9-35d2c9df9461">
      <Execution id="cf19c1a5-6a25-4193-a363-25c9b926b086" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;CargoHazardousCategoryB&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;ReservedForFutureUse13&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="78984977-a8b2-d459-e574-4d0225d18d94">
      <Execution id="928626a5-7c0b-4c3c-b024-db9237b838e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;ReservedForFutureUse13&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f08334ce-2b65-27b5-1327-876e515dd6dd">
      <Execution id="d6066db8-7d55-4595-b439-3b53c612eeee" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f6d3c818-2378-97f3-6dd0-e9412954d170">
      <Execution id="c64b9e34-1420-4510-b975-2c07797a6b41" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStarboard(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBCallSign(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;LG9847&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="61fbb03e-4a30-41be-22c2-c7721122c7e1">
      <Execution id="edd0bbb9-2fa7-4b33-a253-81686873c0e2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBCallSign(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;LG9847&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;24c`1`001kPEGSLR98IP00462D0s&quot;,&quot;0&quot;,&quot;314180000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2014c4b9-731c-91b6-1b1f-975d2a93aa67">
      <Execution id="d0a953a0-3d7c-4cea-8e2c-dc5d7d26abeb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MMSI(&quot;24c`1`001kPEGSLR98IP00462D0s&quot;,&quot;0&quot;,&quot;314180000&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;100000=000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse13&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0f69575f-a9c9-fc1f-dbde-e8fd2944d1b3">
      <Execution id="3338a079-9511-493f-878f-5a2b133ca345" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;100000=000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse13&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBUnitModelCode(&quot;H0000040000P0000000000000000&quot;,&quot;0&quot;,&quot;8&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7744ff3f-d7ac-7aa2-4bab-0d3c6ea395c4">
      <Execution id="4fac8b9f-2634-43f4-98c9-bba98014ea12" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBUnitModelCode(&quot;H0000040000P0000000000000000&quot;,&quot;0&quot;,&quot;8&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;UtcDirect&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1c551731-8bc4-c7cc-c6f6-6fe822e92e28">
      <Execution id="cf73c75f-8e4b-4cae-b4b5-dbe6da949084" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;UtcDirect&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;50000000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="83d33432-ef67-dde9-8a5e-0a263c8737ff">
      <Execution id="cf330451-915d-4e19-9be1-fb4afa76f12e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;50000000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="IECTagBlockSingleLine(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="27f580ae-6317-bd0d-796f-2b9270018a53">
      <Execution id="4d23ab04-f6b2-4239-a444-3fa633b7753c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="IECTagBlockSingleLine(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;74&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="45c49b25-3cb2-3582-614e-1db47dc7fff5">
      <Execution id="a897991f-ce9c-4dc2-aafa-33076ee7ca60" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;74&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;50000000000000000000000000000000000000000001000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="84aa8b3c-e0d9-3874-ab3d-6d47574a9a64">
      <Execution id="81b0cdcb-52c4-4613-8073-a8637ed8af91" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToPort(&quot;50000000000000000000000000000000000000000001000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="142db06b-dad5-da50-ef51-8aa9a3cdcd86">
      <Execution id="1d022c6d-2b08-4990-9952-a0cfd23d98c6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TrueHeading(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;13&quot;,&quot;31&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7727c02f-bdf8-5893-65cf-fe9294aadc5c">
      <Execution id="94d88247-07ea-4eaa-ad11-233517e4d7c4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;13&quot;,&quot;31&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitude(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a81de4ee-7aab-e81a-5560-c1f4faaef599">
      <Execution id="773510d8-047e-49ba-8f7c-2465ce40a241" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="LongitudeAndLatitude(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RaimFlag(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="66cb65d1-1f9c-006d-e574-286af95ae5e9">
      <Execution id="f36534d6-84e3-46e2-8044-08c09f77136c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RaimFlag(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;100000000000001wwwwh00000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="70ab7756-84e9-25d3-c607-4ab802f85f6b">
      <Execution id="17877ab4-4722-4803-a544-0ea7437ac5a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;100000000000001wwwwh00000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;SAVDM&quot;,&quot;PhysicalShoreStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="83a00785-11d4-f91a-fb8a-8ef30c91d13c">
      <Execution id="073eb842-d4c6-4648-8c5d-18cc893961db" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;SAVDM&quot;,&quot;PhysicalShoreStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;40&quot;,&quot;'('&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b611c92a-8f28-e893-6032-4ca28e2e82c1">
      <Execution id="8b7950ae-2d90-4e46-aca8-d5f39be42961" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;40&quot;,&quot;'('&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToPort(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2af31fc0-d7d1-0c9d-28ad-47e73c1f7d9e">
      <Execution id="7ba49bb0-5f36-4b99-961f-d3c4dd348b40" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToPort(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;3&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="775b2241-ddf5-bb27-6e87-1d523763137e">
      <Execution id="d744790d-3559-4433-8b29-6ca89454e900" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;3&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSubMessage(&quot;10000000000000000000000003ww&quot;,&quot;0&quot;,&quot;16383&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="108ad442-1083-a607-e794-889b6697f857">
      <Execution id="785f41ce-958f-4e19-8a9b-c2be1540a8b7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSubMessage(&quot;10000000000000000000000003ww&quot;,&quot;0&quot;,&quot;16383&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;1000000000000000000000008000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="776f729c-c702-a912-a873-394f7d3a19e6">
      <Execution id="a50fc8c9-e26f-4fa2-a7f4-88855a8abc9d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;1000000000000000000000008000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;44&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b3ed4072-c962-5dfa-d39f-11e0681c06a1">
      <Execution id="2580d793-adfe-439e-8a5a-b5de9f968b47" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;44&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;?913QK18Uf;0D00&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;605086060&quot;,&quot;0&quot;,&quot;304462000&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="887d3956-b829-d654-445b-3aed805427de">
      <Execution id="807e72a6-f838-42fa-b56a-36b988e69bc3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.InterrogationSpecsStepsFeature" name="FullMessage(&quot;?913QK18Uf;0D00&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;605086060&quot;,&quot;0&quot;,&quot;304462000&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABC0&quot;,&quot;0&quot;,&quot;18&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="22b971ac-7cfd-128d-ec05-0e2ab786d957">
      <Execution id="32b174b8-e73c-4a0f-942f-24a5d46f9e08" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABC0&quot;,&quot;0&quot;,&quot;18&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;59&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="21543dbb-4272-a14c-cda7-4aff8dd53072">
      <Execution id="0e1ea650-85d4-4ef1-83f4-60f41c1f288c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;59&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;24c`1`001kPEGSLR98IP00462D0s&quot;,&quot;0&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b3ff0599-7dc1-c225-76b1-8a0a351f95a7">
      <Execution id="7074feca-94d0-4875-9b37-984e39c18438" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;24c`1`001kPEGSLR98IP00462D0s&quot;,&quot;0&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;2&quot;,&quot;-35&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a1395b97-7898-d7b6-38d7-ca96e604ce52">
      <Execution id="247e3557-d12e-4adb-993c-f65e3885abf8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;2&quot;,&quot;-35&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;33&quot;,&quot;'!'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="023a340e-a495-c32c-2a2d-e3f5d7e165e6">
      <Execution id="48c2db02-1d0d-48e5-a33c-229ca9bbeefe" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;33&quot;,&quot;'!'&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000&lt;0&quot;,&quot;0&quot;,&quot;IntegratedNavigationSystem&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5eada7fc-2acc-aea8-35b1-6fca73adf22a">
      <Execution id="2517aa33-fab1-44c2-b656-f9244e849a23" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000&lt;0&quot;,&quot;0&quot;,&quot;IntegratedNavigationSystem&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B0000000000000000000000P0000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6803eb75-8cd3-f12d-bf82-4c52a27c5f5a">
      <Execution id="339630a3-6a9b-4835-a697-991da281475c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B0000000000000000000000P0000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000D00&quot;,&quot;0&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="29626d6f-a10f-191a-0857-b5903edacc62">
      <Execution id="f23e6389-5823-4237-98ac-e1e2287a614f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000D00&quot;,&quot;0&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessages(&quot;3&quot;,&quot;3&quot;,&quot;0&quot;,&quot;3451&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9374b079-aa6d-1c74-c345-7cc1d2bc42db">
      <Execution id="2d24e8d9-d5ff-429d-9093-000fd03d80eb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessages(&quot;3&quot;,&quot;3&quot;,&quot;0&quot;,&quot;3451&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000003t00000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ab292012-e9ce-2c1c-9d0c-73ab9d04ddff">
      <Execution id="e1b2a0e2-63f5-49ae-9417-a3d343473a9a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000003t00000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="Two_FragmentMessageFragmentsReceivedAdjacently" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="124ac23c-d5fa-563e-a206-5b06f4012fff">
      <Execution id="efaf47be-8f42-4609-8756-1878a1dd2459" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Two_FragmentMessageFragmentsReceivedAdjacently" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000100000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eb2b232f-7bce-1b3d-8b4d-4643f2d56fe0">
      <Execution id="23c32239-b3aa-4416-91c0-48029e0533b7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000100000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;6&quot;,&quot;-34&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="da1fbd70-dd9b-803e-b84c-c50a6a07b17f">
      <Execution id="f6960101-057b-4c60-a90f-8f18b141d946" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;6&quot;,&quot;-34&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;13&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7152799f-ea99-d02c-7439-43b04cc6e5c4">
      <Execution id="8f33794c-21bb-42c2-9d7b-8e9ecbf27a9e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;13&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="00b192c1-97a2-fed1-74b7-a377d279b13b">
      <Execution id="16081122-fce1-40e1-9e7d-53286be4082a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;10000000000000000000001f0000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;55&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b15165ff-2dab-597c-b73b-81c42759809a">
      <Execution id="f2d8909c-e588-44ac-98b1-b3aa7a3323b6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;10000000000000000000001f0000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;55&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;0000000000P00000000000000000&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="96b64768-99c3-5c99-ee94-4c6601d3166c">
      <Execution id="89355c4a-a696-40de-a61b-b91e209b32d1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;0000000000P00000000000000000&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;61&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="453a25f8-62d3-32f3-7562-44a6236b5e74">
      <Execution id="7832848f-f78f-41c1-991d-61046c67c6dd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;61&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;C00000P000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ab8fb1f5-9884-5e74-0e57-febba0b3f273">
      <Execution id="52f221a4-44fc-4fae-bda4-e52336dee12f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="MMSI(&quot;C00000P000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ca38d60f-263b-6c21-df05-c79882baf833">
      <Execution id="b701e2f6-e4b8-4913-9b34-488a2072919d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="SpeedOverGround(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;12&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="288e331f-dd13-e90a-6db1-d3ccaf6157b9">
      <Execution id="c5b55a1a-b4d3-4c29-b129-2433c0b224f5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;12&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;C000000000000000000000000000000000000000000000000OP0&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d483fbac-e797-3396-f5ca-7c37c7527fb8">
      <Execution id="30707f95-9f49-418b-99f7-5c2a58c85e14" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToStarboard(&quot;C000000000000000000000000000000000000000000000000OP0&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;5000000000000000000000000000000000000000wp00000000000000000000000000000&quot;,&quot;2&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="45ae910d-9968-b23e-8c68-f02256bfc65d">
      <Execution id="339232a0-e844-4aec-ba6f-30b52ab47480" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToBow(&quot;5000000000000000000000000000000000000000wp00000000000000000000000000000&quot;,&quot;2&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;50000000000000000000000000000000000000000000000000000000000000000000004&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dba5a901-a55c-b2bd-b537-bf3a2387f350">
      <Execution id="453e219f-b989-4064-98d3-b7dfc18ce4f2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Spare(&quot;50000000000000000000000000000000000000000000000000000000000000000000004&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d70a07d5-8a46-21fb-ca1a-d033e0fbb3e0">
      <Execution id="9f8712f2-2a12-46e7-8491-7397d5cd7ff8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToStern(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;BCm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c476bd87-46cc-55ec-0afc-0ee1f96595b0">
      <Execution id="e862ff48-4e1a-46d3-a7b2-4034377aeafd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;BCm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C000000000000000000000000000000000000000000000000007&quot;,&quot;0&quot;,&quot;7&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="20a8bf3c-7475-9033-7979-b7f3fdaf7096">
      <Execution id="be1c2315-3315-4ac5-9fe7-e758b644481a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C000000000000000000000000000000000000000000000000007&quot;,&quot;0&quot;,&quot;7&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;50000000000000000000000000000000000000000000000100000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="678a9af5-35f2-f97c-2cfd-2c9e04eda840">
      <Execution id="8e79384f-37d4-4bbd-87ad-7b03b0648f94" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;50000000000000000000000000000000000000000000000100000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBShipType(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;Fishing&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="44c899c9-4808-4df2-dde7-1ef4ef0ae76c">
      <Execution id="4922400c-eb05-477a-9bfa-fb45046bcb2a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBShipType(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;Fishing&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessages(&quot;3&quot;,&quot;2&quot;,&quot;0&quot;,&quot;3451&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3d359916-4a96-2c79-b7bb-dfd62b894734">
      <Execution id="448ba159-ca8c-4996-b4cf-b10d9577a399" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessages(&quot;3&quot;,&quot;2&quot;,&quot;0&quot;,&quot;3451&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000&lt;00&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="171cae58-1142-09ec-0bec-37f972db7aed">
      <Execution id="26f9e5e9-f4c5-470b-ba0d-1ab678ea7b32" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000&lt;00&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;50000000000000000000000000000000000000000000080000000000000000000000000&quot;,&quot;0&quot;,&quot;Glonass&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d08e0394-7ad6-f60f-f408-82b1c54ceffa">
      <Execution id="a94db369-8b01-4f3b-a006-48ebb924c010" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;50000000000000000000000000000000000000000000080000000000000000000000000&quot;,&quot;0&quot;,&quot;Glonass&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartASpare(&quot;H00000000000000000000000000w&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="09349440-8c4e-7e04-3c59-e7568a74ec7e">
      <Execution id="80df6597-4240-44d4-b325-86f0502e967f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H00000000000000000000000000w&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWherePaddingCommaPresentButValueMissing" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e78c3666-405f-6998-272c-4e3f18482072">
      <Execution id="e3220856-a5a0-4b42-92a2-15f70ddac8f1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWherePaddingCommaPresentButValueMissing" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;H@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8641f56f-c269-6ebd-e4c1-cbc4ae3817a4">
      <Execution id="513fb497-27bb-4f34-88c7-929422563b43" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;H@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;K00000P00000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7848174c-191f-1c05-982b-e4eaac58942d">
      <Execution id="c5d1313d-3331-4f39-a119-319241a40cb5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="MMSI(&quot;K00000P00000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMMSI(&quot;H&gt;eq`d@00000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e599713f-6235-6af3-800d-a3c888f8e708">
      <Execution id="66918264-a21a-4c80-8cc5-8f9f3b7192e3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMMSI(&quot;H&gt;eq`d@00000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;5000000000000000000000000000000000000000000000@000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3ba23308-6541-408c-963a-7fb1a03f105c">
      <Execution id="7bf3a5bf-0be3-470e-9a34-4b98fa005a7c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;5000000000000000000000000000000000000000000000@000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMessageType(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3736d342-7e1d-842a-14d6-58f987c7f4d1">
      <Execution id="219a6c6d-597c-4514-b7c4-5a1006c4536f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMessageType(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;PortTender&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a88ada19-9d3d-a3db-ebff-91a30e2921b2">
      <Execution id="49f0b920-9348-46e9-8bd9-5abcd74d9a5c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;PortTender&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBRepeatIndicator(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5041a295-0876-44bc-8958-3b501f8b6cb4">
      <Execution id="936e0e6c-9bdb-4ff5-8ab2-74fc69b28fe1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBRepeatIndicator(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;55AQcl42D&gt;PTQ3G7C63NmL5HE&gt;2222222222221J28B545en08im@DQ2CQp43k0D`1CD4cP&quot;,&quot;2&quot;,&quot;27&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="33856094-da52-21b4-2a57-1287f35706b8">
      <Execution id="da40250e-bf27-4ecc-b089-3673b9e663a4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;55AQcl42D&gt;PTQ3G7C63NmL5HE&gt;2222222222221J28B545en08im@DQ2CQp43k0D`1CD4cP&quot;,&quot;2&quot;,&quot;27&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3ad942ba-294a-1c2c-a60c-4d14b26dc4ab">
      <Execution id="8adcfccd-ad28-45c3-aba8-e233376c1c7e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="CourseOverGround(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;6&gt;oHhp000000&gt;da30000@00&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;997601504&quot;,&quot;0&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;235&quot;,&quot;10&quot;,&quot;4&quot;,&quot;a30000@00&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1806a801-45ca-e2d6-481b-b9db5e179773">
      <Execution id="e407f8c9-4e92-46be-a689-ed5f7eb90a96" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedBinaryMessageParserSpecsStepsFeature" name="FullMessage(&quot;6&gt;oHhp000000&gt;da30000@00&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;997601504&quot;,&quot;0&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;235&quot;,&quot;10&quot;,&quot;4&quot;,&quot;a30000@00&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;&lt;9N`1nBD@=8L7??4P41IQP5D1PD?PBFPilrhh&lt;DP`ED3Pckrhha0&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;636092889&quot;,&quot;0&quot;,&quot;621819015&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot;GOOD DAY! ETA TO RV 14:00LT (UTC +3:00)@\&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f20f1ba3-f4d3-99e3-9367-30f14257930d">
      <Execution id="69a817cb-1e7e-429c-8063-7c275f17201a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedSafetyRelatedMessageParserSpecsStepsFeature" name="FullMessage(&quot;&lt;9N`1nBD@=8L7??4P41IQP5D1PD?PBFPilrhh&lt;DP`ED3Pckrhha0&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;636092889&quot;,&quot;0&quot;,&quot;621819015&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot;GOOD DAY! ETA TO RV 14:00LT (UTC +3:00)@\&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;UtcIndirect&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="072ec24f-e6cc-df82-a1ed-b84eca07b73a">
      <Execution id="3f7aa165-e86a-4eaa-82a9-4c136c290c40" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;UtcIndirect&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="96dab6e3-da35-a803-042c-4325f95f86ca">
      <Execution id="0dc2bca2-c922-482b-980a-fb6c1ec80d8d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="04f96f4a-920b-e400-c28e-c29aaf25d2de">
      <Execution id="861bad28-cdc4-468f-9b13-aa92be6a251b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleUnparseableLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8cd2421b-49d9-4c32-e188-ac30042b98a1">
      <Execution id="d08b756c-403c-4c88-8925-fe56b2e9944b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="SingleUnparseableLine" />
    </UnitTest>
    <UnitTest name="PartBRepeatIndicator(&quot;Hh00004000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="feb287eb-d373-ddc9-76bc-26e4362d8643">
      <Execution id="f126c31b-1bfd-471e-9c33-e6de765a72e1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBRepeatIndicator(&quot;Hh00004000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_4(&quot;H000004012300000000000000000&quot;,&quot;0&quot;,&quot;ABC&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="336feeff-fece-cd62-3351-e18a873fa550">
      <Execution id="6439c4c6-9ebe-4450-8586-2e54ecab7283" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_4(&quot;H000004012300000000000000000&quot;,&quot;0&quot;,&quot;ABC&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;@02a4KQD2cFP&lt;P0000000500&quot;,&quot;0&quot;,&quot;16&quot;,&quot;0&quot;,&quot;2770030&quot;,&quot;0&quot;,&quot;352497000&quot;,&quot;200&quot;,&quot;0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="54f19680-fed7-f01e-948a-3235a655b51b">
      <Execution id="698b1ce2-a74a-4dae-ac87-01dc71aab9a4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AssignedModeCommandParserSpecsStepsFeature" name="FullMessage(&quot;@02a4KQD2cFP&lt;P0000000500&quot;,&quot;0&quot;,&quot;16&quot;,&quot;0&quot;,&quot;2770030&quot;,&quot;0&quot;,&quot;352497000&quot;,&quot;200&quot;,&quot;0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;C0000000000000P0000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5058a9d6-b9ef-7fef-c417-14cf926f34a3">
      <Execution id="b1fd51cc-0151-4cf5-aca8-50239ac5bbc8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="LongitudeAndLatitute(&quot;C0000000000000P0000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000008000000000000000000000000&quot;,&quot;2&quot;,&quot;16&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="db8e29ee-17f0-0eeb-d471-64fd1d0fb8a1">
      <Execution id="ce2f5f75-ba99-4848-92ba-4555cccd8e24" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000008000000000000000000000000&quot;,&quot;2&quot;,&quot;16&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;10000000000000000000001p0000&quot;,&quot;0&quot;,&quot;60&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="704a5629-4cd6-a984-892b-27444d492197">
      <Execution id="72818764-2917-4092-b80d-7d69816ebc4c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;10000000000000000000001p0000&quot;,&quot;0&quot;,&quot;60&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;50000000000000000000000000000000000000000000000200000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9860baa1-af05-9206-7968-fea126a8aefb">
      <Execution id="0e2e0bf9-72b8-423a-9b4f-7a6e5f521f3f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;50000000000000000000000000000000000000000000000200000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;13&quot;,&quot;'M'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="216fa6c0-e22b-85e6-5d3a-2b0ad0ec66a2">
      <Execution id="7d35719f-c7b6-4098-aa69-04fabdff5da2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;13&quot;,&quot;'M'&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;K00000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c7f54bf3-60c4-dc88-f50d-b2544a8110c7">
      <Execution id="ce1c94e0-4193-45ce-9282-456deeb9f576" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="MMSI(&quot;K00000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;C&gt;eq`d@000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d598b20f-fbee-cb34-7332-f5082420feec">
      <Execution id="b0ebb594-0f2f-4e2d-8cec-89bf364b274a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="MMSI(&quot;C&gt;eq`d@000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="Message22Flag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a5f47be4-f5eb-67bd-5ab1-852c808a2d6c">
      <Execution id="be6c724c-ac37-4a40-8fce-5780a9cc0064" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="Message22Flag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;C000000400000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="75110cfd-aae7-86e5-dc47-16f86b65a3be">
      <Execution id="46836a13-d2ba-4b9c-8ebd-f25521b20448" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;C000000400000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H00000&lt;000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="780df155-9b20-b2b2-d16a-95572a1ee51d">
      <Execution id="ed0707f9-c5c1-4351-84e6-0c5c2190f424" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H00000&lt;000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6b51aaf2-2584-b6bb-c8bb-74e9df8cb2a3">
      <Execution id="8bfba817-41e9-48c0-a115-6cc527c38cc8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="AssignedFlag(&quot;C00000000000000000000000000000000000000000000000000@&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c1cc4239-760c-473e-b0c2-75fdf0e4736b">
      <Execution id="c8c6e413-0556-4963-bac4-167f9a26eea4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="AssignedFlag(&quot;C00000000000000000000000000000000000000000000000000@&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;53m7TH800000hS;3?P0Hu&lt;p604ltp0000000001?0P;5340Ht5531Wu=N=eN=u000000000&quot;,&quot;2&quot;,&quot;CargoNoAdditionalInformation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0850eee5-2cf3-5613-1e91-faf7c8ab3607">
      <Execution id="07cd1569-3442-4fac-b123-bde1e3131f7d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;53m7TH800000hS;3?P0Hu&lt;p604ltp0000000001?0P;5340Ht5531Wu=N=eN=u000000000&quot;,&quot;2&quot;,&quot;CargoNoAdditionalInformation&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;11&quot;,&quot;55&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ade64053-e0b2-d3a3-9c98-8d8104dee21c">
      <Execution id="07705f98-22ed-4ab0-bd28-911772c7126b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;11&quot;,&quot;55&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;1211&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="72796d72-d947-2a45-ebf8-ced6db4cecb4">
      <Execution id="b91ee9ea-d57d-48cf-b5ee-34410c60e238" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;1211&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;3000000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a4193d59-1aa0-0143-e9bf-4542f385da99">
      <Execution id="804793f8-676f-4d59-b7db-8aae4857a9b4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;3000000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;0000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6df9afa2-d06b-689e-5a74-517d0b0ed892">
      <Execution id="3d7f2c3b-4455-40cc-8210-b7fa37ad2df0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;0000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ae4bbadc-d58f-132c-7708-33d693cb8597">
      <Execution id="aec3529c-f93b-47d2-b3cc-99400b1bf56a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMMSI(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d8a1a05c-d4f6-06f9-1743-0dd92c1c5565">
      <Execution id="dc51fb67-4c46-4318-8d28-1cdb340d7520" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMMSI(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;D02;bMhRl@fq6DA6DB0i6D0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;2288247&quot;,&quot;0&quot;,&quot;557&quot;,&quot;1&quot;,&quot;0&quot;,&quot;750&quot;,&quot;1125&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1125&quot;,&quot;288&quot;,&quot;3&quot;,&quot;0&quot;,&quot;1125&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="923c683d-3832-13ef-fba0-99eb35a73d99">
      <Execution id="4b19edf1-3fca-4443-bfd4-ed6182e56d83" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.DataLinkManagementMessageParserSpecsStepsFeature" name="FullMessage(&quot;D02;bMhRl@fq6DA6DB0i6D0&quot;,&quot;0&quot;,&quot;20&quot;,&quot;0&quot;,&quot;2288247&quot;,&quot;0&quot;,&quot;557&quot;,&quot;1&quot;,&quot;0&quot;,&quot;750&quot;,&quot;1125&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1125&quot;,&quot;288&quot;,&quot;3&quot;,&quot;0&quot;,&quot;1125&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="InterleavedMulti_FragmentMessages" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c7a70460-1cf0-d41d-42af-693bc4135ef7">
      <Execution id="217a89d9-4d3a-4a24-a2af-cec1a7610381" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="InterleavedMulti_FragmentMessages" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitude(&quot;B0000000000000P0000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fe4aec47-605e-5a1d-4b60-5cb80fd16085">
      <Execution id="ceed2a33-93be-4428-bbf8-3ca000e796e0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="LongitudeAndLatitude(&quot;B0000000000000P0000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleCRLFBlankLinesOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d82d115a-487c-cdd2-35d3-b89042c5d6b8">
      <Execution id="f245859a-af38-4e4e-86f2-8217ee4f0630" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleCRLFBlankLinesOnly" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;B000001000000000000000000000&quot;,&quot;0&quot;,&quot;16&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e3f63fde-1195-51e6-f7e3-976ee2be3a83">
      <Execution id="339f1fe6-ea35-4785-a0c9-be16a01ba83d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;B000001000000000000000000000&quot;,&quot;0&quot;,&quot;16&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBRepeatIndicator(&quot;HP00004000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a628e807-15e2-021e-1aa2-7b980bd02ca0">
      <Execution id="32013774-6fda-4daf-a18c-7be1beca314d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBRepeatIndicator(&quot;HP00004000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000020000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7395e4d9-3f7e-a43b-ddaf-daa2e0ca97f1">
      <Execution id="518111e5-9c46-4cf4-a96d-c06edd888ee2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000020000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;C000000007wwwwP0000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="da8d8202-c59b-56b2-a443-b08269f53f46">
      <Execution id="68fd4f88-2935-4582-9305-75127bc5fcc2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="LongitudeAndLatitute(&quot;C000000007wwwwP0000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9657a21e-47cc-a3fb-d50e-f6ba809da636">
      <Execution id="769a7768-f2f4-41f3-928e-6925281d2466" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToPort(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aa14bfae-7e79-5d1c-68d4-fe90d986debc">
      <Execution id="9602af1c-f2df-4309-98c7-87e7bc3a75c4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SingleSlotBinaryParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;B00000000000000000003wP00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c4593ebb-b6fa-d157-6f66-e7a3618757e5">
      <Execution id="dab2a53f-781d-41f1-a8ef-9b94c88aa0e2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TrueHeading(&quot;B00000000000000000003wP00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartASpare(&quot;H000000000000000000000000010&quot;,&quot;0&quot;,&quot;64&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="377f3b3a-c8ae-c7ef-41f1-74d2c7caaeb4">
      <Execution id="683ee9ae-5f3b-4ca6-bbaf-e59fac4b223c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H000000000000000000000000010&quot;,&quot;0&quot;,&quot;64&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSubMessage(&quot;13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq&quot;,&quot;0&quot;,&quot;2233&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="642bd812-134b-cd6b-46c0-17a30ad10d0f">
      <Execution id="dc5798df-8257-4ecc-9cfc-6c12163f6cb1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSubMessage(&quot;13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq&quot;,&quot;0&quot;,&quot;2233&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B000000000000000003Pt0000000&quot;,&quot;0&quot;,&quot;3599&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d4a15018-5745-15be-4c96-67be687caedb">
      <Execution id="1fab2d70-2cce-47d4-8e51-73d36b29b939" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B000000000000000003Pt0000000&quot;,&quot;0&quot;,&quot;3599&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H00000300000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b8992405-f960-0387-8c6c-a5bd8a30f5c1">
      <Execution id="2e38b279-eb73-49f8-ab7e-c3c58f533b66" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H00000300000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="321b9524-f118-ccd2-b63b-ac508e63d626">
      <Execution id="16fd2927-62cc-4268-982b-c6646f0ed82f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedBinaryMessageParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="IEMTagBlockButNmeaGroup" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="77b4f4e0-8658-1e3c-feed-c54181211703">
      <Execution id="671bd3bd-86b0-4c02-9e7c-cb6262ceb463" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="IEMTagBlockButNmeaGroup" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B000000000000000003Q00000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="069b1e62-8cb8-e7d9-3fff-5afc87978ab6">
      <Execution id="d4b03bef-9b39-45d1-8cf2-caf0b1b3b30d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B000000000000000003Q00000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9a45e0ce-1968-c407-44ff-a6a9b78867fe">
      <Execution id="23f284f6-08bc-4467-b587-5819cf2e431e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="NmeaTagBlockSingleLineWithGroup" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="34a8b516-11fb-b76f-8e00-a516f684748d">
      <Execution id="bbb43410-7367-48c0-b7bc-a3a9c4238507" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="NmeaTagBlockSingleLineWithGroup" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;500000000000000000000000000000000000000000000H0000000000000000000000000&quot;,&quot;0&quot;,&quot;IntegratedNavigationSystem&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aee4fb23-4723-0c3f-81fe-46eb3a60092d">
      <Execution id="2841c4b5-00d9-4514-bafe-5419fbd36291" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;500000000000000000000000000000000000000000000H0000000000000000000000000&quot;,&quot;0&quot;,&quot;IntegratedNavigationSystem&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;5&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="208b18eb-01a2-d978-255f-cf5932305d29">
      <Execution id="e80314c0-38fa-4491-9410-0c07effef1d9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;5&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;:5Tjij10WiuP&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;374125000&quot;,&quot;0&quot;,&quot;271042520&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1ad89db8-b4dc-3de3-051b-44471d08e1fe">
      <Execution id="cff33f4e-9183-49f2-9c2a-fb179ed6d4d2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="FullMessage(&quot;:5Tjij10WiuP&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;374125000&quot;,&quot;0&quot;,&quot;271042520&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;10000000000000000000001v0000&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="349633e9-a9b7-3daf-748b-773508b0900f">
      <Execution id="9181c386-bf36-4303-9ca7-c9ab7bc0492e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;10000000000000000000001v0000&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e6f0a632-aedf-3d30-7401-fc58ea01e176">
      <Execution id="58d8bb45-b6b9-426a-8e00-ea62c84c1a74" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DSCFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="469ffce6-b0be-9f13-4b85-e39790b88e1d">
      <Execution id="d165e9b3-b018-4001-beeb-56303a1262a9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DSCFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="deccf647-0fab-b1b9-e228-e802eb3dde39">
      <Execution id="a54ca28f-856a-45dd-9407-0886a97fa3c2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;RestrictedManoeuverability&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6a0027da-5bdf-7929-ad57-372b4b750f35">
      <Execution id="55ddb34e-6a85-4965-a428-f6389a61f518" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;RestrictedManoeuverability&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;15&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d73da228-b736-c506-4b90-2c56e181e7c5">
      <Execution id="f2447020-88ba-4cb4-ad6a-dd100dfc9181" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;15&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e4bd6d87-cbfa-e535-2730-50f3e1d68da7">
      <Execution id="e3a3ef24-48f8-4ec1-bc19-4faa7cc961c8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToBow(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleCRLFBlankLinesOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="210dd2f2-f6e5-7324-9d3b-0b6365bf71c4">
      <Execution id="9c7af05a-25e0-46ed-88e2-87c969b0a98f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleCRLFBlankLinesOnly" />
    </UnitTest>
    <UnitTest name="NmeaTagBlockSingleLine(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e06de842-6fec-2f15-f145-2f83acda7674">
      <Execution id="f7ac0dfe-a087-43eb-abec-f5608901552c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="NmeaTagBlockSingleLine(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;B0000003wh000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="11d3a129-53db-aa59-4c2c-5ae5e06bed1f">
      <Execution id="c6d50ee0-6a59-4f68-a314-fec060096e9c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="SpeedOverGround(&quot;B0000003wh000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;1601&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6c13e3d8-7ebd-634f-673c-0e19d4dc5450">
      <Execution id="d1ca92a1-676d-46df-a1ce-e35d0af5740b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;1601&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="44be0c2c-36c0-437d-8e12-8d4046318e29">
      <Execution id="acd8b8e9-cc0f-41a3-97c2-2099c7f9cc41" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AidsToNavigationReportParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="PartBCallSign(&quot;H00000400000000QPPPPPP000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9871e5b8-1181-6683-ecd1-13364afde5e0">
      <Execution id="66a599d7-0010-4799-9fd3-36f2d18889ed" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBCallSign(&quot;H00000400000000QPPPPPP000000&quot;,&quot;0&quot;,&quot;!&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="78ca5cfe-7f25-a252-6d84-279a9fe58296">
      <Execution id="c13531a3-0116-4dd3-8dc2-bfe6a2eac580" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;2000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2c487e8e-1bbb-e5a8-7ba3-8d5c8b9c45ac">
      <Execution id="b0d89e98-7307-42de-b2b5-318305d9a51f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;2000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;Kk=&gt;UB03fbh:R`7d&quot;,&quot;0&quot;,&quot;27&quot;,&quot;3&quot;,&quot;215197000&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;61099&quot;,&quot;1349&quot;,&quot;16&quot;,&quot;123&quot;,&quot;false&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="89492880-8875-cc9a-2241-94825e82827f">
      <Execution id="c33eb7bf-5bff-49ac-a3a0-a7f8e46bae73" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.LongRangeBroadcastMessageParserSpecsStepsFeature" name="FullMessage(&quot;Kk=&gt;UB03fbh:R`7d&quot;,&quot;0&quot;,&quot;27&quot;,&quot;3&quot;,&quot;215197000&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;61099&quot;,&quot;1349&quot;,&quot;16&quot;,&quot;123&quot;,&quot;false&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;154&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4c7995db-15bd-3e77-7b92-651c88f6a7cd">
      <Execution id="5f26064b-efb5-4f4f-ad69-e34fb89dbf64" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStern(&quot;548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000&quot;,&quot;2&quot;,&quot;154&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;42&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6c03c3c9-dc70-856d-bcdb-d241181d0930">
      <Execution id="d51b9ca6-6f30-4f9a-bf35-177af1d84a95" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;42&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;C000000000000000004000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8b2f87e0-a176-53e2-38fd-811cdd2a11e2">
      <Execution id="57c84cad-7f28-4c1f-9093-a39613bb38d8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="LongitudeAndLatitute(&quot;C000000000000000004000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;4&quot;,&quot;29&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="674a2039-9e30-0e88-bd6b-59eae87d2ee0">
      <Execution id="da06e79e-83c3-41a8-912b-f15ff1da4710" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;4&quot;,&quot;29&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;5000000000000000000000000000000000000000000000000P000000000000000000000&quot;,&quot;2&quot;,&quot;128&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3dfeb67b-6bf3-b2c6-4f52-56fc4e978a18">
      <Execution id="c96b59d1-8650-4ef7-b2f7-00361d8c2fd0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;5000000000000000000000000000000000000000000000000P000000000000000000000&quot;,&quot;2&quot;,&quot;128&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;28&quot;,&quot;'\\'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3631668e-100c-c00e-2f32-ca9ca70b0f89">
      <Execution id="7cd4049d-4654-4656-b12c-7bd6e86e0b4c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;28&quot;,&quot;'\\'&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="10d482f8-f8b8-3034-8eb1-3c583cdb999c">
      <Execution id="f89cde31-c639-446e-86cb-1e306c8dcaaf" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToBow(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="IMONumber(&quot;5000003cNJ;500000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b9078cc5-993f-a717-a283-1d131b07ea5c">
      <Execution id="2bedfef1-ceb9-4be9-9eb3-2c59fbb4b85c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="IMONumber(&quot;5000003cNJ;500000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;KC5E2b@U19PFdLbMuc5=ROv62&lt;7m&quot;,&quot;0&quot;,&quot;27&quot;,&quot;1&quot;,&quot;206914217&quot;,&quot;false&quot;,&quot;false&quot;,&quot;2&quot;,&quot;82214&quot;,&quot;2904&quot;,&quot;57&quot;,&quot;167&quot;,&quot;false&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="41cd7e55-593f-9adf-ad9e-d0e2dfe10f3a">
      <Execution id="a88f042d-6363-464d-ab68-6169d42a2014" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.LongRangeBroadcastMessageParserSpecsStepsFeature" name="FullMessage(&quot;KC5E2b@U19PFdLbMuc5=ROv62&lt;7m&quot;,&quot;0&quot;,&quot;27&quot;,&quot;1&quot;,&quot;206914217&quot;,&quot;false&quot;,&quot;false&quot;,&quot;2&quot;,&quot;82214&quot;,&quot;2904&quot;,&quot;57&quot;,&quot;167&quot;,&quot;false&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMMSI(&quot;H00000@00000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ebb9df6d-2299-db14-a33b-d236a74b068d">
      <Execution id="8253af2c-452f-43e7-83c8-a2adcbcd74b1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMMSI(&quot;H00000@00000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;HARSTAD@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c82b7739-1790-f643-de72-a2fef7a86c09">
      <Execution id="e3750cdf-c566-4555-8b2b-06ceb7a52a08" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;HARSTAD@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;127&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dd4b69a9-9e19-cd79-e706-edabf76e54ee">
      <Execution id="768f4f6e-a8fd-44e4-804f-a37fc864deb2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;127&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="77f91d6a-6da7-0449-bff8-f94c0a3db1ff">
      <Execution id="09ec5343-e574-4487-b6dd-c209a75c22a6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="Padding" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="26477b6e-5439-5e66-f49e-f495e0563c09">
      <Execution id="e35ac176-69bc-4c20-9e89-378774e62ce1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="Padding" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,&quot;0&quot;,&quot;9&quot;,&quot;510&quot;,&quot;3348&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,&quot;1375485,350474,16698374,2427902,13567503&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6f0553c8-abf0-0783-e116-bd9ecc7354ab">
      <Execution id="c62145bc-1704-4088-9427-a18b9086154d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.DifferentialCorrectionDataParserSpecsStepsFeature" name="FullMessage(&quot;A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,&quot;0&quot;,&quot;9&quot;,&quot;510&quot;,&quot;3348&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,&quot;1375485,350474,16698374,2427902,13567503&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBShipType(&quot;H000004E00000000000000000000&quot;,&quot;0&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="30614867-9fa2-4396-278d-119b26f828af">
      <Execution id="316f97e9-bb87-4dc0-a73f-86582d59f7f8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBShipType(&quot;H000004E00000000000000000000&quot;,&quot;0&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;500000P0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d816c403-8230-a74d-4c74-d69637392b7d">
      <Execution id="89d69754-f379-45b5-aa90-9a97c3fda20e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;500000P0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13B6BP80000jt=tPk:Isf:F@0538&quot;,&quot;0&quot;,&quot;UnderWaySailing&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="966f28aa-b87e-6ac2-c900-9d582c273d12">
      <Execution id="552b2e80-74c0-46f1-b82e-b63f71e6521c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13B6BP80000jt=tPk:Isf:F@0538&quot;,&quot;0&quot;,&quot;UnderWaySailing&quot;,null)" />
    </UnitTest>
    <UnitTest name="Two_FragmentMessageFragmentsReceivedWithSingle_FragmentMessageInTheMiddle" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f9ea8c10-39f1-6b8c-d242-e390b7c20e00">
      <Execution id="81a81229-f098-4da7-a108-8169268c8789" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Two_FragmentMessageFragmentsReceivedWithSingle_FragmentMessageInTheMiddle" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;15&quot;,&quot;'O'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ddb1d513-7115-2d96-22fe-782ee4ac835e">
      <Execution id="c14b02dc-af35-4a79-abd5-2c11aa08ac33" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;15&quot;,&quot;'O'&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,&quot;24&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="359e89a8-1828-241f-cc5f-821a3c7f2480">
      <Execution id="b2f3c165-e367-4d19-b04e-ddee0f533578" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,&quot;24&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;Ch00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d0e56e6d-6f86-8a13-4d4b-8acc621ef073">
      <Execution id="6cf557fc-e5d7-4139-af58-1e9579b19346" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RepeatIndicator(&quot;Ch00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;3&quot;,&quot;'C'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c99e9145-c524-cf03-398d-c687520a9fac">
      <Execution id="83252ad6-ed2f-4879-b6a6-607b087a13e6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;3&quot;,&quot;'C'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;8&quot;,&quot;'H'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="381e1d24-0a3b-7d94-0e6e-a09dc8472d09">
      <Execution id="b5d1f336-b001-4914-937e-32dcba0f41da" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;8&quot;,&quot;'H'&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;3390490&quot;,&quot;37393824&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="03d351ba-88c1-7fe2-b09e-51c7c615b3cc">
      <Execution id="ef4201ba-f0a8-4674-9913-bade755d2ceb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;3390490&quot;,&quot;37393824&quot;,null)" />
    </UnitTest>
    <UnitTest name="BandFlag(&quot;B00000000000000000000000P000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2a9f919c-1873-9a58-c5f8-ebc199729872">
      <Execution id="a00b8d3f-7ad2-43f1-8ab1-0c7f5890ff16" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="BandFlag(&quot;B00000000000000000000000P000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cecb7428-839f-83fe-3c50-23f6cddf3385">
      <Execution id="ffea4620-aefc-466a-8372-b25812e47db0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="647bd5c8-589d-99b8-475e-41e2fac8d593">
      <Execution id="a25a3099-f8ff-42d2-8970-d9da1a5abd88" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;100000000000000000000@000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e623abcf-d035-820d-d533-cba826ec3534">
      <Execution id="43686dd3-b1fd-4227-a394-64f05966a59b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;100000000000000000000@000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;7&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="559b8cfe-17a9-b61e-2a03-945e0b13c6e4">
      <Execution id="db7c9d92-4808-4cb9-85b3-182da8ca84e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;7&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;33n24L00000p3bHUiw&lt;v46`60?Kk&quot;,&quot;0&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f084e90f-268a-f2ef-e9b5-efc789c363b9">
      <Execution id="30d367a7-0194-4b92-974d-28b52e04ab39" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;33n24L00000p3bHUiw&lt;v46`60?Kk&quot;,&quot;0&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;I8;@OB0&quot;,&quot;0&quot;,&quot;25&quot;,&quot;0&quot;,&quot;548675400&quot;,&quot;0&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;4&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d27076e9-8412-bf2e-515c-77be634c128b">
      <Execution id="9656537b-9d1f-4bcc-b0c7-173593ffa207" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SingleSlotBinaryParserSpecsStepsFeature" name="FullMessage(&quot;I8;@OB0&quot;,&quot;0&quot;,&quot;25&quot;,&quot;0&quot;,&quot;548675400&quot;,&quot;0&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;4&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;UnderwayUsingEngine&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0820d0a4-66da-e2ae-f1de-8724421b2d23">
      <Execution id="56595235-6836-4f80-9487-94d75a256190" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;UnderwayUsingEngine&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C000000000000000000000000000000000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="601f8e65-53ac-3c0a-d061-039ac6bad73b">
      <Execution id="fa1291dd-1ba6-4a88-808f-ecb9c8b290cc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C000000000000000000000000000000000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7eb3b820-10db-a369-5a3e-183bc84aeda3">
      <Execution id="0c03bced-6a70-4a5b-9730-7afb7d6dd0b8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;261146000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="72e70e69-55c9-381f-219c-1fe3080a24ed">
      <Execution id="f81678c0-1212-4d11-85a6-3d0b25b2a4b4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MMSI(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;261146000&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;2&quot;,&quot;23&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7888396e-14d6-a05b-438f-fe45c5b15895">
      <Execution id="a374eacf-e40c-4bb3-a235-7f4b7bc72e9a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;2&quot;,&quot;23&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnspecifiedStandardTagBlock(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="172419dd-4cb2-9494-7052-bbcb2bd6ed7c">
      <Execution id="c1a94ceb-37eb-4036-b54c-b9f2465620ca" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="UnspecifiedStandardTagBlock(&quot;s:AIS,c:1706800491*63&quot;,&quot;AIS&quot;,&quot;1706800491&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;@02=VgPoD@C43h00&quot;,&quot;0&quot;,&quot;16&quot;,&quot;0&quot;,&quot;2320062&quot;,&quot;0&quot;,&quot;232014129&quot;,&quot;60&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="20603a81-31b0-498c-6673-028a9e86a79f">
      <Execution id="ba3c90cb-6b25-4d23-ba81-b758e012267a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AssignedModeCommandParserSpecsStepsFeature" name="FullMessage(&quot;@02=VgPoD@C43h00&quot;,&quot;0&quot;,&quot;16&quot;,&quot;0&quot;,&quot;2320062&quot;,&quot;0&quot;,&quot;232014129&quot;,&quot;60&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;48&quot;,&quot;'0'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d7b81827-7844-6e9d-90a5-f680e4cc02a1">
      <Execution id="0985c6cf-f1af-45b1-bd52-a2d91bc3d5af" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;48&quot;,&quot;'0'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWithStandardButUnsupportedTagBlockFieldWithExceptionsDisabled" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="65f9fcae-4346-b156-f4a1-ff3dbe5e5600">
      <Execution id="fcebf243-e2de-4e24-895f-ab37875d8c46" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWithStandardButUnsupportedTagBlockFieldWithExceptionsDisabled" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;ARVDM&quot;,&quot;ReceivingStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f018392c-b69f-1819-ee39-41471671512a">
      <Execution id="ac8f1c21-1941-478a-9476-4c3a94bbb0c2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;ARVDM&quot;,&quot;ReceivingStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;100000&gt;000000000000000000000&quot;,&quot;0&quot;,&quot;AisSartIsActive&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f02af770-5725-45ac-c92b-93c8ffef437d">
      <Execution id="4cd871f3-2b8d-45dd-ab34-2250638311b5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;100000&gt;000000000000000000000&quot;,&quot;0&quot;,&quot;AisSartIsActive&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1ff0a8ce-40d7-5b4f-907c-956bd16b6e23">
      <Execution id="8ed4ef2a-bac6-480e-b2aa-0e84cab2578b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;57&quot;,&quot;'9'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="597f1eb7-11ad-6d43-463f-4af998588ec3">
      <Execution id="b5a36835-5327-4d59-9daf-5e2c0008b219" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;57&quot;,&quot;'9'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="636fd18c-bb17-9ef4-d2bd-88b547119285">
      <Execution id="a7699d29-3014-474a-bbb3-9b947207bbb3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;18&quot;,&quot;'R'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a6c4fe7f-ee91-bbfa-0125-2f055a1a66d2">
      <Execution id="bcee05e8-1542-4a3f-9186-cb278aaaef18" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;18&quot;,&quot;'R'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;2&quot;,&quot;7&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1ebbc039-dcf5-bb95-acf3-e7dfd43a8804">
      <Execution id="71056378-c13b-4a88-8d43-5db548828b0d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;2&quot;,&quot;7&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;50000000000000000000000000000000000000000000000@00000000000000000000000&quot;,&quot;2&quot;,&quot;16&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a8aaeb99-2d65-884b-8c41-158bc8a9e3e4">
      <Execution id="b07889d6-c4c8-4c01-b3b5-02574b8550d8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;50000000000000000000000000000000000000000000000@00000000000000000000000&quot;,&quot;2&quot;,&quot;16&quot;,null)" />
    </UnitTest>
    <UnitTest name="RAIMFlag(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f64b6fed-6500-8e88-8257-f3f0e703d03d">
      <Execution id="5040d464-cb65-4c76-9464-2616626ea57d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RAIMFlag(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="34de4405-2a0d-09a1-0be2-8fab262cb629">
      <Execution id="e56e5824-03f5-4910-8e11-0ffd527452b8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;0000000000P&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5816061d-d874-23aa-0a6b-658e62ffb9dd">
      <Execution id="ca49d747-07d2-4caa-8a47-36af1e896d26" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13m9`rdw01QAv`&lt;WiMAbF3ap2H1a&quot;,&quot;0&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1b06e212-fb6a-fdcd-0c5e-0e85b90581b8">
      <Execution id="b887886e-523d-4c63-80e2-bd351106a301" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13m9`rdw01QAv`&lt;WiMAbF3ap2H1a&quot;,&quot;0&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWithNon_StandardTagBlockFieldWithExceptionsEnabled" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a67aee9f-e97c-78f7-f186-a0dbd2589049">
      <Execution id="67d4eb33-0148-477e-a60f-7f54cd6be590" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWithNon_StandardTagBlockFieldWithExceptionsEnabled" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4fa87240-6be7-c557-1146-deb2877c6b30">
      <Execution id="7ba6131b-8a86-4cad-ba63-d1b3154bb1fb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000002000000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6be46e58-c170-5d86-9f80-e66c6f561ea7">
      <Execution id="3dd8bf00-0f5c-4b55-9c7e-5dcf5b9b35c3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000002000000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMessageType(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e9fd03ce-09c6-b7f9-d1ef-6f751884fdea">
      <Execution id="1bb892b6-e470-4ab4-b507-a662284604c1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMessageType(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;15CIo&gt;401f0jO4hQ0KN&lt;F9n:0D&lt;P&quot;,&quot;0&quot;,&quot;ConstrainedByHerDraught&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="77df07c4-cd2b-ee74-62e6-63d3b19bbf2c">
      <Execution id="ea7ba44b-a833-44c1-b89f-b59dbff036c0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;15CIo&gt;401f0jO4hQ0KN&lt;F9n:0D&lt;P&quot;,&quot;0&quot;,&quot;ConstrainedByHerDraught&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;500000&lt;0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c2199f2f-dde9-cd9a-7004-15fca31301e7">
      <Execution id="d5162776-bd97-4a96-a849-976bcf388f1c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;500000&lt;0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="IMONumber(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;6522945&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="13b6d395-8f0f-3bde-edb3-12edc2fe7e61">
      <Execution id="10fb2e4a-1289-4a3f-a7a9-40986f68bf30" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="IMONumber(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;6522945&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;50000000000000000000000000000000000000000000010000000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ab49996b-01ad-5852-f2d2-49adf4519303">
      <Execution id="6412cbc1-fbbc-42a2-a047-651adda1fadb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;50000000000000000000000000000000000000000000010000000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;1000000000000000000000004000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3004acb1-93e4-0690-7cdb-481cc3232888">
      <Execution id="8facf74c-4782-47c7-9acd-58092627b1f5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;1000000000000000000000004000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000005000000000000000000000&quot;,&quot;0&quot;,&quot;Moored&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b36ad83d-4685-d1fb-9c3a-9343048e0826">
      <Execution id="be4e37c8-2ba4-43db-b525-ce3a707dfdf6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000005000000000000000000000&quot;,&quot;0&quot;,&quot;Moored&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1P00000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="53347c42-73e5-373c-5d2e-898331f0000e">
      <Execution id="5f340ac8-b5dc-40c0-8da3-c2ddbb1c3ec7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1P00000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="LineStreamParserReportsErrorInFirstFragmentOfTwo_PartMessage" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bd9b8e61-33e8-f211-ecf1-c7920470b7df">
      <Execution id="7c42c7b9-2a08-4fcb-81bb-f2eb77d62d55" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="LineStreamParserReportsErrorInFirstFragmentOfTwo_PartMessage" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1kmbi20P@10cNiLTKgi6Wld&gt;0000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3ec61729-7255-7d5f-a2f2-9beef7ff66a9">
      <Execution id="514c51d3-d16e-4e22-b344-ba9593f55518" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1kmbi20P@10cNiLTKgi6Wld&gt;0000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;=6D2aSc?SAghBHVwTP0&lt;0;&lt;4:AOwhgs17wpEF:NuHP8oBsti@Rep80klilPCQ830BiH8888&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;423668110&quot;,&quot;2&quot;,&quot;870532860&quot;,&quot;0&quot;,&quot;308441060&quot;,&quot;2&quot;,&quot;196652&quot;,&quot;3&quot;,&quot;17450495&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c54e6d19-4b1c-86f6-0d62-69fdf8d7bfc4">
      <Execution id="19ea8a8c-2674-4dc5-8e4c-0c83ad95a9b8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AcknowledgementParserSpecsStepsFeature" name="FullMessage(&quot;=6D2aSc?SAghBHVwTP0&lt;0;&lt;4:AOwhgs17wpEF:NuHP8oBsti@Rep80klilPCQ830BiH8888&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;423668110&quot;,&quot;2&quot;,&quot;870532860&quot;,&quot;0&quot;,&quot;308441060&quot;,&quot;2&quot;,&quot;196652&quot;,&quot;3&quot;,&quot;17450495&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;100000?000000000000000000000&quot;,&quot;0&quot;,&quot;NotDefined&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="63f5b22f-c1e1-7d33-3341-e96a68b4a065">
      <Execution id="21ac0972-8811-4cce-8fab-fe37bb7b8a33" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;100000?000000000000000000000&quot;,&quot;0&quot;,&quot;NotDefined&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="de7190b1-5f48-e7fb-4be5-e2308f383708">
      <Execution id="d05ab85b-43bc-4b46-9143-f47973406867" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;137&quot;,&quot;44&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="13980a52-f0d5-579c-9da4-f0b43777af47">
      <Execution id="b1891524-0e49-427f-bb24-569217040619" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;137&quot;,&quot;44&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;9&quot;,&quot;'I'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="afc5c274-009d-448f-e0fc-bc2b0e4025f0">
      <Execution id="6ed9ea49-2656-4e19-af60-12674aaa5f31" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;9&quot;,&quot;'I'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="89a98f48-a635-cce8-dbbc-a13ef749156f">
      <Execution id="54cdea6d-ae27-4928-a468-6f5a4741c676" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;400000000000c000000000000000&quot;,&quot;0&quot;,&quot;72&quot;,&quot;43&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5bec235c-b822-8eb6-ed81-3161aa6c5e46">
      <Execution id="0174399a-896d-429f-960d-23acd3542a8a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;400000000000c000000000000000&quot;,&quot;0&quot;,&quot;72&quot;,&quot;43&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBUnitModelCode(&quot;H000004000040000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6e21064b-3b3e-7f8e-1e67-fc76c97802da">
      <Execution id="c298531a-95ae-42ba-bbf6-40c89cfdf10b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBUnitModelCode(&quot;H000004000040000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;C000000000000000000000P00000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="84de66bf-3f7e-7e37-8cab-45b5955855a2">
      <Execution id="88f6a89d-c712-450e-8202-4e814e35262c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="TrueHeading(&quot;C000000000000000000000P00000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;C@00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8a3e8abb-afad-23dd-2fb5-0e4c27fd5f01">
      <Execution id="c283d540-1f00-4d15-b404-e840a69081aa" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RepeatIndicator(&quot;C@00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RAIMFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="345259f3-73d0-4c53-0802-118d48837632">
      <Execution id="cf1e25cc-57d4-4bfb-8e59-02004658b143" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RAIMFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;50000000000000000000000000000000000000000800000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4e4d1800-0ed1-5265-c300-02f4b5a4dce0">
      <Execution id="b3ba5822-9290-456a-8721-5ae05dbff08f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToBow(&quot;50000000000000000000000000000000000000000800000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;1000000000000000000&gt;40000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="efbba2b1-a781-6038-8fe8-2e8bc601c820">
      <Execution id="53562f2d-72df-4eee-956d-6243687c16c7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;1000000000000000000&gt;40000000&quot;,&quot;0&quot;,&quot;3600&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;23&quot;,&quot;'W'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6134dbac-1e64-cb59-e280-d1c8c56cd72b">
      <Execution id="52d5363c-267b-4051-bf7d-cd50ef86b065" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;23&quot;,&quot;'W'&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000040&quot;,&quot;0&quot;,&quot;Glonass&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c39c131-25b3-e860-0ba6-b6490ac0651e">
      <Execution id="66b061c8-0f0f-46ae-ade2-722c91ed919e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000040&quot;,&quot;0&quot;,&quot;Glonass&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitude(&quot;B000000000000000004000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b4d2cf55-8eee-3bd4-a69c-9552453dfd80">
      <Execution id="fa09d009-bd95-43a2-9491-8e594c8316dc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="LongitudeAndLatitude(&quot;B000000000000000004000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;K00000@00000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ca9c210d-4c66-2c5b-5cfb-a3e364d4e133">
      <Execution id="efa890f2-5571-4276-9fe8-2072be18e5a3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="MMSI(&quot;K00000@00000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DTEReady(&quot;53m:&lt;F82FRLThI1:220puH60l5=@E:222222221J0`D460rdR8p88888888888888888888&quot;,&quot;2&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b460af32-d409-df7b-ac67-e1995d9bb65a">
      <Execution id="749881ae-19e0-4bfb-bd17-c61b5d8f72a7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DTEReady(&quot;53m:&lt;F82FRLThI1:220puH60l5=@E:222222221J0`D460rdR8p88888888888888888888&quot;,&quot;2&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;Kp15Li@1D=MeT5T@&quot;,&quot;0&quot;,&quot;27&quot;,&quot;3&quot;,&quot;538008773&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;21557&quot;,&quot;-18744&quot;,&quot;11&quot;,&quot;68&quot;,&quot;false&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="df0ac554-d270-05ed-4643-2acc7af7ab4c">
      <Execution id="d0ce61fe-b399-4a9c-b381-9f679aa0b8f3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.LongRangeBroadcastMessageParserSpecsStepsFeature" name="FullMessage(&quot;Kp15Li@1D=MeT5T@&quot;,&quot;0&quot;,&quot;27&quot;,&quot;3&quot;,&quot;538008773&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;21557&quot;,&quot;-18744&quot;,&quot;11&quot;,&quot;68&quot;,&quot;false&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="07ea9a45-7ff5-a587-df80-042c5630ac19">
      <Execution id="437d21c0-1ea0-4056-8f9c-70f8fbba4a29" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="ShipType(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" />
    </UnitTest>
    <UnitTest name="RAIMFlag(&quot;C000000000000000000000000000000000000000000000000010&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6bebb593-c8f9-6419-95cd-72219a5e6a10">
      <Execution id="b4636e7f-595c-438e-876c-252df67fd835" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RAIMFlag(&quot;C000000000000000000000000000000000000000000000000010&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessages(&quot;2&quot;,&quot;2&quot;,&quot;6&quot;,&quot;8055&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="38dd50e1-babd-cfa6-3920-9fc68da9ec5e">
      <Execution id="4586f305-f335-4ddc-b534-13ead581f433" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessages(&quot;2&quot;,&quot;2&quot;,&quot;6&quot;,&quot;8055&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;5P000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="19e65515-b261-324b-14cd-3cfaa165995a">
      <Execution id="526fb6ab-4525-417d-bba9-94b04f0e0557" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;5P000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="Message22Flag(&quot;B00000000000000000000000@000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c40b779-01f3-f4b8-cc92-c0335ecc455f">
      <Execution id="b6c0fecd-275b-4a8f-b228-29d0149741c5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="Message22Flag(&quot;B00000000000000000000000@000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleMixedBlankLinesOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9f0468c7-ecd4-cbe1-ff6d-0a7c418db9cf">
      <Execution id="d34de024-e30b-4d65-95b9-15ef26e0cc6a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleMixedBlankLinesOnly" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cd218e62-906a-0437-5a38-b921aaff7b1e">
      <Execution id="5d14ea4b-ad28-49b7-8f1f-30bf10cb38c3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="InterleavedMulti_FragmentMessagesWithoutGroupingInHeader" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7ca898e7-39f5-3cfc-f60f-bc82cf3cdca0">
      <Execution id="b6b0d79e-5882-421e-9334-3930cd6919e4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="InterleavedMulti_FragmentMessagesWithoutGroupingInHeader" />
    </UnitTest>
    <UnitTest name="Message22Flag(&quot;B3m&gt;so00088pPR91r=JfOwV5WP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fc300ffa-3526-6696-fa1e-a4519a0553f0">
      <Execution id="4cd08231-bb92-4969-bf39-6583fb64a309" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="Message22Flag(&quot;B3m&gt;so00088pPR91r=JfOwV5WP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2f249456-5732-16b7-398d-97da594e4794">
      <Execution id="6a0ab0a4-223f-4b6e-bcd0-f383033cfd2e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;Bh00000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7f2763da-ce2a-e81c-bd41-13ca9b126952">
      <Execution id="ff60cfaf-faef-43f5-b085-e1ebca444a4b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;Bh00000000000000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000007000000000000000000000&quot;,&quot;0&quot;,&quot;EngagedInFishing&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e58e09d9-9c42-82b2-f4d1-7e5b8c979f92">
      <Execution id="7f4990b7-df33-4e73-988b-0a1bda135563" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000007000000000000000000000&quot;,&quot;0&quot;,&quot;EngagedInFishing&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStern(&quot;H000004000000000000000001000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8cc26fd9-a9f2-fa62-ab97-6b1e58f2dfbf">
      <Execution id="884c682d-735a-4b44-8f3f-5122297f4713" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStern(&quot;H000004000000000000000001000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;C00000000000000000000000000000000000000000000Ot00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fdf1853c-e377-a4fe-8d82-1f9a08f84df1">
      <Execution id="db7937f2-cf7c-41cd-9f9c-c38b89e92bfe" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToBow(&quot;C00000000000000000000000000000000000000000000Ot00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="10ccb84c-844f-294d-791f-90d833ad20c6">
      <Execution id="29150b39-fce0-4f69-84e7-116e1c0543af" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;41&quot;,&quot;')'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bc32601a-4724-dbc7-6a27-a275859df2f3">
      <Execution id="e56bcea7-33b8-42dc-bbac-81a3b853774e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;41&quot;,&quot;')'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;00000000@0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="91c35acb-7e8a-3fcd-1d0a-700aa28b7566">
      <Execution id="7d3e2ac3-3108-412c-9c18-5bda54ab9229" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;00000000@0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;1kmbi20P@10cNiLTKgi6Wld&gt;0000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="05b89b74-21c4-85ae-ec3a-0233f715e860">
      <Execution id="0c31c8cd-9525-41db-aed7-d5da3396018c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;1kmbi20P@10cNiLTKgi6Wld&gt;0000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="93ea75b0-5e22-15df-4d35-7f3f8438b9f0">
      <Execution id="e4db1530-42d8-45e6-9e95-7e0cebeb9cd1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1@00000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;500000@0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6a78ab4f-801a-2685-8fa1-ce0ec28b1267">
      <Execution id="cb5a4761-ac26-43d2-9d7c-2269a928b829" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;500000@0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;50000000000000000030000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eb6428fb-6908-4aa9-d71f-d91f19fd7889">
      <Execution id="17f1fb45-35df-470a-a720-7c68d7e516a1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;50000000000000000030000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="DisplayFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e1a67b44-84e7-c6b0-cf36-814d395770ce">
      <Execution id="90623499-550f-45ad-8044-fb430d5e2ac1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DisplayFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToBow(&quot;H000004000000000000000080000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9d6359b4-c3e8-6c08-4062-845513e6a1a4">
      <Execution id="94f231ee-7e9f-4c71-b36c-f1e62c93cad2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToBow(&quot;H000004000000000000000080000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Message22Flag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0d4cf52e-5d8a-9211-f817-f4b8f17842d3">
      <Execution id="5a2ceec8-657e-45fa-933f-3abdc844ac49" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="Message22Flag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;53&quot;,&quot;'5'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="338893e4-1814-693c-d51f-67b660629087">
      <Execution id="448ecbd7-bcbf-494b-b318-27aefec992a9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;53&quot;,&quot;'5'&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10&quot;,&quot;0&quot;,&quot;21&quot;,&quot;3&quot;,&quot;995036238&quot;,&quot;28&quot;,&quot;JACKSON ROCK@@@@@@@@&quot;,&quot;true&quot;,&quot;69358400&quot;,&quot;-12399100&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;7&quot;,&quot;37&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="79d17eac-87bf-0990-b186-23d023b73738">
      <Execution id="bdf575ef-c879-4a9f-ab03-bb684cf3d354" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AidsToNavigationReportParserSpecsStepsFeature" name="FullMessage(&quot;Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10&quot;,&quot;0&quot;,&quot;21&quot;,&quot;3&quot;,&quot;995036238&quot;,&quot;28&quot;,&quot;JACKSON ROCK@@@@@@@@&quot;,&quot;true&quot;,&quot;69358400&quot;,&quot;-12399100&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;7&quot;,&quot;37&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5dadd8e8-7883-f461-61b9-6b9c366256f7">
      <Execution id="b140f607-9eec-479d-af4b-59d544c03d64" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLinesWithBlanksAtEnd" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="64667372-7785-62d8-9295-57cd2ebfc7a7">
      <Execution id="56cd6eae-5ac5-460e-98cb-8bf2712887ff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleLinesWithBlanksAtEnd" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0d48b321-accb-8cef-c7d2-870cb25d1952">
      <Execution id="864905b2-0256-41da-a9b5-3733eaa0a953" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToPort(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToPort(&quot;H000004000000000000000000w00&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="22b86104-d709-ff83-0bf7-4dc280269aba">
      <Execution id="022752b7-e91e-4a04-a104-cc94926e5ab2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToPort(&quot;H000004000000000000000000w00&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;50000000000300000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bb291040-a3a6-b647-9c9b-ee53c274c005">
      <Execution id="283136e4-c2e9-477a-ba5e-4f960f15a86b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;50000000000300000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="91358b4e-2d29-1192-d1ba-563032ec4754">
      <Execution id="500e6470-beb8-4331-9d03-4e79870b4b96" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;55&quot;,&quot;'7'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2f593ce9-2961-dc8c-bedf-51a9f72813c0">
      <Execution id="5643f7eb-de04-45d1-9036-440d845e9e0f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;55&quot;,&quot;'7'&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;68&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="53119093-25a2-c291-7943-6ac8304fec36">
      <Execution id="fd6cd7a4-5a70-4ab8-bcbd-e1aad3b6f6b7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;68&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;5000000000000000000000000000000000000000000w000000000000000000000000000&quot;,&quot;2&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cfc29afc-a387-dd8b-5641-4cae3d060e7f">
      <Execution id="35455e9f-a79b-49c3-b529-5f6e94c9638a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToPort(&quot;5000000000000000000000000000000000000000000w000000000000000000000000000&quot;,&quot;2&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6c939327-e182-1879-4613-457890dd9ee8">
      <Execution id="5dc886e2-491c-44d4-9a7e-dd9cfcd99dfb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;1000000000000000000001000000&quot;,&quot;0&quot;,&quot;32&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3f14de57-3cd9-0625-1c85-dfb92a697e9b">
      <Execution id="a661e742-2faa-4483-b403-3de09d22b15f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;1000000000000000000001000000&quot;,&quot;0&quot;,&quot;32&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000@0&quot;,&quot;0&quot;,&quot;Galileo&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5f81f8e5-a084-9939-006e-87b583a28cc6">
      <Execution id="70fb20f2-93c7-4af1-9b75-7d9d3e7d6b01" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000@0&quot;,&quot;0&quot;,&quot;Galileo&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLines" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="60e8c0a2-01de-0c70-a0ec-2bd12f188c71">
      <Execution id="debaec99-5964-4e03-b1ef-9044cd262e60" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleLines" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;50000000000000000000000000000000000000000000030000000000000000000000000&quot;,&quot;2&quot;,&quot;12&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ac785512-8d50-0847-cea8-e321d4a50ec5">
      <Execution id="b55e10df-168f-46ef-be8d-cf342b367deb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;50000000000000000000000000000000000000000000030000000000000000000000000&quot;,&quot;2&quot;,&quot;12&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBSerialNumber(&quot;H00000400003www0000000000000&quot;,&quot;0&quot;,&quot;1048575&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="88518fd5-1a17-99e7-a229-e332018d42a7">
      <Execution id="9afda57f-d0b3-477b-98ee-ecba960413d4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSerialNumber(&quot;H00000400003www0000000000000&quot;,&quot;0&quot;,&quot;1048575&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;5&quot;,&quot;'E'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6b6eb170-79f4-8d79-56f6-fed63612da74">
      <Execution id="87203082-9772-435d-b523-685ddfeae23a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;5&quot;,&quot;'E'&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISOrigin(&quot;AIVDO&quot;,&quot;Vdo&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="18be096a-ecef-f518-7ce8-8b81048ff452">
      <Execution id="fc7e3def-c941-411f-844c-72ab1b69ee38" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISOrigin(&quot;AIVDO&quot;,&quot;Vdo&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;:00000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="161713fc-8b09-2d3b-c38e-e9fe2925aa63">
      <Execution id="303b67eb-a0df-4624-a2c7-96d1122a4acd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="RepeatIndicator(&quot;:00000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_4(&quot;H0000040Q0000000000000000000&quot;,&quot;0&quot;,&quot;!@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5631ac32-5d4d-8b55-1186-f0c8e79c1039">
      <Execution id="98e72a32-f297-4593-ba21-f3b43c2d49c5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_4(&quot;H0000040Q0000000000000000000&quot;,&quot;0&quot;,&quot;!@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;5&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e22a33f9-9dcd-81d7-be49-dea324035808">
      <Execution id="ab257cd0-9bd5-4b95-a5f3-b7756534a410" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;5&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;:815J6hrsEKP&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;538008091&quot;,&quot;0&quot;,&quot;247158200&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cc63f932-80a9-0da7-11ba-8fe22eab95fe">
      <Execution id="6ad6dab4-221a-46e0-8ba1-aa20449ce2a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="FullMessage(&quot;:815J6hrsEKP&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;538008091&quot;,&quot;0&quot;,&quot;247158200&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;?1b60U0kNVOP&lt;005000&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;111247508&quot;,&quot;0&quot;,&quot;215915000&quot;,&quot;3&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6934b211-c797-d496-a6e3-95beb6abab3b">
      <Execution id="547243e1-64e1-437a-b732-d3b91bbc44c2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.InterrogationSpecsStepsFeature" name="FullMessage(&quot;?1b60U0kNVOP&lt;005000&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;111247508&quot;,&quot;0&quot;,&quot;215915000&quot;,&quot;3&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="BandFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="91d47562-8832-e2e4-f715-1755a2f4f7bc">
      <Execution id="27365861-e828-4c22-9af2-64a55f74472d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="BandFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;13n@kJ0000PIk0@Sc2==PDQd`53L&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c6402895-8bf3-30db-72bf-ee8383db1fa6">
      <Execution id="c0e3e900-ae66-4166-b4aa-93e01eb8df8d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;13n@kJ0000PIk0@Sc2==PDQd`53L&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;88uQwV00G@:?&gt;G1?6600&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;601391000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;29&quot;,&quot;2&quot;,&quot;@:?&gt;G1?6600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="012638aa-ef08-c200-88a1-fe71c9167a59">
      <Execution id="fb5ab28b-aa25-43cf-8eb9-bddad0f47315" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BinaryBroadcastMessageParserSpecsStepsFeature" name="FullMessage(&quot;88uQwV00G@:?&gt;G1?6600&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;601391000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;29&quot;,&quot;2&quot;,&quot;@:?&gt;G1?6600&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="42437387-d93f-3277-2912-7af75f380bd0">
      <Execution id="082de1b8-11d8-46d3-9a01-442bf93e4e64" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionAccuracy(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;5699112&quot;,&quot;38203428&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4d8e6601-32de-80b6-4741-1ee6448bc1ee">
      <Execution id="785bc223-95fc-42a6-adc8-c69f910926b1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;5699112&quot;,&quot;38203428&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="be0539fd-543f-f18c-4ca1-623cf429c1ad">
      <Execution id="95f3859b-5d4e-488f-b1e4-327e12ccd02a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;13P=N7M1@10Ph14SqI7pAW@j0L0G&quot;,&quot;0&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;60&quot;,&quot;'&lt;'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7d10f76c-da18-5b57-f56d-734f311a48b6">
      <Execution id="5e4e0ca8-9ac0-4000-9d77-f6fffbaacffe" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;60&quot;,&quot;'&lt;'&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;257149920&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3ca231b4-9037-4aaf-4dd4-af8ec42d4d76">
      <Execution id="10d3b100-287a-4bfb-947d-c208362e4e65" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MMSI(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;257149920&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13@njcg000PeVI&gt;Pu9Hnul9D0D1M&quot;,&quot;0&quot;,&quot;NotDefined&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="030a17cd-b01e-119f-cda1-6268b8ff1f39">
      <Execution id="e69a8926-5875-48dd-8b85-4a08349cf8a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13@njcg000PeVI&gt;Pu9Hnul9D0D1M&quot;,&quot;0&quot;,&quot;NotDefined&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStern(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d0382289-48c3-472f-3928-e04a6a9f4469">
      <Execution id="f9713d21-b7d0-4616-aaa9-2d92ff2e4030" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStern(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_4(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;AMC&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3e15c8fc-9697-68ef-6fbb-4ece87e90dbf">
      <Execution id="fdb3dbad-f23d-4d22-8f96-8149ac985c59" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_4(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;AMC&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;17&quot;,&quot;55&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8c0df46a-8c72-0f01-06cb-5f9c0c65e2af">
      <Execution id="6b68fc06-cd9e-4d9a-b8f6-9cf0abc191f4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;17&quot;,&quot;55&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;61&quot;,&quot;'='&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5f3a0f66-fa06-365c-d71e-17a0544e3bb4">
      <Execution id="9a0a5ad0-e96d-409e-ac77-122cf61abfbe" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;61&quot;,&quot;'='&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000004000000000000000000000000&quot;,&quot;2&quot;,&quot;8&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a043c836-e3f7-6a70-b40f-23d1927c92ee">
      <Execution id="6005814d-d40b-4aa5-acb9-4fe9f7cf0ad3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000004000000000000000000000000&quot;,&quot;2&quot;,&quot;8&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b48b6dc3-bd8f-ac03-f4f6-aec7b3537837">
      <Execution id="d6d4bf9a-45e3-4543-a1ce-a0d630a37c42" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BinaryBroadcastMessageParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000020&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="265b4d01-b647-c37d-e88f-8e50daae8194">
      <Execution id="0955e0d2-fef0-434d-bf51-70269f0975e0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000020&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLines" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6fcfbd81-1211-88a8-f02e-1be7ca2b98d7">
      <Execution id="ed1c36b8-b6e9-448d-aea9-210126d8e327" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleLines" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;46&quot;,&quot;'.'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="30286ba8-3f49-ca95-c9b7-28de3aa4f583">
      <Execution id="7b6e70f5-c470-4cef-93df-fb540fdcee7a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;46&quot;,&quot;'.'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWithoutNewlineOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8e64c27a-ded5-a42b-b287-7e1c0c7d0a8f">
      <Execution id="6e82f2a1-0391-478e-b074-c928326a069e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="SingleLineWithoutNewlineOnly" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;100000000000000000000001P000&quot;,&quot;0&quot;,&quot;NotDefinedBySpec&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="88245270-bb54-735c-b41a-c033dad5a2d2">
      <Execution id="2fcca770-50fe-4584-bf4a-2fe39e1e815d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;100000000000000000000001P000&quot;,&quot;0&quot;,&quot;NotDefinedBySpec&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H3m8;Q1A8Tt0000000000000000&quot;,&quot;2&quot;,&quot;TRIO@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a0707f91-bdfa-2693-216b-8557e8e160d4">
      <Execution id="eedf90bd-0329-4604-9bdb-1df11e1f44ba" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H3m8;Q1A8Tt0000000000000000&quot;,&quot;2&quot;,&quot;TRIO@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;7&quot;,&quot;47&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="959dd6a6-9c42-529a-bd21-cab456b87538">
      <Execution id="806fac9f-690a-4388-a198-649f72b354e0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;7&quot;,&quot;47&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d2c231c0-51e4-00e2-703f-c1a283e4cda9">
      <Execution id="2865b910-99e2-4cb0-b00a-f5d492657067" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c08b5769-35c4-b48e-13b3-ec86ac342aaf">
      <Execution id="ab52d08e-d0e8-4e08-bc30-e08a2ca1d6a4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="EmptyFile" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c8d94c85-217c-7de3-5d79-63f993898555">
      <Execution id="874eabfd-64c5-4ad4-9ff1-9604194f779f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="EmptyFile" />
    </UnitTest>
    <UnitTest name="SingleLineWithNon_StandardTagBlockFieldWithExceptionsDisabled" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e8713e19-5cd1-fe25-5813-316021130479">
      <Execution id="db496219-9652-4246-8589-9401b2694083" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWithNon_StandardTagBlockFieldWithExceptionsDisabled" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;0000000P00000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;-128&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="216c1bbc-9875-a8dc-58f7-a0c1b5ff99c0">
      <Execution id="18e3fc05-d756-444d-bf7f-1788db5eaeae" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;0000000P00000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;-128&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;50000000000000000000000000000000000000000000000001000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="134d491c-928e-9107-fe6f-7f3101a5feb0">
      <Execution id="7fa3f7a8-2952-4c9d-9624-ee90d92dd08d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;50000000000000000000000000000000000000000000000001000000000000000000000&quot;,&quot;2&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000100000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;32&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b1a72e91-1a36-124e-f8a0-694b86250c95">
      <Execution id="e87df31c-7032-4d42-96c7-f56b1cb6c32c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000100000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;32&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="89e9c742-8d2a-3adb-6a7a-5cfb76421629">
      <Execution id="fad4e562-1bfe-4443-8f11-39d35fe04aa1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1Smbi200020cNi@TKh96@BEL0000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;500000000000000000000000000000000000000E0000000000000000000000000000000&quot;,&quot;2&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="71f06fff-8daf-ecab-97ba-da91159cc289">
      <Execution id="fc41107e-59fe-41bd-bf3b-51c0ff621070" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;500000000000000000000000000000000000000E0000000000000000000000000000000&quot;,&quot;2&quot;,&quot;WingInGroundHazardousCategoryA&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;500000000000000000000000000000000000000007w0000000000000000000000000000&quot;,&quot;2&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e54eb199-13ef-3101-0972-2525e1643532">
      <Execution id="a88b132c-d87a-4c7c-b1c9-b6a39741e4ad" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStern(&quot;500000000000000000000000000000000000000007w0000000000000000000000000000&quot;,&quot;2&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="AssignedFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="43713c6c-867b-5b9b-4abc-1502165a3794">
      <Execution id="23dad974-3c00-4162-b6de-d04182fc6838" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="AssignedFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="DTEReady(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fd956e77-3737-89bc-5bd6-6b0c04f0d1b0">
      <Execution id="09df1e87-f48e-4bf4-bbbf-2ae29836da73" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DTEReady(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;18&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fd85adc2-d40c-9776-1165-db8e957025b8">
      <Execution id="68e9d9f3-43df-4ed0-86f1-f4842fa8d80f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;18&quot;,null)" />
    </UnitTest>
    <UnitTest name="IMONumber(&quot;50000000000500000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1568b428-2c9e-4c7a-6c6f-4762a62e88ef">
      <Execution id="ddf47024-4d3b-4181-8a42-37242fb15ee2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="IMONumber(&quot;50000000000500000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;24&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8201ce2e-e4e3-afce-3312-58a9731fa239">
      <Execution id="adee392e-220f-4924-8459-0a4c2b2bf115" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;24&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;100000000000000000000000&lt;000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f839b87e-4f92-7b55-2a9c-2b5cbbcc720e">
      <Execution id="0e85c9b3-5490-4716-8a5c-f0a93efe1862" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;100000000000000000000000&lt;000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;7&quot;,&quot;'G'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="64a6915c-df53-c4b2-1c4c-4607840b4c95">
      <Execution id="9ab486e5-294b-4664-8c05-800f8d5389e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;7&quot;,&quot;'G'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleCRLFBlankLineOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1b877b3a-3d9c-faa5-c4cb-8ebfe984d06d">
      <Execution id="d8ade85b-cdc1-40e0-a04d-b5dbed02991f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleCRLFBlankLineOnly" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;2&quot;,&quot;'B'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cce01482-69a0-92e9-f295-9965989b71ac">
      <Execution id="91684e64-38f9-4626-a79a-601684095375" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;2&quot;,&quot;'B'&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,&quot;24&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7ef6fede-a1fa-e5e5-6844-ccaca7e8c4f1">
      <Execution id="725ff926-ea21-414f-9ba7-68bfb73ac195" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,&quot;24&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e21ee75f-f0f6-b686-0481-35399f16301f">
      <Execution id="bfa8ac8f-2e62-4796-8cff-824398d4e5b7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStern(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;5000000000000000000000000000000000000000000000000wh00000000000000000000&quot;,&quot;2&quot;,&quot;255&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d8cfe6df-e428-afca-9ab7-529f9c70a7d7">
      <Execution id="c7cfb523-ba36-4311-ad2a-d7efaad137da" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;5000000000000000000000000000000000000000000000000wh00000000000000000000&quot;,&quot;2&quot;,&quot;255&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;1330&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f6eadebc-e7fc-110f-9fe8-cefb20f3de83">
      <Execution id="8576ef8f-1428-4807-9bf5-11456a9d8cf6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;1330&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;2&quot;,&quot;2&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9fde8896-f2de-f548-e144-15f1eb08814f">
      <Execution id="68ea0f93-a08f-4fd0-b293-ca847df677f2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;2&quot;,&quot;2&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;102&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="49fcf1b2-6edd-ed5c-7138-e5ffecbb05f1">
      <Execution id="400e1d6a-eeb7-493a-9fa1-2805e9d25755" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;102&quot;,null)" />
    </UnitTest>
    <UnitTest name="RaimFlag(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ab6c7f41-0b74-7b91-a0c3-4638afd83fdd">
      <Execution id="9763aa9e-bf56-43b6-9416-44040a0c7c6f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RaimFlag(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;UtcDirect&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0a0f0fef-9cab-9e68-1d66-78527db6b4ed">
      <Execution id="eae0d3ac-6a25-4d2f-bd96-3d6d75c9de0e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;UtcDirect&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;38&quot;,&quot;'&amp;'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="99ddd5a7-673e-d064-c1ff-d3812be81fd4">
      <Execution id="00490648-d17f-4c05-86b0-06478f9ee8d4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;38&quot;,&quot;'&amp;'&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;AtAnchor&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a9720abd-8c66-4581-9c43-32aa0c4ade3a">
      <Execution id="a87f577b-b362-46d4-9577-958f9312495a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;AtAnchor&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C00000000000000000000000000000000000000000000000000?&quot;,&quot;0&quot;,&quot;15&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bda8a6b6-60af-8b36-56f7-510a085964e2">
      <Execution id="88a654dd-6515-49a2-8816-85f5d7f6a88d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C00000000000000000000000000000000000000000000000000?&quot;,&quot;0&quot;,&quot;15&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLinesWithBlanksInMiddle" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="21565b41-d5bc-3dc8-e055-ec60f64af315">
      <Execution id="9ffc4e66-ee3c-4849-a823-f1d92f02a5da" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleLinesWithBlanksInMiddle" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;C0000003wh000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0ecf26e4-9e7a-f173-78c5-b406abf8d2ba">
      <Execution id="8039aa39-3ab3-4bfc-9ae4-89a5e5ff46f2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="SpeedOverGround(&quot;C0000003wh000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2241156&quot;,&quot;0&quot;,&quot;2583&quot;,&quot;23919&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="562b7d7a-9d37-31e8-cf61-72dc7b7dfb9d">
      <Execution id="0fd936de-0f59-4e24-9de9-255345f252be" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsStepsFeature" name="FullMessage(&quot;A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2241156&quot;,&quot;0&quot;,&quot;2583&quot;,&quot;23919&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;85PH6giKf;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;369493695&quot;,&quot;0&quot;,&quot;366&quot;,&quot;56&quot;,&quot;2&quot;,&quot;;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9c71320e-a66c-ff16-1d61-e6d5af2fbe53">
      <Execution id="54b41379-462e-487d-bed2-011cb12be7b2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BinaryBroadcastMessageParserSpecsStepsFeature" name="FullMessage(&quot;85PH6giKf;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;369493695&quot;,&quot;0&quot;,&quot;366&quot;,&quot;56&quot;,&quot;2&quot;,&quot;;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;27&quot;,&quot;'['&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c4dc95ea-8491-9ee1-a641-918b4c2e825c">
      <Execution id="089ef525-adf0-44b9-b03d-2e6cd16fd54d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;27&quot;,&quot;'['&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBCallSign(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="08ef5787-6f75-d434-e26a-949294aa0411">
      <Execution id="67e03309-6799-4491-84b2-8456d854db12" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBCallSign(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;50000000000000000000000000000000000000000000000000@00000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fc3bfbbc-5dad-1f00-4d06-d751f2562ae8">
      <Execution id="600c55bf-4b25-4440-8d92-bf6da47503ab" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;50000000000000000000000000000000000000000000000000@00000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;C0000000000000Owwwt000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1dc99b8c-bd8c-45f1-3917-7acaacea205c">
      <Execution id="5bfc60aa-533b-42f0-a76e-e599ffef9e1b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="LongitudeAndLatitute(&quot;C0000000000000Owwwt000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="54047076-96a8-79d9-5c84-1be1395deeb5">
      <Execution id="af6a4659-7a72-44fc-9788-87b49210759e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;209582000&quot;,&quot;0&quot;,&quot;229456000&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot; PLS CHECK MY AIS DATA AND REPLY\&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e00d72cd-5b0b-9f38-8328-a5447b99e6ff">
      <Execution id="80db9d88-ec13-4ce0-ac76-c7205aa97e67" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedSafetyRelatedMessageParserSpecsStepsFeature" name="FullMessage(&quot;&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;209582000&quot;,&quot;0&quot;,&quot;229456000&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot; PLS CHECK MY AIS DATA AND REPLY\&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;49&quot;,&quot;'1'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4fac9da8-4ab0-f19a-d964-dcaf9b00eefe">
      <Execution id="6496dd51-46e6-416d-b29a-a37d0a1d785d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;49&quot;,&quot;'1'&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMessageType(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5f7d7215-65d5-4d25-e282-0e8892955b15">
      <Execution id="585fa780-998e-4ee2-8e05-ea6c0cc0c27d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMessageType(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;E&gt;nRFnO77h0W1T7a9hFh84`2V4W@3AEb1fHgh00003aP11H0DQ@H&gt;@&quot;,&quot;0&quot;,&quot;21&quot;,&quot;0&quot;,&quot;996710105&quot;,&quot;30&quot;,&quot;NO ANCHORS - PIPELIN&quot;,&quot;true&quot;,&quot;857450&quot;,&quot;3617150&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;7&quot;,&quot;19&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;E AREA 9&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="926cbab8-1a50-0934-3fdc-db09ce0f0a73">
      <Execution id="7d4affec-8e2d-42d4-b0fc-88b39954a9d5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AidsToNavigationReportParserSpecsStepsFeature" name="FullMessage(&quot;E&gt;nRFnO77h0W1T7a9hFh84`2V4W@3AEb1fHgh00003aP11H0DQ@H&gt;@&quot;,&quot;0&quot;,&quot;21&quot;,&quot;0&quot;,&quot;996710105&quot;,&quot;30&quot;,&quot;NO ANCHORS - PIPELIN&quot;,&quot;true&quot;,&quot;857450&quot;,&quot;3617150&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,&quot;7&quot;,&quot;19&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;E AREA 9&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B000000000000000000000MP0000&quot;,&quot;0&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dc6960e2-8232-0490-f4d0-7c7fcda95854">
      <Execution id="934cc283-bb6a-4fab-ad7d-bbfa675842a1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B000000000000000000000MP0000&quot;,&quot;0&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBSpare(&quot;H000004000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2f69a475-ef74-5756-fbad-a2b11b590740">
      <Execution id="34a9912e-6ef3-429c-aff1-83cd54aa6ea7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSpare(&quot;H000004000000000000000000001&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;500000000000000000000000000000000000000000000000t0000000000000000000000&quot;,&quot;2&quot;,&quot;60&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="61a8e662-3b6b-6228-a20a-007ad146ace5">
      <Execution id="8d939560-863b-4b0e-a1fc-9592f4ac56ca" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;500000000000000000000000000000000000000000000000t0000000000000000000000&quot;,&quot;2&quot;,&quot;60&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;14&quot;,&quot;62&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="61079c10-1e66-7a51-b44f-f81fba0c2f8e">
      <Execution id="e10a4076-ef6e-407c-bd0d-daf2728bcdc8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;14&quot;,&quot;62&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;:P0000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="95d41c29-a342-c017-833f-1ac6fbbf1ab4">
      <Execution id="ef444e82-7cd1-4bf2-a0b2-adc5875eae87" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="RepeatIndicator(&quot;:P0000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="56e2ca14-659c-5639-9715-9f19a2efc652">
      <Execution id="3d318526-9e7a-4866-82fe-4d0d9028637b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="Non_FragmentedMessages" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aab37a21-4661-83e7-2342-0163b0b35423">
      <Execution id="f02d8f59-978d-43de-a0f3-76bf3a7ad71d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="Non_FragmentedMessages" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fef430fa-c061-a26e-3f13-368adddf7d35">
      <Execution id="4bef10b5-d1e5-46db-83b7-14739dd50926" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToPort(&quot;H000004000000000000000000100&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="187b73c3-40df-76a9-05f8-ce2737697880">
      <Execution id="b7048e0b-ba06-42b5-8ad6-3b8ea7e035ed" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToPort(&quot;H000004000000000000000000100&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMMSI(&quot;H00000D000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2cd6d40b-76ea-ca93-f09f-9c8892a78cd7">
      <Execution id="1e7f2799-a12e-463d-a948-7ac1cbe6a21f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMMSI(&quot;H00000D000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000000P00000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="87a5d4bd-eebc-0866-87b8-773797b6ef79">
      <Execution id="4e46fe7c-56c7-4a2f-bd1a-fb4c91bb8cc9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000000P00000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessages(&quot;3&quot;,&quot;1&quot;,&quot;0&quot;,&quot;3451&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3a86bebc-66d9-ea34-5337-4cc4983c30fa">
      <Execution id="c3d43685-b0f8-4caa-92b4-a188465154a8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessages(&quot;3&quot;,&quot;1&quot;,&quot;0&quot;,&quot;3451&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C000000000000000000000000000000000000000000000000008&quot;,&quot;0&quot;,&quot;8&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fea6c937-7f33-5409-b331-dd4bb97f1e2a">
      <Execution id="5ac969eb-5536-4867-8302-e267a167638e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C000000000000000000000000000000000000000000000000008&quot;,&quot;0&quot;,&quot;8&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;1000000000000000000?wh000000&quot;,&quot;0&quot;,&quot;4095&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="87c854c6-bfab-223b-75ec-184624731970">
      <Execution id="a0be13a4-fc55-4a3a-9b09-6f663db34a99" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;1000000000000000000?wh000000&quot;,&quot;0&quot;,&quot;4095&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToBow(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fd5ab80b-da07-2bbc-74cd-bad8e2e224e3">
      <Execution id="1f1532a2-7456-4f81-b2ad-b08e95f15e9b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToBow(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;00000001@0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="66dd722f-a0ed-5b85-3dd5-406e16bf25fc">
      <Execution id="45e72812-4dc9-4d6d-bc24-c9f5fbe764ce" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;00000001@0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;50&quot;,&quot;'2'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="82c5474d-88a4-d245-4e10-5f0105db7747">
      <Execution id="27d5ef7a-4b75-4521-bc91-a9d0163e77b7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;50&quot;,&quot;'2'&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_3(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;AMC@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c416bac-1a20-4eac-2a44-6a8bfe7edd5c">
      <Execution id="15782512-fd41-4f25-8552-7e550d25869b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_3(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;AMC@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;23&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="805e8292-98ae-b04a-4b05-67ca68dc269a">
      <Execution id="bc1f1eb8-8a4f-473f-9267-13662e0fc821" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="SpeedOverGround(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;23&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13@njcg000PeVI&gt;Pu9Hnul9D0D1M&quot;,&quot;0&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="597b879c-dd99-f679-d4c7-0bc4c1461ffb">
      <Execution id="d5a77beb-e689-4c28-93ab-943976011908" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13@njcg000PeVI&gt;Pu9Hnul9D0D1M&quot;,&quot;0&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;1000000000000000000000020000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aa78429c-6dd6-d58f-4ea3-3d4eb1819341">
      <Execution id="42b12769-980d-4b67-a26e-88033af669c5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;1000000000000000000000020000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="LineStreamParserPassesTheSameSentenceOfATwo_PartMessageTwice" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="59133c35-5662-01b8-57f4-d7c5830c45e1">
      <Execution id="234a282a-9ffd-4039-a2db-4bbf9ab947a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="LineStreamParserPassesTheSameSentenceOfATwo_PartMessageTwice" />
    </UnitTest>
    <UnitTest name="PartBCallSign(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;LJVK@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f4359848-50f9-dd13-5a20-37a03dd5d2e2">
      <Execution id="2f027c84-a194-4035-a10b-8dc6254cc72d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBCallSign(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;LJVK@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;B000000008000000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f4a195c3-cd67-dbe5-70e8-8755254e7ff9">
      <Execution id="3f4759a8-9fc0-4a1b-b449-e300b46ed012" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="PositionAccuracy(&quot;B000000008000000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="484e1c5b-74b9-a825-2ce3-6fde92a5c63f">
      <Execution id="852bf13d-d244-4696-accb-6ebc047a66d0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="TrueHeading(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStern(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2a2c9429-c6c1-c0a2-7d36-0cfba8ee5a96">
      <Execution id="3f32a0e3-ea00-448b-8af5-d91904e57c2a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStern(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="Payload" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7dbc60c4-4373-6985-98f6-be866679a32b">
      <Execution id="7a2c16d5-9687-497c-bf5d-2f31e5683f3c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="Payload" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="45c455f8-b14e-dd94-570f-270cbc20636f">
      <Execution id="b892d1c5-8b69-42fe-9b09-8489193bfae0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000w00000000000000000000000000&quot;,&quot;2&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f1d467f8-6d39-c235-6f4b-fb9069b8d25d">
      <Execution id="2e24acd6-5e67-40d7-8029-92a76368001a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStarboard(&quot;50000000000000000000000000000000000000000000w00000000000000000000000000&quot;,&quot;2&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWhereLineTruncatedAtPaddingComma" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4d4fb723-f295-e7f1-9ebc-6e1541a4dde3">
      <Execution id="18b4e60d-11ca-48e5-bb92-c3b951a70d38" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWhereLineTruncatedAtPaddingComma" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13m9`rdw01QAv`&lt;WiMAbF3ap2H1a&quot;,&quot;0&quot;,&quot;ReservedForFutureUse12&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="552c4bb6-d2ca-e681-2192-ef38be6f1389">
      <Execution id="344f72b3-64d3-4633-9654-e5f470dc1750" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13m9`rdw01QAv`&lt;WiMAbF3ap2H1a&quot;,&quot;0&quot;,&quot;ReservedForFutureUse12&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;0000000000000000000000000000&quot;,&quot;0&quot;,&quot;60&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="efa984ee-a860-9b4a-86fc-78bdbca9efd8">
      <Execution id="da6be5d7-6be8-4528-93b9-b63b49506309" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;0000000000000000000000000000&quot;,&quot;0&quot;,&quot;60&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;9HA2986&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f9ae1017-ce91-456e-fb0d-d33c05d0c488">
      <Execution id="48e0856d-3dbf-456d-bb6d-194ce6861873" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;9HA2986&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;50000000000100000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="26bf8d9b-51e6-3bb9-4078-ba15b0a59d82">
      <Execution id="e58280ab-b397-482d-afc1-4c0f65b3910e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;50000000000100000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;P@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;BOA ODIN&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5aa227ca-37b5-4886-a84c-180a7b435561">
      <Execution id="e71f068b-5d1b-43c8-86b8-8762d41944a3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;BOA ODIN&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;1&quot;,&quot;'A'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fbd36d80-d7cc-8951-ec77-526b58a5e8ff">
      <Execution id="26ce6c9a-ce81-400a-bd3d-c850051d2449" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;1&quot;,&quot;'A'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWhereChecksumIsMissing" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="95be8499-1297-e662-0746-d1528520b0ca">
      <Execution id="99947624-c3d9-4d1a-8f59-c6349ea9f290" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWhereChecksumIsMissing" />
    </UnitTest>
    <UnitTest name="BandFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8d57dd4e-d39e-4b3d-18eb-673b102ebba2">
      <Execution id="929ddb14-891c-4538-82e0-addc456f021e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="BandFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="RaimFlag(&quot;1000000000000000000000002000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2e04a2f6-03a6-6ea2-9247-f3a0b86341c9">
      <Execution id="b42bb701-7836-44dd-9dd8-ab78aa01c0d2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RaimFlag(&quot;1000000000000000000000002000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0b102957-9529-0fb6-9d49-cd9d4fbec90b">
      <Execution id="b42313e2-7bfb-4176-aa85-ef971c7d8faf" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RaimFlag(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8f306b54-cf0b-9840-97dc-d6bf47446fb6">
      <Execution id="c2584d3b-0911-4d3f-96ca-2b0807cec2a1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RaimFlag(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="Name(&quot;C000000000000000000000002468:&lt;&gt;@BDFHJLNPRTV`00000000&quot;,&quot;0&quot;,&quot;ABCDEFGHIJKLMNOPQRST&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e4671126-e6cf-ff73-46d1-7764e57406b8">
      <Execution id="8e70fd03-4025-4d2f-89f4-793998d6fa6f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Name(&quot;C000000000000000000000002468:&lt;&gt;@BDFHJLNPRTV`00000000&quot;,&quot;0&quot;,&quot;ABCDEFGHIJKLMNOPQRST&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bccd3b6c-49a4-25a1-b2a8-c5f5f0a3b3e3">
      <Execution id="c071b37f-dfc8-49b4-83e3-54268e4d19ff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBUnitModelCode(&quot;H0000040000&lt;0000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aa1341f2-f9dc-17ac-3501-7b476cca44ef">
      <Execution id="ba54892a-9b52-459c-a8a5-3ecd0e712d2c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBUnitModelCode(&quot;H0000040000&lt;0000000000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b8b17862-840a-8586-2c0f-d94215b836ed">
      <Execution id="9ee6ca8a-b82f-42e1-b76b-22ceecdd5a16" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="30ab9d03-f43d-9e12-3ec6-849812e563d9">
      <Execution id="87ce7780-93d6-463a-80d5-746d9c856799" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateResponseParserSpecsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="AISOrigin(&quot;AIVDM&quot;,&quot;Vdm&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5354a16e-0db0-9185-51a9-af438f7ce606">
      <Execution id="127d02b1-496d-43e4-8e7b-b43c77272d99" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISOrigin(&quot;AIVDM&quot;,&quot;Vdm&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="35bccceb-f6ee-5b65-75ff-9af3618a8ffb">
      <Execution id="c629b441-2850-4b98-b358-f35bf3e5f80b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="NmeaTagBlockSingleLine(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d1648a77-d498-d52e-97e2-9218ca631910">
      <Execution id="5947a2f5-b66b-45c8-93f4-0bdd990d91a3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="NmeaTagBlockSingleLine(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;9&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="23ab1cd2-f50d-ef82-d459-cd1f12307c06">
      <Execution id="8c71f980-4e1e-4d73-aaed-f23d249dee38" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;9&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;39&quot;,&quot;'''&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="81f09891-d621-cffd-cfb3-4bf3e737a18e">
      <Execution id="c0f992c3-3295-46bf-b358-0d4aeeac67c8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;39&quot;,&quot;'''&quot;,null)" />
    </UnitTest>
    <UnitTest name="DSCFlag(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fd55b306-5114-b928-4f2b-11887f0d8203">
      <Execution id="f6ecbeb5-3f76-47fb-834c-226ca892bb03" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DSCFlag(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;Hh0000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e5723b77-b8d3-f19d-627e-7e14829ae702">
      <Execution id="bbd0db66-b171-48c5-937e-36ef19649542" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;Hh0000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;34&quot;,&quot;'\&quot;'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="de8da467-3292-2c7e-887b-61925ff6c58a">
      <Execution id="35366b9e-7eee-4683-ab31-7df879b6afee" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;34&quot;,&quot;'\&quot;'&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;1&gt;eq`d@000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2e5a7aab-46ce-cefd-4367-d527b7469ca5">
      <Execution id="38247c2a-7056-40da-bca9-f870bca2205a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MMSI(&quot;1&gt;eq`d@000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8ca22b9d-149f-be4b-e447-e5feaef6bb82">
      <Execution id="3a37a6e4-d478-4faa-9cc1-d77683e2264c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MessageType(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;50000000000000000000000000000000000000000000040000000000000000000000000&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1a5595fe-263d-88bb-9d14-61259bcd4a1e">
      <Execution id="a8238d38-cb9a-4495-ba90-2342ff041609" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;50000000000000000000000000000000000000000000040000000000000000000000000&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABC`&quot;,&quot;0&quot;,&quot;18&quot;,&quot;40&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="291856fc-8773-a015-6d4a-19d974076703">
      <Execution id="fd738c19-5caf-4490-afc0-e8c178d5ccf3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABC`&quot;,&quot;0&quot;,&quot;18&quot;,&quot;40&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartASpare(&quot;H00000000000000000000000003w&quot;,&quot;0&quot;,&quot;255&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c0d627a-1c1f-b7b8-ad5f-010c087e1cf3">
      <Execution id="de8ac15f-aa68-4e80-ac91-0db50e639d1e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H00000000000000000000000003w&quot;,&quot;0&quot;,&quot;255&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;C00000@000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b9faca44-ca88-8bb4-04ff-622679980b9d">
      <Execution id="9c1fde8e-79d7-4f63-a447-27365b6110c1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="MMSI(&quot;C00000@000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;18&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d5c4ef54-0a88-5e17-9876-800c99f55076">
      <Execution id="438bd46c-323a-4fea-ab2d-1cffe35f0726" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStarboard(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;18&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000001000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a7e2a721-3563-39c5-7376-cae790c2c303">
      <Execution id="08e65856-971c-4999-8300-4fc286576729" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000001000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;C00000000000000000003wP00000000000000000000000000000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f167bc0b-d75b-f008-2996-7556f366e06a">
      <Execution id="a94a4727-1d18-44cb-8076-76d34b55e982" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="TrueHeading(&quot;C00000000000000000003wP00000000000000000000000000000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;100000000000000000000000D000&quot;,&quot;0&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="23665826-5b54-b176-1a28-171a18d761a7">
      <Execution id="cfd5bbbb-68eb-4c45-a6b6-db82e5175f80" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;100000000000000000000000D000&quot;,&quot;0&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;108600000&quot;,&quot;54600000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b40bce5b-06b4-17b0-07dd-736c7215ad04">
      <Execution id="56897cf2-6d56-473e-b7e6-50499b339443" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu&quot;,&quot;0&quot;,&quot;108600000&quot;,&quot;54600000&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;54&quot;,&quot;'6'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1cf65927-c8c1-8594-1569-04eea56b6083">
      <Execution id="ee46d4d3-24f7-4dfc-a11b-f3167e79d6a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;54&quot;,&quot;'6'&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="52158ebb-1869-2fd2-41dd-40e53a17bf0d">
      <Execution id="71bf202c-fe22-44a8-adc0-a57a86b2e84f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RepeatIndicator(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000040000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="69bd1461-43f3-90c2-894e-c7fa62d5743f">
      <Execution id="b9f5bb14-7778-43ea-a440-e4d1d0f2102c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000040000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;1000000000000000000000010000&quot;,&quot;0&quot;,&quot;SpecialManoeuvre&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fb60606d-cec0-82f5-b2bc-60166cdf57cb">
      <Execution id="3b68b209-a1fb-4d8a-a9d9-20f299450915" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;1000000000000000000000010000&quot;,&quot;0&quot;,&quot;SpecialManoeuvre&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;6&quot;,&quot;'F'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3b14af35-95b9-ece9-5dea-6485de2c6aae">
      <Execution id="0ecbf2f5-acb8-47d8-b22d-781398d1a9e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;6&quot;,&quot;'F'&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="08567abd-2ee7-1452-cc20-ca2d49debdd5">
      <Execution id="44d8c295-3a93-4430-bbbc-c05cb8f207c1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="68113b74-84a0-0ddd-0b63-9bd540b31d47">
      <Execution id="5eb5da96-be4c-43f4-8f3c-08f5232eb93d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="PositionAccuracy(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_140(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="82552452-b427-7c9c-c385-d07a63a9d3de">
      <Execution id="cf36a9e8-792c-45e1-a116-c423d562fbab" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits139_140(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnspecifiedStandardTagBlockWithGroup(&quot;1G2:7764,s:AIS,c:1706800480*33&quot;,&quot;AIS&quot;,&quot;1706800480&quot;,&quot;1&quot;,&quot;2&quot;,&quot;7764&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1efc7ad1-d30a-6229-a9d8-5442d6439277">
      <Execution id="8e0f445d-813c-4da7-bed2-404091a60138" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="UnspecifiedStandardTagBlockWithGroup(&quot;1G2:7764,s:AIS,c:1706800480*33&quot;,&quot;AIS&quot;,&quot;1706800480&quot;,&quot;1&quot;,&quot;2&quot;,&quot;7764&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMMSI(&quot;H3m8;Q1A8Tt0000000000000000&quot;,&quot;2&quot;,&quot;257035140&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d296caba-9c79-6147-27a2-b4464ab723d2">
      <Execution id="d0eabb53-b3f3-43e2-a44c-8337237e4ed6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMMSI(&quot;H3m8;Q1A8Tt0000000000000000&quot;,&quot;2&quot;,&quot;257035140&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;100000000000000000000?v00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8c177594-daf2-f12c-22b9-6e1756881c46">
      <Execution id="0a83e540-78e1-48f3-a33f-d4bc98647dba" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;100000000000000000000?v00000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5f809033-a3af-8d92-e106-5608f63bb9a6">
      <Execution id="c2469c3f-e59a-404e-8f6a-bf199ee98f5a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MMSI(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;162&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4f2d6fef-138a-2870-170c-5b971f750254">
      <Execution id="e9b1ad62-d59a-46f8-ba11-35e0ccd0f9fa" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToBow(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;162&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;B3o8B&lt;00F8:0h694gOtbgwqUoP06&quot;,&quot;0&quot;,&quot;18&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="505d964f-380e-e2b3-7264-be63f7f44c3e">
      <Execution id="87db8223-c1dd-4fce-8bbd-19d1672cb56d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;B3o8B&lt;00F8:0h694gOtbgwqUoP06&quot;,&quot;0&quot;,&quot;18&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d572a5f6-650b-0db8-4128-7d1c918c19cd">
      <Execution id="cfeb710e-22b8-4f7d-949e-8c2bf21f476b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;500000000000000000000000000000000000000000000000s0000000000000000000000&quot;,&quot;2&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d0d3782c-7c68-e27f-d2c1-05150844dd0f">
      <Execution id="4da10786-56e0-4fde-b825-31abb104e776" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;500000000000000000000000000000000000000000000000s0000000000000000000000&quot;,&quot;2&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWithStandardButUnsupportedTagBlockFieldWithExceptionsEnabled" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="82ac8ff4-38df-467b-7c0c-e3d067e7d7ea">
      <Execution id="0e7217a0-5d9c-4686-bacd-ccb2ba4b6ee1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWithStandardButUnsupportedTagBlockFieldWithExceptionsEnabled" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_4(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="126f94db-5658-524c-0d78-06f3fcff65cc">
      <Execution id="e4f596cc-a42d-4b63-b244-3c821d4776e7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_4(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8c70f165-7f29-08c3-7ce6-950772949299">
      <Execution id="03f1b56b-4c50-4326-8d57-83c56143d0cf" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;1000000Oh0000000000000000000&quot;,&quot;0&quot;,&quot;127&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ae77094f-cd68-e0b9-529e-11cc5d77fa40">
      <Execution id="9a5e0c45-5a60-4417-829a-ce5e1d120a5c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;1000000Oh0000000000000000000&quot;,&quot;0&quot;,&quot;127&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;5000000000000000000000000000000000000000000001@000000000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c911a2e4-a72e-0838-2bb0-d8ae70ce57e2">
      <Execution id="25c4e5fb-968c-4ab5-9dc5-10ad215d96a9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;5000000000000000000000000000000000000000000001@000000000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;1&quot;,&quot;110&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="82ed057d-7398-d676-5207-8e72a6631a09">
      <Execution id="ee54f7ce-a2cd-489f-9f79-d6889181624b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;1&quot;,&quot;110&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWherePaddingIsMissing" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="83fee536-07e0-00c9-afd6-f5a6016883a2">
      <Execution id="c9ef5923-089d-4fac-919f-45174d43c80d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWherePaddingIsMissing" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C000000000000000000000040000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1a3848da-39df-c0ac-228d-97af0597fa4d">
      <Execution id="f63541d7-7219-4a2c-acd5-eb82a0beb6d8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C000000000000000000000040000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;1000000000000000000000v00000&quot;,&quot;0&quot;,&quot;31&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0ffe36e8-8fbb-bc28-7710-cff9d80631c5">
      <Execution id="22a40835-6ff3-46e4-9f59-0f6de2539877" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;1000000000000000000000v00000&quot;,&quot;0&quot;,&quot;31&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;51&quot;,&quot;'3'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2f58c993-fa10-ded5-1568-481030cb968f">
      <Execution id="ad37784e-2e51-4f74-aad3-1a4dbcaf7e94" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;51&quot;,&quot;'3'&quot;,null)" />
    </UnitTest>
    <UnitTest name="CSUnitFlag(&quot;B000000000000000000000040000&quot;,&quot;0&quot;,&quot;Cstdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="53cd430e-0767-38f6-5caa-582fcf2ab532">
      <Execution id="3917adc4-edf3-48f7-bd8d-88418e40f31a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CSUnitFlag(&quot;B000000000000000000000040000&quot;,&quot;0&quot;,&quot;Cstdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;ANVDM&quot;,&quot;AidToNavigationStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0a04a77c-0eb2-bdb8-77ff-0527aa34ca20">
      <Execution id="3d566780-9eba-41a8-8087-24dd41c9c415" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;ANVDM&quot;,&quot;AidToNavigationStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;B000000400000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d0ad6cfb-ad29-f883-04cb-111ddf6971a3">
      <Execution id="26bf9fc9-76d9-4997-a8b1-2dd3cfac8c1f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;B000000400000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;42&quot;,&quot;127&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cfaa4022-b1ab-f1f7-b91e-af54c2ed3329">
      <Execution id="090793d9-6df1-4cc5-b645-435b72b4be54" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;42&quot;,&quot;127&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;42&quot;,&quot;'*'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9154bd0b-cdb4-1ae4-e831-66303f378d25">
      <Execution id="767be603-4fca-44f7-a9c2-ff8a1d8edb4c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;42&quot;,&quot;'*'&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000800&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d5322110-61d8-1cb9-43aa-234c410a1e7b">
      <Execution id="941ae2cf-0a53-498e-9b40-0708826e7451" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000800&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;19&quot;,&quot;'S'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8e13f186-4e37-725b-5e7c-8de4564ccc72">
      <Execution id="0d8adbe3-9602-4942-9dd8-3423823ec8d2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;19&quot;,&quot;'S'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;TRONDHEIM&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="af07cb37-69be-87db-644c-e58392c2f942">
      <Execution id="4203146c-3256-48c6-a45d-4b4dca39208d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;TRONDHEIM&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="08fd8447-b106-9d22-9742-c9fe6cd3a2f4">
      <Execution id="1e6e2b3b-8f0f-491b-9225-d80ac223f35e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_140(&quot;B000000000000000000000080000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="00f9ae03-d210-c0fc-f4df-b8aed487e397">
      <Execution id="543151ac-1dd7-42f7-be3c-68aff8ce263d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits139_140(&quot;B000000000000000000000080000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleTruncatedLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ddea7248-313d-f096-a543-593947955b28">
      <Execution id="22e3f959-8f9c-44a7-af66-660e7d18e077" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleTruncatedLine" />
    </UnitTest>
    <UnitTest name="Non_FragmentedMessageReceived" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="609894d0-8d5d-7572-06f7-869c73c0e9fe">
      <Execution id="ce4e0d27-104a-40d3-aa33-69eb0613dde1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Non_FragmentedMessageReceived" />
    </UnitTest>
    <UnitTest name="PartBMothershipMMSI(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="31f20ecb-f8a0-fee4-3115-c9729cf47d91">
      <Execution id="42d396b5-4893-4934-803e-6aa71d9aabf7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMothershipMMSI(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;100000000000000000000000P000&quot;,&quot;0&quot;,&quot;NoSpecialManoeuvre&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f2848bd4-6ff4-2768-0a69-f07c12fc819b">
      <Execution id="2c4bf9ed-5fff-444a-a3dc-236a60054026" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;100000000000000000000000P000&quot;,&quot;0&quot;,&quot;NoSpecialManoeuvre&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;100000@000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c1701f6b-b5f7-6323-8e44-da55a16f53e8">
      <Execution id="ae5ea1c1-2bd6-461c-a49e-49b88ed08395" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MMSI(&quot;100000@000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMMSI(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="557535c4-0a1e-a22b-6af6-c0d534facfda">
      <Execution id="8531d479-8947-40b0-92e9-71c4b642edd3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMMSI(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;FM5293Ppsrh1S?SmKP0&gt;0BOkJ0t0&quot;,&quot;0&quot;,&quot;22&quot;,&quot;1&quot;,&quot;877693198&quot;,&quot;0&quot;,&quot;910&quot;,&quot;4012&quot;,&quot;0&quot;,&quot;false&quot;,&quot;50812&quot;,&quot;62830&quot;,&quot;56&quot;,&quot;2367&quot;,&quot;1&quot;,&quot;false&quot;,&quot;false&quot;,&quot;6&quot;,&quot;6819584&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d6564536-1588-767b-392e-af461babdfd8">
      <Execution id="fc652f01-6fe0-4825-a5f8-be4074e239ae" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.ChannelManagementParserSpecsStepsFeature" name="FullMessage(&quot;FM5293Ppsrh1S?SmKP0&gt;0BOkJ0t0&quot;,&quot;0&quot;,&quot;22&quot;,&quot;1&quot;,&quot;877693198&quot;,&quot;0&quot;,&quot;910&quot;,&quot;4012&quot;,&quot;0&quot;,&quot;false&quot;,&quot;50812&quot;,&quot;62830&quot;,&quot;56&quot;,&quot;2367&quot;,&quot;1&quot;,&quot;false&quot;,&quot;false&quot;,&quot;6&quot;,&quot;6819584&quot;,null)" />
    </UnitTest>
    <UnitTest name="TagBlockPresent" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e566e537-c657-37d3-8b8a-29152d9047e0">
      <Execution id="3d948d57-cba5-4fd0-bb48-0e33918bdeba" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="TagBlockPresent" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;;028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000&quot;,&quot;0&quot;,&quot;11&quot;,&quot;0&quot;,&quot;2241071&quot;,&quot;2003&quot;,&quot;1&quot;,&quot;20&quot;,&quot;17&quot;,&quot;37&quot;,&quot;8&quot;,&quot;false&quot;,&quot;3.215745&quot;,&quot;41.96259&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5781079d-e8d6-99b5-8802-857764beb9cc">
      <Execution id="d6f92d09-44c2-4e8c-9719-e7b3b6790107" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateResponseParserSpecsFeature" name="FullMessage(&quot;;028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000&quot;,&quot;0&quot;,&quot;11&quot;,&quot;0&quot;,&quot;2241071&quot;,&quot;2003&quot;,&quot;1&quot;,&quot;20&quot;,&quot;17&quot;,&quot;37&quot;,&quot;8&quot;,&quot;false&quot;,&quot;3.215745&quot;,&quot;41.96259&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;500000000000000000000000000000000000000000000@0000000000000000000000000&quot;,&quot;0&quot;,&quot;LoranC&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c050b12c-92dd-28b7-3fd8-dc62e7ca1abe">
      <Execution id="fc4dcd1a-d1b3-4392-bc66-56e58dd80ea8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;500000000000000000000000000000000000000000000@0000000000000000000000000&quot;,&quot;0&quot;,&quot;LoranC&quot;,null)" />
    </UnitTest>
    <UnitTest name="LineStreamParserPassesAMessageWithPaddingThatIsTheFirstOfATwo_PartMessage" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2d805c2c-8c47-bb84-b2b0-19df4dcb8c16">
      <Execution id="4a7cdbf9-ed80-49ef-a837-fb7a345b29de" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="LineStreamParserPassesAMessageWithPaddingThatIsTheFirstOfATwo_PartMessage" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;STEVNS BATTLER&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9abfa4fa-0966-7acc-8fba-41269e486f0a">
      <Execution id="a372b4ce-0c92-4895-9afe-87eb89b706fa" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;STEVNS BATTLER&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2cb3167a-2758-019a-adfb-7be2e395844f">
      <Execution id="9f77cd16-302d-49d0-9928-46d4ad0c7ede" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="TimeStamp(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;30&quot;,&quot;'^'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2d370ee2-5ce0-563d-6806-116132fb1472">
      <Execution id="8792c7da-43ea-4729-b382-4a3500bd06bc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;30&quot;,&quot;'^'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8f636fe6-13e6-3d3c-268f-3c2189da45c5">
      <Execution id="185662f8-8c6a-4ae8-9954-5dbf2ff61bf9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;&quot;,&quot;0&quot;,&quot;EngagedInFishing&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="152c4fcd-7252-9f39-561e-59c1df217945">
      <Execution id="423433ac-6c99-4e19-ba30-c34090fadf82" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;&quot;,&quot;0&quot;,&quot;EngagedInFishing&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLineWithoutNewlineOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bd128498-dc85-7445-7977-58be309f9092">
      <Execution id="1886572c-0f6d-4f50-b11a-60fda4f4a9de" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLineWithoutNewlineOnly" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;&gt;&gt;m&gt;cDPp5HTL5@Ttp4j1L58pTpN2ba0EA8tr1&lt;8nbb0U&gt;0H4ThTpL0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;995339090&quot;,&quot;0&quot;,&quot;\&quot;NAVIGATIONAL WARNING **PETRON SBM** IS FAILING@\&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bd7780fd-fa19-5965-0760-d807f8ea9946">
      <Execution id="5637b07b-b4c4-4e2e-9344-7acf7536c167" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SafetyRelatedBroadcastParserSpecsStepsFeature" name="FullMessage(&quot;&gt;&gt;m&gt;cDPp5HTL5@Ttp4j1L58pTpN2ba0EA8tr1&lt;8nbb0U&gt;0H4ThTpL0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;995339090&quot;,&quot;0&quot;,&quot;\&quot;NAVIGATIONAL WARNING **PETRON SBM** IS FAILING@\&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5cdcdf43-8c7a-87dd-3541-11e8d901df78">
      <Execution id="ca3b8cf9-4923-49f4-a6d7-119c795c4ca0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;3&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;34&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="28d5c8a7-4ffd-56d3-53cf-33b3b80ec1b8">
      <Execution id="546b4229-4ed3-4be7-8d67-952245713ed5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880&quot;,&quot;2&quot;,&quot;34&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;0&quot;,&quot;18&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="37a0febe-8c68-5733-dc6c-6a87aaaf111f">
      <Execution id="cce3f27a-6f8f-4250-b2bb-3a89f3ef8aef" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;0&quot;,&quot;18&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="88ea683e-9766-0a38-0d85-f8319fe971d3">
      <Execution id="10767510-27c1-4eba-9de4-72ca12e631d9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d772bfcb-78c8-49c7-b154-7dee9ecaedd7">
      <Execution id="04adb662-4f60-4296-876a-33f94bed7ac6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="PositionAccuracy(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;5h000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="389bdfd8-3d3f-142c-3add-0f8f153be9bf">
      <Execution id="c5508f40-11f3-4497-a622-bce1d85b4602" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;5h000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSubMessage(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b60587a9-bf4d-e481-4748-93dcadb46aed">
      <Execution id="34f743cd-cd51-430b-937d-f3aa3bc68a85" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSubMessage(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;00000000h0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f2df8e2f-dd46-b40f-af79-547388f599c1">
      <Execution id="c77ce142-b151-482f-bd32-d9c1b4a8ae21" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;00000000h0000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="291b49c5-a11b-06c6-8921-59e3c8cc6041">
      <Execution id="b33b8d6b-2e37-46da-a07b-db3cb027995d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.LongRangeBroadcastMessageParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2e650580-d267-47c9-9121-7685c2c0122a">
      <Execution id="b3bb3f1b-120f-4d76-bdf5-bbb65fe0e089" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStern(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000006000000000000000000000&quot;,&quot;0&quot;,&quot;Aground&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="41ca4e6f-2ed3-ef99-9a74-c7bf219c3282">
      <Execution id="8ef92176-b92d-4ff5-bda4-5141e047ef7e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000006000000000000000000000&quot;,&quot;0&quot;,&quot;Aground&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioStatusType(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;Itdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="11f58379-48af-3869-1f0c-25f45522dad8">
      <Execution id="d2ce684c-c35a-4e41-b2cb-d5f57c9d59ee" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RadioStatusType(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;Itdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;31&quot;,&quot;'_'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d7d4a0f8-d8cd-ac68-71c7-8dafcbbd97fb">
      <Execution id="4342d8c4-d34e-440c-b789-f8ea8332b1cf" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;31&quot;,&quot;'_'&quot;,null)" />
    </UnitTest>
    <UnitTest name="RAIMFlag(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="85b64cab-4ae7-6812-6d95-d82c298a15ec">
      <Execution id="0a85ff21-94a5-4d17-b650-eed48805a975" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RAIMFlag(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="48d6c016-974d-2866-9cd5-62a3721cda10">
      <Execution id="6232dbb9-e2c2-44cd-9fae-668c346095c3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBShipType(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="db2b69c6-d8c8-769e-ec27-0ea339860550">
      <Execution id="29cbf081-b76c-49f3-8e43-7d83734b73ac" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBShipType(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;C0000000000000000000000000000000000000000000000000P0&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e1330fba-e1ca-6d45-259c-265b4255d5ba">
      <Execution id="1192d105-91c6-4090-bdfb-7e7c31d19b53" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToStarboard(&quot;C0000000000000000000000000000000000000000000000000P0&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitude(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;3096645&quot;,&quot;36216476&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="49f905b7-2729-ec3a-73d1-7f766540fbb6">
      <Execution id="4c37963d-17cd-4122-94b5-57dc72e0e0a7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="LongitudeAndLatitude(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;3096645&quot;,&quot;36216476&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,&quot;0&quot;,&quot;9&quot;,&quot;524&quot;,&quot;4832&quot;,&quot;5&quot;,&quot;4&quot;,&quot;0&quot;,&quot;1572403,342810,16584196,567978&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="74b131ad-7f18-876c-b22b-a6081f2694a3">
      <Execution id="3ead2af9-3d67-434e-ae9b-aeeefe80aa9f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.DifferentialCorrectionDataParserSpecsStepsFeature" name="FullMessage(&quot;A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb&quot;,&quot;0&quot;,&quot;9&quot;,&quot;524&quot;,&quot;4832&quot;,&quot;5&quot;,&quot;4&quot;,&quot;0&quot;,&quot;1572403,342810,16584196,567978&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;BSVDM&quot;,&quot;DeprecatedBaseStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="58299824-e1ca-02a8-3545-4af1f994886c">
      <Execution id="6a5b0d8c-2f0e-4bd9-a94c-631c0d8e2972" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;BSVDM&quot;,&quot;DeprecatedBaseStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;B&gt;eq`d@000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="233c0c1c-27f9-545b-d124-24ee06773ff7">
      <Execution id="4a96229c-a29f-4607-805a-7af2019c3873" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MMSI(&quot;B&gt;eq`d@000000000000000000000&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;:h0000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1c4e01d0-2099-4358-0a1b-f2a089a0fba5">
      <Execution id="8a2945c1-d796-4c8a-bf1d-695dc1e58370" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="RepeatIndicator(&quot;:h0000000000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="00184939-9091-f4e7-f8ff-d32cfd1fa0d8">
      <Execution id="5be810de-8897-4f0f-8ce6-4a389d8a4945" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;26&quot;,&quot;'Z'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aba19db0-7fd8-f103-2f47-f4947250c1be">
      <Execution id="b83b6818-9c22-46f8-b7b0-1f38058b752f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;26&quot;,&quot;'Z'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;13m69r00AfPlnG6U;43aD7MO0534&quot;,&quot;0&quot;,&quot;SpecialManoeuvre&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="160b15a1-4aec-726a-e54e-a6c36a8756e1">
      <Execution id="ba70adda-bede-4466-b388-ff4bfdc1d720" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;13m69r00AfPlnG6U;43aD7MO0534&quot;,&quot;0&quot;,&quot;SpecialManoeuvre&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;36&quot;,&quot;'$'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bc44fbf3-1471-b132-cdfd-f80810a48a89">
      <Execution id="b4d46d87-d51a-4686-8ebb-d00ec9422f8b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;36&quot;,&quot;'$'&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e3bdeef6-4676-079a-a19e-fe0427f5a315">
      <Execution id="66e962df-bb6d-487d-9c79-15e02a8a299b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;16&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="de6627ad-15e5-30f9-1318-ea5613250e56">
      <Execution id="f48d891c-a317-4c7c-aa2f-8e38d27f5303" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;16&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6a2bb297-8ab8-bc9b-d295-4f3f0970ee91">
      <Execution id="40a37548-7308-42df-9faa-e4d58c6fb1d4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_4(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;SMT&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7811b6b5-18a0-a328-c386-1775049d7a35">
      <Execution id="558aa2b9-93c0-499e-99ad-70b07d31dddb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_4(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;SMT&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;100000P000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f76a010a-4805-72f7-f4eb-b89e217953f5">
      <Execution id="cb848700-3c60-4fa0-8893-929760425bcf" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MMSI(&quot;100000P000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;8107857&quot;,&quot;46103377&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="42073682-43cd-d0be-fc55-9adebdb9be72">
      <Execution id="1740847d-0671-4cc2-be9d-8b95c8a4e3e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;1Co`hD000`0unrRcusDEcTOL0P00&quot;,&quot;0&quot;,&quot;8107857&quot;,&quot;46103377&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;C000000000000000003Pt0000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3599&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c4d5de09-f9e1-4b62-1f58-8fc3809a1d12">
      <Execution id="9e427cfb-64e9-488c-ac95-68bd2017df25" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="CourseOverGround(&quot;C000000000000000003Pt0000000000000000000000000000000&quot;,&quot;0&quot;,&quot;3599&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;50000000000000000000000000000000000000000000000010000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="89b4b627-b683-5180-f0c2-595b6a88c034">
      <Execution id="49da87c3-6963-44be-928b-0d5b9d8074c9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;50000000000000000000000000000000000000000000000010000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="11d99925-1db5-2a65-c0e1-b7cde4dc55a1">
      <Execution id="e40dc596-7b8f-499c-8757-ef50e926ba39" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;53m8:d`2F;v4hHQR220PE8l4pr0a:2222222221J0`?6600Ht8kCR81RDj1PDSDp8888880&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5fa3826b-6151-6eed-45bd-b43f22cb5dc4">
      <Execution id="04ae5f29-f297-4538-bdf6-3026071578fa" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;53m8:d`2F;v4hHQR220PE8l4pr0a:2222222221J0`?6600Ht8kCR81RDj1PDSDp8888880&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToPort(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d5228018-3e22-aaf7-a40d-fda110134d29">
      <Execution id="757ba80e-d333-45a2-bf98-92ef37ebc563" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToPort(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;59&quot;,&quot;';'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7cf6f8c8-e4da-636b-a2fd-8373e5f2c18b">
      <Execution id="c261b095-ab55-4145-9e03-327b913904cd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;59&quot;,&quot;';'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;14&quot;,&quot;'N'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1099d86c-0f9c-edc3-889c-f9d51735be57">
      <Execution id="d0e0175a-2583-41dc-8601-b1892510055a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;14&quot;,&quot;'N'&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;C000000000000000000000000000000000000000000000000P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="50ededf9-3f7e-fc9a-9d02-1c40afd11853">
      <Execution id="069092e0-9e7e-4297-88c3-956f73397c71" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToPort(&quot;C000000000000000000000000000000000000000000000000P00&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABCA&quot;,&quot;0&quot;,&quot;18&quot;,&quot;17&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="36a24959-d963-38c7-9e41-615a77ffe4c5">
      <Execution id="285ecc79-072f-49dc-8e11-c364a06bb404" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABCA&quot;,&quot;0&quot;,&quot;18&quot;,&quot;17&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a0331db2-c707-a90c-6b5c-d14602440d1e">
      <Execution id="08f2d9e8-180d-461f-a1a3-1d8aabb37647" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;C000000000000000000000000000000000000000000000400000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b752a33c-2442-cf1f-5a6c-74ddeda6d07e">
      <Execution id="8852a762-5a97-4855-8322-9b559febb177" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToBow(&quot;C000000000000000000000000000000000000000000000400000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;I&gt;M4ej0&quot;,&quot;0&quot;,&quot;25&quot;,&quot;0&quot;,&quot;970010056&quot;,&quot;0&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;4&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3942ec0b-4c15-50e6-30d8-c1cd036edcad">
      <Execution id="a1b0b9b4-63df-4548-8c9c-62517781b7aa" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SingleSlotBinaryParserSpecsStepsFeature" name="FullMessage(&quot;I&gt;M4ej0&quot;,&quot;0&quot;,&quot;25&quot;,&quot;0&quot;,&quot;970010056&quot;,&quot;0&quot;,&quot;false&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;4&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;16&quot;,&quot;'P'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8cc6dcb3-3ef8-8a08-91c6-7896afb29ea1">
      <Execution id="e25b0b6a-4e33-4218-bb4f-a720421e5c12" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;16&quot;,&quot;'P'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Two_FragmentMessageFragmentsReceivedTooManySentencesInTheMiddle" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="097821c9-d0a1-e795-b147-af0d785aa6ca">
      <Execution id="c6b719d3-3e6c-4110-95b5-7502f774ee5a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Two_FragmentMessageFragmentsReceivedTooManySentencesInTheMiddle" />
    </UnitTest>
    <UnitTest name="IECTagBlockSingleLineWithGroup" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f2e82c15-888e-1f07-9ea4-c3ec2f89ca75">
      <Execution id="94e64f75-6092-4f66-9dec-7d0d196dc0ad" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="IECTagBlockSingleLineWithGroup" />
    </UnitTest>
    <UnitTest name="RadioSubMessage(&quot;1000000000000000000000000200&quot;,&quot;0&quot;,&quot;8192&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8ac20535-0278-9442-7732-425349ea785b">
      <Execution id="dc6beca2-d964-42e7-a642-2359ad1a4b58" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSubMessage(&quot;1000000000000000000000000200&quot;,&quot;0&quot;,&quot;8192&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;15&quot;,&quot;61&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="274e3943-9e61-9b4d-fb31-5b33e5c45bd9">
      <Execution id="88cd900f-7549-49b9-8611-8fccee1de3d8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;15&quot;,&quot;61&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;1000000000Owwwv0000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="87c70220-aa35-8862-9293-cc8f5599d321">
      <Execution id="b2766108-dcd7-43f6-9fdf-37a017feb487" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;1000000000Owwwv0000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToBow(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;16&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a724d7b0-9096-c4bb-ae3b-c3c8e82dc0c4">
      <Execution id="3d9319c8-71fe-4015-bb16-8e46bbb49f57" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToBow(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;16&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C000000000000000000000080000000000000000000000000000&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7855ae7e-4b65-5404-75ba-baa82a75afe4">
      <Execution id="13c4bb7e-4784-42fc-9051-38d5d675b467" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C000000000000000000000080000000000000000000000000000&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;:@0000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="32d222d0-55aa-64e4-e060-7ca36447ea37">
      <Execution id="dbfa00ca-4841-4719-a794-f6fafdf9baf0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="RepeatIndicator(&quot;:@0000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;C000000008000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7a7cd104-7ed9-c88a-8a4f-2d87243e42a6">
      <Execution id="c4853983-0443-476e-823b-27945592f572" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionAccuracy(&quot;C000000008000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;&lt;815N7n0AABp19CPD5CDP@&lt;CP13;QQ0&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;538009119&quot;,&quot;1&quot;,&quot;538002734&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot;AIS TEST PLS ACK!!@\&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ed45f407-76f1-efe1-5539-924a7b8a3b96">
      <Execution id="e4c950f9-d8e7-49ba-ac92-2704a0ebb955" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedSafetyRelatedMessageParserSpecsStepsFeature" name="FullMessage(&quot;&lt;815N7n0AABp19CPD5CDP@&lt;CP13;QQ0&quot;,&quot;0&quot;,&quot;12&quot;,&quot;0&quot;,&quot;538009119&quot;,&quot;1&quot;,&quot;538002734&quot;,&quot;false&quot;,&quot;false&quot;,&quot;\&quot;AIS TEST PLS ACK!!@\&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBUnitModelCode(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fd63c204-e89d-2f23-fa32-c61bd07ead76">
      <Execution id="348cdecd-a4f9-461c-bda5-c6c677c65879" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBUnitModelCode(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;C00000?t00000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;255&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="54ce8bfd-78cc-1fc5-f5cf-02e9dbb2d354">
      <Execution id="30a53541-957b-42dd-9c20-2fc085acabb7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;C00000?t00000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;255&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_140(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="deb0ac60-7db0-8081-4720-4dfc3b5ac1b2">
      <Execution id="fd20f20b-3482-4fec-9b0d-896daeb5aa34" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits139_140(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C0000000000000000000000@0000000000000000000000000000&quot;,&quot;0&quot;,&quot;8&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9dc6bdaf-5281-8e53-8cf5-d6edebab3bb8">
      <Execution id="472f65f2-d5a7-45e3-9783-b3d7f4d2c544" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C0000000000000000000000@0000000000000000000000000000&quot;,&quot;0&quot;,&quot;8&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartASpare(&quot;H000000000000000000000000020&quot;,&quot;0&quot;,&quot;128&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ddc06bca-4f6c-fe7e-049f-57c5d1a664e5">
      <Execution id="4807bf4d-96c8-43d1-a0a6-5ffe959d533b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H000000000000000000000000020&quot;,&quot;0&quot;,&quot;128&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;17&quot;,&quot;'Q'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="05b162b6-0513-a4c2-c5f5-bbeb05f0bd0d">
      <Execution id="f6f42f87-b46b-4404-ad59-ddbe0688617e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;17&quot;,&quot;'Q'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ReadPartBAsPartAThrows" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c883ccdf-8a0c-8384-cd66-4e12faa1ec2c">
      <Execution id="7cc5af00-cc6c-4035-b2b2-924d1e9ed8b3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="ReadPartBAsPartAThrows" />
    </UnitTest>
    <UnitTest name="DimensionToBow(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9a09bf79-60b0-b03c-1713-ca10a247dd63">
      <Execution id="bddab4e6-b47d-4d46-809d-ea6f08b6e297" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToBow(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleCRLFBlankLineOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b1513997-d316-7779-e7dc-251957007d9e">
      <Execution id="628800e1-ea9e-4436-a9e7-b458f740965a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="SingleCRLFBlankLineOnly" />
    </UnitTest>
    <UnitTest name="InterleavedMulti_FragmentMessagesDistinguishedOnlyByGroupingInHeader" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dec45e98-f794-4534-d524-b21e73a91d95">
      <Execution id="4774e13f-facc-4c2c-926b-df6eee4c38c6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="InterleavedMulti_FragmentMessagesDistinguishedOnlyByGroupingInHeader" />
    </UnitTest>
    <UnitTest name="IMONumber(&quot;53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2bf57e75-3dec-8bad-8922-ab5af265505d">
      <Execution id="ec89054d-1c4e-47cb-8942-e0a03f9ff8c9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="IMONumber(&quot;53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;50000000000000000000000000000000000000400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e3774045-3f96-cb80-56d7-1af371ee4f2f">
      <Execution id="83f802f6-853f-4dbf-b6da-29a1ab49f722" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;50000000000000000000000000000000000000400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" />
    </UnitTest>
    <UnitTest name="AssignedFlag(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="edf0240d-f9e3-51a7-8f79-a47cab4f8c48">
      <Execution id="0eef92e6-48a9-4e25-a12e-68a5d41f6816" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="AssignedFlag(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;4&quot;,&quot;119&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7e7b50e7-cfbb-195e-ca37-85a3961d42d5">
      <Execution id="22cdef69-af1a-4cc7-b580-265eb5372351" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;4&quot;,&quot;119&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnspecifiedStandardTagBlockWithGroup(&quot;g:1-2-7764,s:AIS,c:1706800480*13&quot;,&quot;AIS&quot;,&quot;1706800480&quot;,&quot;1&quot;,&quot;2&quot;,&quot;7764&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d7f68091-ac89-0646-0c4c-f4e3da416ec5">
      <Execution id="8f6809ba-044c-4cd1-9096-f1848b98fcb5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="UnspecifiedStandardTagBlockWithGroup(&quot;g:1-2-7764,s:AIS,c:1706800480*13&quot;,&quot;AIS&quot;,&quot;1706800480&quot;,&quot;1&quot;,&quot;2&quot;,&quot;7764&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;5000000000000000000000000000000000000000000000?P00000000000000000000000&quot;,&quot;2&quot;,&quot;31&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="27e5818b-c211-b307-55d5-e9e4ee43fa5b">
      <Execution id="c1cb14fe-c10f-4da2-9043-50fa85234579" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;5000000000000000000000000000000000000000000000?P00000000000000000000000&quot;,&quot;2&quot;,&quot;31&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;25&quot;,&quot;'Y'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="888fe45a-f7d5-3444-ef43-8ab3896d4a7c">
      <Execution id="2e994ae2-c944-4a08-ada2-5c1b2fcc4711" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;25&quot;,&quot;'Y'&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000002000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;32&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1ce261c8-497d-8b9d-cb4a-891ee95f43b9">
      <Execution id="2d585a92-fd97-4c6c-93bc-88f681b46725" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000002000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;32&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="266e26f7-d379-a372-c268-d60745414997">
      <Execution id="4d2c9f4c-5664-4d7e-9621-11349a84e611" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;0&quot;,&quot;Gps&quot;,null)" />
    </UnitTest>
    <UnitTest name="DisplayFlag(&quot;B000000000000000000000020000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="77314d58-01e3-55d0-6dcf-cb0e66fdf3e2">
      <Execution id="1b8ad3f5-4ad0-49f1-860e-8b9610339a61" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DisplayFlag(&quot;B000000000000000000000020000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2b4154d4-acc4-cb94-f810-d9ac46e11df5">
      <Execution id="27e412c1-8157-45c6-83ad-17800eb72854" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedSafetyRelatedMessageParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,&quot;2241071&quot;,&quot;2003&quot;,&quot;1&quot;,&quot;20&quot;,&quot;17&quot;,&quot;37&quot;,&quot;8&quot;,&quot;false&quot;,&quot;3.215745&quot;,&quot;41.96259&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="043ff5f8-a1b3-b881-e5cd-729ec38a7238">
      <Execution id="e2db0aa8-81a6-437b-b6e8-d60db015570d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BaseStationReportParserSpecsFeature" name="FullMessage(&quot;4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000&quot;,&quot;0&quot;,&quot;4&quot;,&quot;0&quot;,&quot;2241071&quot;,&quot;2003&quot;,&quot;1&quot;,&quot;20&quot;,&quot;17&quot;,&quot;37&quot;,&quot;8&quot;,&quot;false&quot;,&quot;3.215745&quot;,&quot;41.96259&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;13n@kJ0000PIk0@Sc2==PDQd`53L&quot;,&quot;0&quot;,&quot;NoSpecialManoeuvre&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="45147d28-5223-17c0-ea05-046316f12876">
      <Execution id="a6a0f28c-55d6-4467-b2ce-a5e5b565297f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;13n@kJ0000PIk0@Sc2==PDQd`53L&quot;,&quot;0&quot;,&quot;NoSpecialManoeuvre&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a9ebcf75-a817-e431-5e1e-1b6610bc5839">
      <Execution id="94eb4f3d-473c-4861-8521-4f2647b0ba87" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForWig&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="73781839-e391-f846-4ded-b9e602f19ac5">
      <Execution id="cce31100-4d37-4506-b097-d12f4fd764e1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForWig&quot;,null)" />
    </UnitTest>
    <UnitTest name="CSUnitFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="863ddb91-388e-49d5-1e8c-1746bdb93ed7">
      <Execution id="011e3f16-8ec0-4593-887b-96e189a5b6a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CSUnitFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000000800000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cf315c21-638c-e374-3fa3-1d62def2beca">
      <Execution id="128e987f-700f-44bd-a334-8c54d6289938" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000000800000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;AKVATRANS@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="92e2f593-1c16-e911-13b1-2097223330be">
      <Execution id="9a6f866f-2bb2-4da7-874d-1e849bbd4e29" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;AKVATRANS@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLFBlankLinesOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6da058a8-f2e7-d263-4f5d-51031d7d11ec">
      <Execution id="08efd52a-0f98-4979-958d-aff2211c9682" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleLFBlankLinesOnly" />
    </UnitTest>
    <UnitTest name="Name(&quot;C00000000000000000000001suv0000000000000000000000000&quot;,&quot;0&quot;,&quot;=&gt;?@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="56bd4a5b-9e83-03fd-8e58-a9a6f004a9f7">
      <Execution id="f152a532-21a9-4375-8c8c-33d77abf06c5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Name(&quot;C00000000000000000000001suv0000000000000000000000000&quot;,&quot;0&quot;,&quot;=&gt;?@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d2f9b5e6-49a1-041e-52cf-a35ee3c324cd">
      <Execution id="726e90e9-2d4c-4ba6-90ba-507d489d4bbd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AssignedModeCommandParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="MultipleLinesWhereFinalLineHasNoNewline" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="517ac1a3-f405-5ba4-0de9-2fdcdfdb9717">
      <Execution id="774bc92b-64c8-414e-84c7-13b8a375d522" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleLinesWhereFinalLineHasNoNewline" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;13mSjt7P001KOu6`6:3@0?wJ0&lt;03&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d9446d00-7f0a-dd64-da7a-072cac8ee7ce">
      <Execution id="6db684f7-f998-4447-a1b0-6bb4cc828c11" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;13mSjt7P001KOu6`6:3@0?wJ0&lt;03&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStarboard(&quot;H000004000000000000000000010&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="81dd4e8b-6629-ac01-97f5-513accb067fa">
      <Execution id="41e94497-9542-4661-b182-7bcb852ee4a8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStarboard(&quot;H000004000000000000000000010&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;C00000000000000000000000000000000000000000000000P000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1d79fabf-8846-2af6-dc4f-b24a6cb7a515">
      <Execution id="b5cb623a-68b6-4467-82eb-3d8201dae823" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToStern(&quot;C00000000000000000000000000000000000000000000000P000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMMSI(&quot;H00000T000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ef830dfc-44c9-8911-e019-d065b318ee64">
      <Execution id="c992cdee-6fe6-44c3-82b2-affc6ebc6c26" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMMSI(&quot;H00000T000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitude(&quot;B000000007wwwwP0000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="46370188-f9de-3064-68f7-790dc7e77d2f">
      <Execution id="741297b7-76e6-4ab2-a3f0-66e1d13c4b01" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="LongitudeAndLatitude(&quot;B000000007wwwwP0000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;AIVDM&quot;,&quot;MobileStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3469b7d9-f2e6-2967-5df0-7bc30de34b83">
      <Execution id="bea77e10-3743-4ceb-8da7-638435384b43" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;AIVDM&quot;,&quot;MobileStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="IECTagBlockSingleLine(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f0f053a5-9341-bcaf-3b14-af62c0ced1d5">
      <Execution id="8328d558-d927-42fc-bd9d-036b0178882f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="IECTagBlockSingleLine(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;62&quot;,&quot;'&gt;'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="80f714b7-3cf2-4245-5525-f455d6c9a322">
      <Execution id="45f9212b-5274-4799-a272-112ff5ccbd20" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;62&quot;,&quot;'&gt;'&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;31&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5ce065dc-140e-8f97-0183-83ba61be2920">
      <Execution id="c231f0c0-aa8a-4bbe-bfa5-cc3ca1b1499a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B3m6D@P0005r0R``WaiC;wgUkP06&quot;,&quot;0&quot;,&quot;31&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLinesWithBlanksInMiddle" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c9d22342-68af-6f2b-9225-d04dde4b4033">
      <Execution id="a14a4586-0be7-476b-b2a0-53c6ad5c7e6a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="MultipleLinesWithBlanksInMiddle" />
    </UnitTest>
    <UnitTest name="RadioStatusType(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1a037fdb-7e21-141c-ff31-66214af5c84f">
      <Execution id="825d5335-cd12-4ca9-854f-18175e48b930" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RadioStatusType(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;Sotdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;257034600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a85a301a-5531-1628-0928-9e745146f8a3">
      <Execution id="d8bbaafb-7326-4d85-b4b4-dd7b3bfe9d54" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;257034600&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;4&quot;,&quot;'D'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="487373dc-dafb-4517-5c6a-5d74a95cf239">
      <Execution id="a52a28c7-de50-4349-bb2f-2ef0db9ceba0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;4&quot;,&quot;'D'&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;BP00000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5cb16de8-99a4-6d68-7230-11a54ec4c223">
      <Execution id="e8a63755-64da-4544-b046-28794656f50b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;BP00000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;29&quot;,&quot;']'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9fd27d51-93a4-c66b-0cd3-5eafb740b272">
      <Execution id="ebb0c7b8-b9b7-482e-a32b-6b69d5c2d87d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;29&quot;,&quot;']'&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;1000000P00000000000000000000&quot;,&quot;0&quot;,&quot;-128&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ed790a87-7415-5b8f-8ec4-b3de7d168bd4">
      <Execution id="97f41824-f698-4245-941b-b59146420ff7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;1000000P00000000000000000000&quot;,&quot;0&quot;,&quot;-128&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;13B6BP80000jt=tPk:Isf:F@0538&quot;,&quot;0&quot;,&quot;331&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8c8c9ac9-f81f-0e48-361e-1080707e9383">
      <Execution id="d72073ae-a156-42bf-bd29-d00bba8827b9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;13B6BP80000jt=tPk:Isf:F@0538&quot;,&quot;0&quot;,&quot;331&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c579684-6f50-051b-fbec-837d1c70eb7e">
      <Execution id="eee694df-c824-4137-90ed-3cfc14efa836" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d244013b-46db-30f8-5da4-71951c795b7a">
      <Execution id="1e5a9ef7-1e63-4b37-b1ce-5360f964173a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="DTEReady(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="56f85b12-9002-3421-1d3c-2ca7bb215814">
      <Execution id="7994c3d9-0492-4866-ae5f-650d8959aeab" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DTEReady(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;=5@jof1HMrCPF7NTph&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;353155000&quot;,&quot;0&quot;,&quot;371059000&quot;,&quot;0&quot;,&quot;371059000&quot;,&quot;3&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7b37bf3b-774f-446b-8274-f853f2e9f3e4">
      <Execution id="6312526d-4f83-4c00-bce4-99da7061bf25" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AcknowledgementParserSpecsStepsFeature" name="FullMessage(&quot;=5@jof1HMrCPF7NTph&quot;,&quot;0&quot;,&quot;13&quot;,&quot;0&quot;,&quot;353155000&quot;,&quot;0&quot;,&quot;371059000&quot;,&quot;0&quot;,&quot;371059000&quot;,&quot;3&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H00000000000000000000000004&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9b586a11-6d3a-3799-889b-9a413a168585">
      <Execution id="5f423003-9e65-4b05-8b71-ac64f4d968a4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H00000000000000000000000004&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1c319b7e-07dd-ad3a-692c-1a1c52fbe121">
      <Execution id="018e1bf6-7347-4b7c-80b9-afce02f3910a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000009000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForHsc&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ea509acf-3e16-781b-608e-f9e68cf0ca08">
      <Execution id="5138777e-c0f1-49dd-9bdc-237bbabcbae6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000009000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForHsc&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;H3m9b308tL5&lt;d`4E80000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eff3441d-74fa-e9a0-5be7-63b0c905a70e">
      <Execution id="6528a952-5782-413f-b1a9-1db09fa4a904" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;H3m9b308tL5&lt;d`4E80000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;24&quot;,&quot;'X'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="98ccd8d7-0d52-6896-c7a1-9cbdd87734d6">
      <Execution id="c2d2f800-2f55-4d1f-ac23-0b9d6bc21ea6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;24&quot;,&quot;'X'&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBShipType(&quot;H3uG2nTUCBD5l0Q00000001@4210&quot;,&quot;0&quot;,&quot;PleasureCraft&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="09222f1f-c1d9-4415-dcf8-90b05ec55a12">
      <Execution id="778accbe-d5a2-4f67-b248-e1dcf68aebeb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBShipType(&quot;H3uG2nTUCBD5l0Q00000001@4210&quot;,&quot;0&quot;,&quot;PleasureCraft&quot;,null)" />
    </UnitTest>
    <UnitTest name="RaimFlag(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="59b17cf1-cd86-d331-86e5-1f1346149eb2">
      <Execution id="0301e5b0-16b3-4289-ba6d-1dd30ae21379" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RaimFlag(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;1&quot;,&quot;27&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="01cb9f57-d5b2-1d4d-5ca0-719caf9f76eb">
      <Execution id="280ee611-0f19-4c01-a587-375324ff8704" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;1&quot;,&quot;27&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;C000001000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;16&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e9872385-5a4e-dda9-0e25-bdff79815a2f">
      <Execution id="b924a072-357e-4355-a774-56d8c93521a9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;C000001000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;16&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e4d776fa-6f7b-7b9c-324e-3e0ee4e2cdcb">
      <Execution id="359c31d8-5fa1-4b60-a453-b697a148133c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioChannelCode(&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="98d00d21-bc84-f67f-930b-bec52c9a47c3">
      <Execution id="5a816b04-3251-4af5-9763-624ae018cb24" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="RadioChannelCode(&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="OneUnparseableLineAndOneGoodLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="97340da8-6228-03ba-0549-5bb32bcdad64">
      <Execution id="f4e71582-4dab-4705-bd7f-c7c60d538a2a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="OneUnparseableLineAndOneGoodLine" />
    </UnitTest>
    <UnitTest name="MultipleLinesWithBlanksAtStart" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="71b31e5e-a294-5c82-8cda-96afa1d33120">
      <Execution id="87df9ca0-550d-406a-9db7-87bc5b63c436" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleLinesWithBlanksAtStart" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;3&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c18cd688-61b3-83e4-9506-62156136b95e">
      <Execution id="a60abcbd-cd66-4cf9-8de6-2a45aadd95bb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;3&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;75&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="22e69c94-7909-6b47-bca6-11f676145e1a">
      <Execution id="5b216011-83f4-4f88-a2be-c4e2083a3629" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;75&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;316052108&quot;,&quot;0&quot;,&quot;200&quot;,&quot;10&quot;,&quot;2&quot;,&quot;d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a9fa4ae2-aaaa-b21c-9df7-c9b74e388bb0">
      <Execution id="f0ec425d-28be-418a-8188-2c9533dc05ae" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BinaryBroadcastMessageParserSpecsStepsFeature" name="FullMessage(&quot;84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&quot;,&quot;0&quot;,&quot;8&quot;,&quot;0&quot;,&quot;316052108&quot;,&quot;0&quot;,&quot;200&quot;,&quot;10&quot;,&quot;2&quot;,&quot;d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bfe55cc1-2d4b-ac49-99f5-a5fd668b1793">
      <Execution id="1d7aff57-e344-474d-9d9d-271a65b2359d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;2000&quot;,&quot;0&quot;,&quot;5&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;:9NWsc1sgBDL&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;636091308&quot;,&quot;0&quot;,&quot;518998343&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0281243d-3a5f-63cb-fa5a-01b65a672989">
      <Execution id="3559904b-42ac-42ac-b9af-bdec777875ed" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateInquiryParserSpecsFeature" name="FullMessage(&quot;:9NWsc1sgBDL&quot;,&quot;0&quot;,&quot;10&quot;,&quot;0&quot;,&quot;636091308&quot;,&quot;0&quot;,&quot;518998343&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMMSI(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;257695500&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eebe7cd9-c3cb-f5d9-b9e8-a7420e9160d7">
      <Execution id="728157e5-00e4-42c7-9883-798d1e7739ec" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMMSI(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;257695500&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a1c713cc-d0b4-faa4-ec0d-c0b13b9449a9">
      <Execution id="9a95decc-001c-45b2-a2e2-c1a2533fa12f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="PositionAccuracy(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLFBlankLineOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="964e711f-86cc-8ecb-221c-9a27cc9b9118">
      <Execution id="4953a78a-ba0f-4bd6-b5cb-64bc3756ce4a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="SingleLFBlankLineOnly" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;50000000000000000000000000000000000000000000020000000000000000000000000&quot;,&quot;2&quot;,&quot;8&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="839a5105-1f29-8cd7-59d6-7db4c115ed2f">
      <Execution id="64f2404c-b42a-4fba-a97c-f9acdce60dfe" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;50000000000000000000000000000000000000000000020000000000000000000000000&quot;,&quot;2&quot;,&quot;8&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2242121&quot;,&quot;0&quot;,&quot;-3828&quot;,&quot;21976&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e18d598b-6e72-0fe9-f26b-3d06fa0ef488">
      <Execution id="48db881f-dfb4-4139-a1a4-98f812495d3b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsStepsFeature" name="FullMessage(&quot;A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2242121&quot;,&quot;0&quot;,&quot;-3828&quot;,&quot;21976&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2GvJ:0`5?ku1ET:wdh69@gvkhH?&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBUnitModelCode(&quot;H0000040000t0000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="56d67bc1-e43f-8c0f-1ea1-007e833b9438">
      <Execution id="6d7d7857-77bf-45f2-9b24-f6f28e37f7eb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBUnitModelCode(&quot;H0000040000t0000000000000000&quot;,&quot;0&quot;,&quot;15&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ce2d554f-d77e-bb59-fa53-00f4d20ce384">
      <Execution id="e8474fd5-53e9-4862-ad54-4db96e22f5da" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="SpeedOverGround(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b7b34dea-ee3c-cc24-16c4-1e5aaa5ef52c">
      <Execution id="f17e9ed8-1a74-4a89-a730-bf8b71246d4c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStern(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="928b4530-2f70-467d-7fc2-565740358501">
      <Execution id="458129cc-06dd-4612-b51e-f7fe5d5fa2ab" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStern(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="TagBlockNotPresent" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cda159b9-68c5-e199-f96e-bdbd1994bb82">
      <Execution id="347fc6ef-43e6-467c-983a-81d2c2383479" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="TagBlockNotPresent" />
    </UnitTest>
    <UnitTest name="RAIMFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="57fecdc4-bb9b-44ac-023e-bdf9637ee1ef">
      <Execution id="c9e9e5e4-d351-4bad-b82c-25b54a5254dc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RAIMFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880&quot;,&quot;2&quot;,&quot;TankerAll&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5575e3d6-c86e-0aee-1bc3-8d9a4a92d138">
      <Execution id="a116216b-973a-4738-a7cf-ec49a2708832" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880&quot;,&quot;2&quot;,&quot;TankerAll&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;ReservedForFutureUse11&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ee78e767-37f8-6eb6-959e-e6eaa4994c47">
      <Execution id="59c69174-bf92-4b24-b35d-87ac35960367" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;ReservedForFutureUse11&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="90d1ee4d-c446-3041-ec9e-d98300634b7e">
      <Execution id="81ba3fd5-9215-4cbb-b9e5-5af95b82549c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.InterrogationSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;32&quot;,&quot;' '&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d5005810-ba10-5061-b2bb-b6816e38b312">
      <Execution id="458dead3-7d16-4d22-bb61-f8f33bd0d138" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;32&quot;,&quot;' '&quot;,null)" />
    </UnitTest>
    <UnitTest name="CallSign(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;OWBY2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1fbf5e61-48e2-da54-a1e5-a22002bf2fa8">
      <Execution id="661d3686-2b52-4b16-b34b-9b230622eeac" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="CallSign(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;OWBY2&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1328f662-0aba-282d-cc57-bf9ecc283b3c">
      <Execution id="92d97a93-df8a-46c8-95ed-f16082644c6f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStarboard(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="735ac887-e916-5ba5-f56c-7180c693e802">
      <Execution id="45b54438-64f7-4e4d-8de5-98998d0cd809" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToStarboard(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="264cd5c6-a4e2-d5ff-d135-e4f88a2529a2">
      <Execution id="29563241-2b7a-41fa-8e13-1fe1dfc8b578" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBRepeatIndicator(&quot;H@00004000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3e9548bc-c9d4-3bd3-145f-680c5b777cd1">
      <Execution id="0cf76986-9cb6-44e6-ab20-762e3bee231f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBRepeatIndicator(&quot;H@00004000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9eee4542-8284-0d0c-a7cb-35b376e5ae4f">
      <Execution id="f6c41b5f-f1a0-41f6-94e4-848009eb0dbb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RepeatIndicator(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStarboard(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b33c6a45-e283-9138-9bb1-f8306a5bd1bb">
      <Execution id="b7a11cb6-2b32-4d86-b383-88b59a94f9a7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStarboard(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToBow(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;10&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d3cf6644-051c-5037-c245-352d8d1884da">
      <Execution id="3a3d4435-6eb7-4ba5-85d7-3e4d5c67a78c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToBow(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;10&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMinute(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;60&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="822d1b67-f4ea-4bf1-1b8b-06e2c1b35848">
      <Execution id="b4de0a22-b57f-4705-8c29-dda45af0643f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMinute(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;60&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMothershipMMSI(&quot;H000004000000000000000000010&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8ba52c88-ce82-6444-4595-423daa8a3ea8">
      <Execution id="140c70f5-d54d-425d-807b-98b6eed81c03" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMothershipMMSI(&quot;H000004000000000000000000010&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;258590000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c9a7ed33-28a5-5f4d-54c8-fddee0e768ea">
      <Execution id="56d176c6-95ac-4afd-8be0-497623d6ab80" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="MMSI(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;258590000&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAMonth(&quot;5000000000000000000000000000000000000000000000P000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f800f507-b0e1-50dc-446d-4fca2f94e592">
      <Execution id="609a4f6e-6589-443b-8bf3-1b743ad7921d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAMonth(&quot;5000000000000000000000000000000000000000000000P000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMessageType(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="03524cdd-bb61-2a2e-21c2-a7609f06c34b">
      <Execution id="54e4ea55-42a2-4a12-9b4c-9b6f657ea6f4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMessageType(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;500000000000000000000000000000000000000000000&lt;0000000000000000000000000&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="16d5f37f-7cee-b9f0-33b2-400b1fec0376">
      <Execution id="c30a5a35-8624-4b4c-bdd1-a055af5cc30d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;500000000000000000000000000000000000000000000&lt;0000000000000000000000000&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;60&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="72e599a5-ffae-234c-14f5-6f09e0450aee">
      <Execution id="52bc5258-f794-4807-b4c5-a61bc3668e45" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;60&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioChannelCode(&quot;A&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3a2417fc-e555-e259-ab1d-9374da335c4d">
      <Execution id="1b4867d3-5667-48c0-b711-e3b225603b9d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="RadioChannelCode(&quot;A&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000060000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ba3ba26d-aa49-ab9a-a23c-c44fc8f5e966">
      <Execution id="b4cf49e1-fddd-4ef1-a382-5b47db3ca956" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;1000000000000000000000060000&quot;,&quot;0&quot;,&quot;137&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bcd4fcdf-b58f-3d8f-0d09-91e53522ba88">
      <Execution id="d47b8362-362c-4426-9911-ebbd1cf2a13b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;50000000000000000000000000000000000000000000000000P00000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="02b15256-76bd-543a-81b0-124e6cd71cda">
      <Execution id="bc68397c-2a61-45e1-b4f4-b0bbbd39db3f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;50000000000000000000000000000000000000000000000000P00000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBSerialNumber(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bfa23b9b-f329-c854-571b-2c0a6dda82fd">
      <Execution id="d75f7a26-fe6f-41bc-8839-80ecd963a0d5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSerialNumber(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;63&quot;,&quot;'?'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fe723703-7572-54b0-3474-b5d2606442ec">
      <Execution id="d24be1ef-910f-4b25-a2b7-cd189ab15b87" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;63&quot;,&quot;'?'&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000001400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;17&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b3603fb8-b01f-e636-b3b2-815f3d2282d6">
      <Execution id="c9f241c9-6af5-4216-a6b4-b1b650f5a42e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000001400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;17&quot;,null)" />
    </UnitTest>
    <UnitTest name="AssignedFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f52ff216-48b9-236f-d1ec-ac2720df6689">
      <Execution id="4058704b-5d56-4856-83f1-3db81cbaf6b3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="AssignedFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003&quot;,&quot;0&quot;,&quot;304&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4e097ab2-06b3-46b7-6f12-dff8a9dfaa3d">
      <Execution id="46099c57-31c2-456a-9665-e2fc24b3847e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003&quot;,&quot;0&quot;,&quot;304&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABC1&quot;,&quot;0&quot;,&quot;18&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="53bc1628-11f3-3c3b-05cb-47b16a6d9d4b">
      <Execution id="97408c5a-e6b1-41b9-a86f-51600bd9ad89" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABC1&quot;,&quot;0&quot;,&quot;18&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;33m9UtPP@50wwE:VJW6LS67H01&lt;@&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ebad54cf-5d79-398d-b8f0-88418703d4d3">
      <Execution id="75514368-5c6e-490f-b24e-c2e41b449d27" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;33m9UtPP@50wwE:VJW6LS67H01&lt;@&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="034860b2-d474-0b44-009e-e3eef2c70ef0">
      <Execution id="ec35a7b2-2a3a-4ca3-906c-729b79b20b03" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="PositionAccuracy(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ca45b540-c90e-13bf-fdde-ce3e2fc84842">
      <Execution id="1ec3a665-9196-4711-88a3-7041a699a6f5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;60&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessagePart(&quot;H000008000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="81294266-c252-bcab-99f8-9b4fb844e549">
      <Execution id="448a74cd-d1d7-44b7-b805-91039273ae94" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="MessagePart(&quot;H000008000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;1000000000000000000000001P00&quot;,&quot;0&quot;,&quot;ToOtherStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2332e7f4-f5a0-ed03-e0b7-1dca38c68689">
      <Execution id="a400a805-5cba-4c0a-8a06-dbc97df75008" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;1000000000000000000000001P00&quot;,&quot;0&quot;,&quot;ToOtherStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="DTEReady(&quot;C00000000000000000000000000000000000000000000000000P&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6a7e4c28-84ca-448a-9dcc-738a2da75705">
      <Execution id="117ffe49-52e8-4047-8942-f6846000c508" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DTEReady(&quot;C00000000000000000000000000000000000000000000000000P&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBSpare(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dc8bd6fa-53ee-0563-8572-adc5f47cf5aa">
      <Execution id="b390d7c4-f775-4961-97b6-a7e756946b6c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSpare(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="244f3fff-d30a-d150-5bc9-b1f81e2989cd">
      <Execution id="b60a88e0-03b5-4fab-bcf3-5e7a40481ec4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13m6;7cP020HJ`JRs9l0A?v`08&lt;9&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStarboard(&quot;H0000040000000000000000000w0&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="93ab3a69-f633-08ba-95eb-6ad667187fb0">
      <Execution id="bb9e74b3-9ed9-4d88-baa9-0ab9d906e8b0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStarboard(&quot;H0000040000000000000000000w0&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;H@0000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="361265ac-04d1-3d5e-b926-84ad5d23a317">
      <Execution id="23ffd304-1d25-4eda-98e7-bf4789fe99e5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;H@0000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="137dac6a-552a-ba9b-d8a1-a91407de4df6">
      <Execution id="254a6d09-f086-4486-8100-24717129d458" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Spare(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;1000000000000020000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0a11025d-0bea-6951-a03b-df5a9b0101b1">
      <Execution id="292f59e1-ac43-4c2b-8216-145d3aa0a5e0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;1000000000000020000000000000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_3(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1cf779d5-84bd-b9ef-2695-58483d54d708">
      <Execution id="86cf0d85-6e77-463c-bef6-6f914a1bb6ce" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_3(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_142(&quot;C0000000000000000000000H0000000000000000000000000000&quot;,&quot;0&quot;,&quot;12&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f62b3f6f-456c-5196-6346-6beb1fb6f47d">
      <Execution id="21578f51-93bf-433b-a0b1-d668c6848713" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RegionalReservedBits139_142(&quot;C0000000000000000000000H0000000000000000000000000000&quot;,&quot;0&quot;,&quot;12&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMothershipMMSI(&quot;H000004000000000000000roVRi0&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aa841ef9-db63-c75c-6729-8f9ac725ae56">
      <Execution id="3dace802-1823-40b7-84bb-3d72295a4e26" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMothershipMMSI(&quot;H000004000000000000000roVRi0&quot;,&quot;0&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;50000000000000000000000000000000000000000000000000&lt;00000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="73878df9-fe25-07f0-683c-760b6002cb56">
      <Execution id="f026340f-ea54-40cf-abc7-7c9b87f9a88e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;50000000000000000000000000000000000000000000000000&lt;00000000000000000000&quot;,&quot;2&quot;,&quot;0@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7ee4507d-118f-b2d7-5f30-4f1c8fdd4c92">
      <Execution id="d86eded5-5017-44ad-839f-a445b156f230" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;6&gt;oNma0JOJtL078NuS1`s6mQ0vCv048@0002P1401`0000000000&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;997701028&quot;,&quot;0&quot;,&quot;111111111&quot;,&quot;false&quot;,&quot;false&quot;,&quot;1&quot;,&quot;50&quot;,&quot;4&quot;,&quot;8NuS1`s6mQ0vCv048@0002P1401`0000000000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ae00ee5d-0aee-cfee-b677-fef41fe9ddec">
      <Execution id="3f24115f-6c51-48a2-bc60-39a2d5edae6f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AddressedBinaryMessageParserSpecsStepsFeature" name="FullMessage(&quot;6&gt;oNma0JOJtL078NuS1`s6mQ0vCv048@0002P1401`0000000000&quot;,&quot;0&quot;,&quot;6&quot;,&quot;0&quot;,&quot;997701028&quot;,&quot;0&quot;,&quot;111111111&quot;,&quot;false&quot;,&quot;false&quot;,&quot;1&quot;,&quot;50&quot;,&quot;4&quot;,&quot;8NuS1`s6mQ0vCv048@0002P1401`0000000000&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;50000000000000000000000000000000000000000000000000h00000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f3f3882d-6364-2bf1-2b20-653f20ab749a">
      <Execution id="5967592e-e5e9-42ba-aff2-60e3512faf44" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;50000000000000000000000000000000000000000000000000h00000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;10000000000000000000001n0000&quot;,&quot;0&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ba5a4899-b217-b9d3-034a-d38d020a2947">
      <Execution id="bafdca4a-a8e3-4291-9e69-af013129b186" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;10000000000000000000001n0000&quot;,&quot;0&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="ProgressReports" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e663960c-b19c-864c-a04e-af8d7bcbd81b">
      <Execution id="445a9b7f-1637-46ac-a581-05772d10768a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="ProgressReports" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="feb0a125-3ead-1893-42b8-d48e39012898">
      <Execution id="24d68613-966a-4f3d-bb6e-dddf1bb83d27" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="DTEReady(&quot;50000000000000000000000000000000000000000000000000000000000000000000008&quot;,&quot;2&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e2fbd46a-7239-ec2e-df6d-9594ecb8ed60">
      <Execution id="39553b3f-f51c-495f-be51-01684b5dcda5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DTEReady(&quot;50000000000000000000000000000000000000000000000000000000000000000000008&quot;,&quot;2&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H00000000000000000000000010&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@P&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="df2570f6-8c66-0b24-2d68-8978a49e151c">
      <Execution id="c091f175-cc68-4854-8c54-3339628bc16d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H00000000000000000000000010&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@P&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;2&quot;,&quot;1&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c39e7b60-9729-69ea-fd65-0b4405f5a9d5">
      <Execution id="24c2b0dc-d898-4b89-8c3a-69ae043f0b95" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessagesWithoutGroupIdsInHeader(&quot;2&quot;,&quot;1&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;C000000000000000000000MP0000000000000000000000000000&quot;,&quot;0&quot;,&quot;59&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9d71603e-c3c8-b540-bc7d-03271d97686d">
      <Execution id="7e0f3010-4332-43e1-8849-7679d0ee0011" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="TimeStamp(&quot;C000000000000000000000MP0000000000000000000000000000&quot;,&quot;0&quot;,&quot;59&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;HP0000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c15743be-2054-dc80-8348-226c8096722c">
      <Execution id="a002684e-f232-4e1c-873f-e45bdb8cd778" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;HP0000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;10000000?w000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="971197da-8fcb-7314-768d-6a68609e14ab">
      <Execution id="fb9fd778-4444-4823-bdaa-aea572690237" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;10000000?w000000000000000000&quot;,&quot;0&quot;,&quot;1023&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000000400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="96bbd594-afa6-ecde-a7c6-ac3b2bf69ea4">
      <Execution id="2e641203-6ef2-4457-8038-7e30a27bfca0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000000400000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;21&quot;,&quot;'U'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3a12dee9-b4c2-8dc6-d860-16a66221ceb0">
      <Execution id="150073e9-396c-4025-a929-772bca7b424f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;21&quot;,&quot;'U'&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;1000000000000000000000200000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="24f2e515-f6c4-b384-48d7-ebc7d46b1072">
      <Execution id="3a321fe1-62f5-49e8-915f-6946c2d0efcc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;1000000000000000000000200000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitute(&quot;1000000000000000000@00000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aed13b2c-262a-03c1-351f-cca161871d2e">
      <Execution id="4f765b80-6353-4e2c-915f-fb4c6651edb4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="LongitudeAndLatitute(&quot;1000000000000000000@00000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLFBlankLinesOnly" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f2fd8f20-bb30-555a-b394-2f4330258aa6">
      <Execution id="43ed0eff-c492-4175-9451-d90be134ea45" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleLFBlankLinesOnly" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_3(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;SMTE4PL&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d2b824c9-8ccc-f6f4-47cf-89c1fcdb1b31">
      <Execution id="866fddde-8c93-4cda-b7dc-975735a3709c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_3(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;SMTE4PL&quot;,null)" />
    </UnitTest>
    <UnitTest name="DTEReady(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3ccdf408-52f5-e60e-0f8d-e8ca446ac0cc">
      <Execution id="f4370971-9152-4de5-93a4-2d8c7ec4d59d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DTEReady(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5a305fcb-7da2-d366-74b1-77cc61e7bfac">
      <Execution id="b7dc41a8-0eef-42a4-bece-90a4620d4ff4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;50000080000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d0cb2b1a-640b-cb08-528d-e5506b132ea2">
      <Execution id="f2e3320b-b7a6-47a0-86a9-f2f9167d8106" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;50000080000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;5000000000000000000000000000000000000000000000?000000000000000000000000&quot;,&quot;2&quot;,&quot;30&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2b3b1975-ae71-413d-410f-f1be3f6855ae">
      <Execution id="4efc3a4e-826a-44e7-bece-1773f152717d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;5000000000000000000000000000000000000000000000?000000000000000000000000&quot;,&quot;2&quot;,&quot;30&quot;,null)" />
    </UnitTest>
    <UnitTest name="FirstFragmentOfTwo_PartMessageReceived" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1f0eeac0-e9b9-2e16-7718-65532f534383">
      <Execution id="9bda1593-0fb1-4e75-81f2-9fae86b47fac" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="FirstFragmentOfTwo_PartMessageReceived" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000003000000000000000000000&quot;,&quot;0&quot;,&quot;RestrictedManoeuverability&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="27a15858-e462-192b-de2b-d3f0ddbd57b4">
      <Execution id="d3e74718-95bd-4f89-a9ad-e803e92c5c22" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000003000000000000000000000&quot;,&quot;0&quot;,&quot;RestrictedManoeuverability&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9edcfa64-9ea4-e361-84f6-31caee583639">
      <Execution id="645a13b0-c2ff-4568-857c-5976d0bd4f88" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="PositionAccuracy(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;5&gt;eq`d@0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="276d0901-308c-3aa9-b6df-2f7c981cbee9">
      <Execution id="64a89db5-bb43-429a-8941-e648584a1d55" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;5&gt;eq`d@0000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;987654321&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;C00000000000000000000000000000000000000000000000OP00&quot;,&quot;0&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="25fd5efd-34f0-9b3f-2718-c2a053b48c56">
      <Execution id="d0dca4e9-3d68-481c-9136-09ff5230341c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToPort(&quot;C00000000000000000000000000000000000000000000000OP00&quot;,&quot;0&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;5=7LHAT000000000000L58A&lt;uT6085B3@000000U0@21140Ht000000000000000000000&lt;&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b8bf3de9-96f7-d9d1-6626-c47e7f61f078">
      <Execution id="0620ecda-7c65-418c-872a-e90883ecda87" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Spare(&quot;5=7LHAT000000000000L58A&lt;uT6085B3@000000U0@21140Ht000000000000000000000&lt;&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;B000000000000000000000P00000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="213210d5-5665-9884-6fd5-360a8d8cfdb0">
      <Execution id="cb6c1ffa-35be-4261-9681-fc979dad0b4f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TrueHeading(&quot;B000000000000000000000P00000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;35&quot;,&quot;'#'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1a423eb0-3e54-e0c3-539d-079d0889efd7">
      <Execution id="c0b68023-70c2-4deb-99b9-f23e95f47bf4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;35&quot;,&quot;'#'&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9206f15c-242b-d067-e74e-fd85f45ad31d">
      <Execution id="ca40708e-675a-44af-8fda-b403e27be660" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;Undefined&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioChannelCode(&quot;B&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9aea0d68-87c6-4e42-f950-ddbefdd83cf6">
      <Execution id="f315d2d6-8f75-40c9-983e-ac40229de83c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="RadioChannelCode(&quot;B&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b61ee699-dc23-d04e-d511-7583ed927e30">
      <Execution id="0368620f-294f-42ea-98d8-dd3c9670c584" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880&quot;,&quot;2&quot;,&quot;DredgingOrUnderwaterOps&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="29ef816b-07ee-7da3-86c0-4f06f04ae48c">
      <Execution id="06f3ee60-9e09-4825-80f8-787367c4b611" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880&quot;,&quot;2&quot;,&quot;DredgingOrUnderwaterOps&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000&gt;0&quot;,&quot;0&quot;,&quot;Surveyed&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cd43354c-47ad-4eb3-50c3-8536028c0043">
      <Execution id="60beca17-69a6-4187-b4f9-cbab13918082" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000&gt;0&quot;,&quot;0&quot;,&quot;Surveyed&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToPort(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0679c05f-ad28-32ec-fb44-20ec880c7756">
      <Execution id="9737be4c-8d19-4fcd-a629-974e916c99fe" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToPort(&quot;H3n0Vd561=30000&lt;7qploP1@4430&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e0780b9f-c970-79da-9305-7063b7f92062">
      <Execution id="b5c0cee1-a95d-4467-b0e7-cda0a4eac1e7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.ChannelManagementParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;8&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aede5d77-2095-52bb-874b-38965070d284">
      <Execution id="f6cb6538-193d-4bbe-8358-e6279a04a33d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;8&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAName(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;HEIDI ANITA@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4274ab3c-e0aa-6bb6-cc50-a605ccba2618">
      <Execution id="ae79789a-524f-4a30-bde3-6a9303b18e35" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAName(&quot;H3mhO30PDT@V04pU@4000000000&quot;,&quot;2&quot;,&quot;HEIDI ANITA@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;C0000000000000000000000P0000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2391bf4a-d116-4eb9-46c6-90f3fac542f3">
      <Execution id="4512b8b4-487f-47f2-a4d5-7b57d8ebe2b5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="TimeStamp(&quot;C0000000000000000000000P0000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;50000000000000000000000000000000000000000010000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4039bcd1-f776-f008-dbc6-126045adabf2">
      <Execution id="fd91b65c-ee93-4fc7-ab3b-e074ea5496d6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="DimensionToStern(&quot;50000000000000000000000000000000000000000010000000000000000000000000000&quot;,&quot;2&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c99ebe3e-55d4-d07e-f9f5-854d05f2aafb">
      <Execution id="49ecd53b-3b66-4742-8af7-bd40f85853a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABC:&quot;,&quot;0&quot;,&quot;18&quot;,&quot;10&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="76ea33fc-9a4e-cf1d-9f45-da6f63a037a4">
      <Execution id="fca96f5e-8294-4211-918a-fa23c0e4167c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABC:&quot;,&quot;0&quot;,&quot;18&quot;,&quot;10&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;3562&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2adfdae0-96e2-0e9d-bd27-907e9d583150">
      <Execution id="6b5ae6c2-3cac-4b16-91bd-359cabf4e70d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;3562&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;F028n@R2N2P3D73EB6`&gt;6bT20000&quot;,&quot;0&quot;,&quot;22&quot;,&quot;0&quot;,&quot;2242114&quot;,&quot;0&quot;,&quot;2087&quot;,&quot;2088&quot;,&quot;0&quot;,&quot;false&quot;,&quot;108600&quot;,&quot;54600&quot;,&quot;108600&quot;,&quot;54600&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;4&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="52aba770-0125-6d22-58a8-ab3ae6a42591">
      <Execution id="ee5f9a72-3106-4389-8fee-174d688853a6" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.ChannelManagementParserSpecsStepsFeature" name="FullMessage(&quot;F028n@R2N2P3D73EB6`&gt;6bT20000&quot;,&quot;0&quot;,&quot;22&quot;,&quot;0&quot;,&quot;2242114&quot;,&quot;0&quot;,&quot;2087&quot;,&quot;2088&quot;,&quot;0&quot;,&quot;false&quot;,&quot;108600&quot;,&quot;54600&quot;,&quot;108600&quot;,&quot;54600&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;4&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;2&quot;,&quot;55&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="ae0b0bf6-279f-814c-49ee-4e18b40409d5">
      <Execution id="c0edb617-3036-4e82-9663-fb2a6d6e7c5c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;2&quot;,&quot;55&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStarboard(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8da00938-b7a6-7e74-e6c8-73f1cfb92f43">
      <Execution id="8fe877c0-d24e-4dfb-8a86-9f3c54b944e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStarboard(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000001000000000000000000000&quot;,&quot;0&quot;,&quot;AtAnchor&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b3ce4970-f87d-f26a-6b22-52a1f5323d10">
      <Execution id="9b0e1c1f-8cd5-46f3-a946-aa7150b53fe3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000001000000000000000000000&quot;,&quot;0&quot;,&quot;AtAnchor&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;0000000100000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0fb5b85c-7b66-c542-b180-5f124036e473">
      <Execution id="09cc9293-04f5-4f48-9741-6719cc3e8022" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;0000000100000000000000000000&quot;,&quot;0&quot;,&quot;42&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits38_45(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a4463ca8-d345-2ac8-d414-e2b722430e40">
      <Execution id="52215dcf-f036-487c-a496-eb012c855b63" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits38_45(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_140(&quot;B0000000000000000000000H0000&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1efaab11-b9e4-1998-2011-ad66e8cf1802">
      <Execution id="9b85c51a-4efd-416f-a3b3-862e7ea00bd4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits139_140(&quot;B0000000000000000000000H0000&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStern(&quot;H00000400000000000000007w000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e75b09a4-f690-0bad-26f6-bb520b4ba150">
      <Execution id="2663edcb-c5ca-475a-a578-d96f89b0db8f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStern(&quot;H00000400000000000000007w000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioStatusType(&quot;B000000000000000000000002000&quot;,&quot;0&quot;,&quot;Itdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9e8b7538-7f5e-51df-66f5-f52588a562df">
      <Execution id="e117aa90-b0e4-45e0-bc0b-4105a3f40fa0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RadioStatusType(&quot;B000000000000000000000002000&quot;,&quot;0&quot;,&quot;Itdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="83d26cf2-7b29-36a9-3ba4-4ed99c7f430f">
      <Execution id="3e40e910-f013-4d21-ab71-7073dc519033" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartASpare(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3a6d09e3-297b-f869-8fc3-126c4b92e2e4">
      <Execution id="027e8bf4-6055-4d09-9428-a3a647e04cd4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartASpare(&quot;H000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="30718773-f372-66d2-06db-c3c03587c845">
      <Execution id="a0c0b274-25d6-4b48-92ef-5770bf0f6a0b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="SpeedOverGround(&quot;B3m?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000H00&quot;,&quot;0&quot;,&quot;6&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b26b3f50-d17e-27bf-d889-79f48876ce7f">
      <Execution id="446e3281-6d73-4a5a-86f2-c9d8cd248849" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000H00&quot;,&quot;0&quot;,&quot;6&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;11&quot;,&quot;'K'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2cffeeeb-882b-c499-e64b-3c6ab7d7742d">
      <Execution id="9cbcd4f6-3483-48ba-8eb8-3bc93dd7960c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;11&quot;,&quot;'K'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Three_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedAdjacently" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4355136b-fc60-b581-4028-86821b1bc251">
      <Execution id="942573fa-b204-438c-9c35-848a5a162c72" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Three_FragmentMessageFragmentsWithoutGroupingInHeaderReceivedAdjacently" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000008000000000000000000000&quot;,&quot;0&quot;,&quot;UnderWaySailing&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="0aa85379-a9c7-4f21-fda1-6d63ae9071f1">
      <Execution id="c742abb0-c240-4b0e-9c09-377ba02b61ff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000008000000000000000000000&quot;,&quot;0&quot;,&quot;UnderWaySailing&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnspecifiedStandardTagBlock(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="089b42c6-cf41-e615-a360-f517fc6d8347">
      <Execution id="56381110-32e8-46b6-b335-96ff903c187d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="UnspecifiedStandardTagBlock(&quot;s:ASS,c:1706745485*72&quot;,&quot;ASS&quot;,&quot;1706745485&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;1000000001000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b891cedf-639a-f9a5-6551-ea9adae01ccd">
      <Execution id="0a2b8db2-3452-4192-8c13-f14367f76346" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpeedOverGround(&quot;1000000001000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;&gt;8HweV1@E=@m&lt;N0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;563080600&quot;,&quot;0&quot;,&quot;\&quot;TESTMSG \&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b75cb4ac-2e80-0174-86f4-e1bba4b9712e">
      <Execution id="ac6b20ba-8dd3-44fa-91e9-c7e39062c5b1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.SafetyRelatedBroadcastParserSpecsStepsFeature" name="FullMessage(&quot;&gt;8HweV1@E=@m&lt;N0&quot;,&quot;0&quot;,&quot;14&quot;,&quot;0&quot;,&quot;563080600&quot;,&quot;0&quot;,&quot;\&quot;TESTMSG \&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;13oaO&lt;5000PG1VhS?rC3ajf&gt;1000&quot;,&quot;0&quot;,&quot;ToBaseStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9882346a-b984-690e-ba88-56e115b2c8e0">
      <Execution id="e577f479-2af6-47e9-b20f-b62778c096a5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;13oaO&lt;5000PG1VhS?rC3ajf&gt;1000&quot;,&quot;0&quot;,&quot;ToBaseStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="LineStreamParserReportsErrorInSecondFragmentOfTwo_PartMessage" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1c0b40f5-fac1-2c23-1df9-70b3fb29e244">
      <Execution id="2f19ed03-15b1-4fb2-b6b7-31c500f0254e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="LineStreamParserReportsErrorInSecondFragmentOfTwo_PartMessage" />
    </UnitTest>
    <UnitTest name="DimensionToPort(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1dc13f6c-fed8-644e-2fda-7f8d9d11645e">
      <Execution id="eb490479-861e-4602-9b99-b2a7c4f91843" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToPort(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;50000000000000000000000000000000000000000000001P00000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2e969c0b-06f1-02a6-66cc-46997c1d2236">
      <Execution id="457561c7-e6b0-4035-a4e1-be7aed8f8b5b" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;50000000000000000000000000000000000000000000001P00000000000000000000000&quot;,&quot;2&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="95ac5e3f-49b6-7f45-2bd4-b07476d0cf69">
      <Execution id="289fc099-a23b-42c5-a212-329066e2c552" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Spare(&quot;53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3aa0b42b-ee9a-aee1-eb13-70821f935a64">
      <Execution id="47072802-0fc5-4403-a6fd-f30181b7fca8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TimeStamp(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;500000000000000000000000000000000000000000000D0000000000000000000000000&quot;,&quot;0&quot;,&quot;Chayka&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fb70d808-27c7-04c4-0102-52c38b810ebe">
      <Execution id="a7e61ea8-542d-4e1b-8dac-a245b9c42456" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;500000000000000000000000000000000000000000000D0000000000000000000000000&quot;,&quot;0&quot;,&quot;Chayka&quot;,null)" />
    </UnitTest>
    <UnitTest name="TimeStamp(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;60&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f7e6a6b9-506b-36e9-7cf7-356d56158f02">
      <Execution id="b4a8aa53-5f5e-472a-b98f-3dc0f55d704c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TimeStamp(&quot;13oHtV7OhN0=B9bQch;WqnCp0W3h&quot;,&quot;0&quot;,&quot;60&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;B00000000@000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c2673843-9828-fcb4-b4b2-b7a8c6ee8c75">
      <Execution id="99838299-0ee7-4acd-a42f-9a652505edde" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="SpeedOverGround(&quot;B00000000@000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;44&quot;,&quot;','&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1a811642-3dcc-43cb-8a91-43083c1eb5af">
      <Execution id="bb4a456d-65e4-45e6-8aae-475f47836450" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;44&quot;,&quot;','&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;1000000000000000000000000L00&quot;,&quot;0&quot;,&quot;7&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3a4890a6-5826-2dad-66b6-0e7f21dce346">
      <Execution id="ea6196f7-b908-42c5-8de1-0c0c826a737c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;1000000000000000000000000L00&quot;,&quot;0&quot;,&quot;7&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="22b9f8cd-8879-1d7b-9c1c-6642e594ebd9">
      <Execution id="266fe524-789f-4a25-868e-f6ea38758615" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="SingleLine" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000001000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;16&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="75ecbb0d-da94-a567-a7d8-fd22a5105604">
      <Execution id="3b6812f2-579c-4b77-bbe4-cb1310b068dc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000001000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;16&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e18d98c7-f7e0-917c-f980-a8eb4722eb9c">
      <Execution id="4bda7e07-28ff-4e8d-89f2-fa781882b9e4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.DataLinkManagementMessageParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="ETADay(&quot;53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880&quot;,&quot;2&quot;,&quot;9&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="179e1831-a7d2-e5e9-dcbd-0496bdcf2399">
      <Execution id="484e7f44-eb38-446e-97d0-65c550189497" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETADay(&quot;53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880&quot;,&quot;2&quot;,&quot;9&quot;,null)" />
    </UnitTest>
    <UnitTest name="CSUnitFlag(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;Cstdma&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9046d1f2-834c-b5f1-8f16-d0c8e6104398">
      <Execution id="f05f4af3-9c29-4728-9490-6613ab838cd4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CSUnitFlag(&quot;B3mnUc0000@LTtaWw7CQ3wVTkP06&quot;,&quot;0&quot;,&quot;Cstdma&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;1000000wh0000000000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="27f38577-4d20-3dd4-9995-5791bd9b5071">
      <Execution id="aafc8f6b-5801-4066-9a23-137e0fdac589" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;1000000wh0000000000000000000&quot;,&quot;0&quot;,&quot;-1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;1000000000P00000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5981b7eb-a63b-7a23-db45-c2f59252e836">
      <Execution id="0de34d0d-bae8-4649-9d42-e60874ef1a87" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="PositionAccuracy(&quot;1000000000P00000000000000000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBDimensionToBow(&quot;H000004000000000000000wp0000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="27ef6eeb-32ec-fdc3-c993-9ef868f36954">
      <Execution id="8a16ed97-7597-4712-8293-186a5316bfd1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToBow(&quot;H000004000000000000000wp0000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="20b804c5-cfe6-108b-e212-0a213d381892">
      <Execution id="01e5a170-83a3-488e-9290-a0b3c819b437" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForHsc&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="52ae657b-56e0-d342-c0a9-dd9f545029ad">
      <Execution id="729de461-2fb1-48ab-8bd9-1843c6dded16" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForHsc&quot;,null)" />
    </UnitTest>
    <UnitTest name="DSCFlag(&quot;B000000000000000000000010000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cdf8ea98-3530-0172-41be-d4aab5522b79">
      <Execution id="6e14317c-947f-4138-9d16-6a3111482d84" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DSCFlag(&quot;B000000000000000000000010000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;ABVDM&quot;,&quot;BaseStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="314a4f8a-8ddb-5592-c09d-aad4665d90ab">
      <Execution id="97b4d8ea-5ff2-485c-8c03-fe2d1475973d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;ABVDM&quot;,&quot;BaseStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;400000000000T000000000000000&quot;,&quot;0&quot;,&quot;72&quot;,&quot;36&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7c4177d3-5fa0-aa1b-f899-b29b3d9e1993">
      <Execution id="57282b69-21a0-4cbc-864f-7210938b841f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;400000000000T000000000000000&quot;,&quot;0&quot;,&quot;72&quot;,&quot;36&quot;,null)" />
    </UnitTest>
    <UnitTest name="LineStreamParserReportsErrorInNon_FragmentedMessage" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="502021e0-1ebf-e675-0eda-8668ea396e48">
      <Execution id="7288c4a9-2a73-4f65-9db9-6f282a68f199" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="LineStreamParserReportsErrorInNon_FragmentedMessage" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;356&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="eff63b3e-5fe4-e090-28a3-10975522c070">
      <Execution id="772239ca-94dc-4b1a-89e4-09a313b0f25a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TrueHeading(&quot;B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ&quot;,&quot;0&quot;,&quot;356&quot;,null)" />
    </UnitTest>
    <UnitTest name="RateOfTurn(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="959a9947-e742-b918-a0e5-cd19c2954198">
      <Execution id="6d9e0481-e09f-47de-acc0-522b10c31859" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RateOfTurn(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;ABCw&quot;,&quot;0&quot;,&quot;18&quot;,&quot;63&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="84dd30f8-3a1b-bfc4-3456-d36da061938d">
      <Execution id="1cb44a9c-d82a-48e7-9b7b-364bf5dde151" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;ABCw&quot;,&quot;0&quot;,&quot;18&quot;,&quot;63&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C000000000000000000000000000000000000000000000000002&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="56538b32-e331-85ad-d5e4-58a1f6cdcc70">
      <Execution id="2a6ca098-01f6-4161-a8b8-c6e0ddab6a6f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C000000000000000000000000000000000000000000000000002&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="AssignedFlag(&quot;B000000000000000000000008000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="bb3a5fae-a743-8009-1c2c-30541e552257">
      <Execution id="f5b1c94d-730c-4a27-aa31-91664d0cfc0d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="AssignedFlag(&quot;B000000000000000000000008000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;12&quot;,&quot;'L'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c31e3282-5723-ff89-1fa7-2e1e99875a2a">
      <Execution id="88e3b582-711a-4ca0-a15b-d9b0f09290ff" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;12&quot;,&quot;'L'&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;40000000000M0000000000000000&quot;,&quot;0&quot;,&quot;66&quot;,&quot;29&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="269a766c-87ac-75be-ac23-71e9b01d9594">
      <Execution id="f1c5c7ec-a001-4f6d-abe9-7402860c21d4" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;40000000000M0000000000000000&quot;,&quot;0&quot;,&quot;66&quot;,&quot;29&quot;,null)" />
    </UnitTest>
    <UnitTest name="EmptyFile" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7097d409-7506-31dd-9920-992d990cc16f">
      <Execution id="18546f45-8065-462a-ae1d-d861ed20cd9f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="EmptyFile" />
    </UnitTest>
    <UnitTest name="PartBDimensionToStarboard(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="57dbe557-f257-4c9f-cd16-7068945dfe64">
      <Execution id="759625d9-c944-4683-8d36-12ce113bdf82" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBDimensionToStarboard(&quot;H000004000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000002000000000000000000000&quot;,&quot;0&quot;,&quot;NotUnderCommand&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="509d4f3c-0258-20c0-4756-eff8e7493d35">
      <Execution id="b7123e92-06ff-412a-9f5a-c073f02f9614" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000002000000000000000000000&quot;,&quot;0&quot;,&quot;NotUnderCommand&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="03d11e6a-d2eb-0a2e-a132-53405e1f1ab0">
      <Execution id="cf93fdb2-6a3f-4067-980b-8b873695889e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="69a52391-7984-d589-1a5c-55989b0fa8d8">
      <Execution id="4f519fd9-6a65-481c-a7fe-ed16bba79b37" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="RepeatIndicator(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="DSCFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d936d2ee-b6c4-9d7f-7352-933e65fe2ff3">
      <Execution id="f11aa8d3-7865-4404-9e99-383346768f63" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DSCFlag(&quot;B3q35T005h&lt;0h@`Dd:i;gwRUoP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;95M2oQ@41Tr4L4H@eRvQ;2h20000&quot;,&quot;0&quot;,&quot;9&quot;,&quot;0&quot;,&quot;366000005&quot;,&quot;16&quot;,&quot;100&quot;,&quot;true&quot;,&quot;-49749876&quot;,&quot;17523450&quot;,&quot;300&quot;,&quot;11&quot;,&quot;0&quot;,&quot;0&quot;,&quot;true&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="772c977b-9a60-0304-43a3-4bb5f19b1e16">
      <Execution id="48afcfb6-cc4a-4e34-9621-fc2c2c48aa80" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StandardSearchAndRescueAircraftPositionReportParserSpecsStepsFeature" name="FullMessage(&quot;95M2oQ@41Tr4L4H@eRvQ;2h20000&quot;,&quot;0&quot;,&quot;9&quot;,&quot;0&quot;,&quot;366000005&quot;,&quot;16&quot;,&quot;100&quot;,&quot;true&quot;,&quot;-49749876&quot;,&quot;17523450&quot;,&quot;300&quot;,&quot;11&quot;,&quot;0&quot;,&quot;0&quot;,&quot;true&quot;,&quot;0&quot;,&quot;false&quot;,&quot;false&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DisplayFlag(&quot;B5RVdt0000;I;08?A&gt;MOKws7kP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9b062c3f-aea2-121d-f54a-af5f544c5048">
      <Execution id="f99f9acc-765c-48c6-8dcc-e85c8ee992bc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DisplayFlag(&quot;B5RVdt0000;I;08?A&gt;MOKws7kP06&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionAccuracy(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="098e9c73-ca9a-3ee4-e7f1-767cec719c47">
      <Execution id="6a8f7d65-455d-44e9-9a4b-60fc0526c067" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="PositionAccuracy(&quot;13@oSF101;PTR`fPLn2:U8S`0534&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;CP00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e742a83e-3ba0-dd6b-07fe-16f6159c5106">
      <Execution id="72e817c8-1c1a-45bb-9a64-7f40898a2615" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="RepeatIndicator(&quot;CP00000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBSerialNumber(&quot;H000004000000020000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="39835474-c23a-0357-9d98-c66ed3b78236">
      <Execution id="6db55114-6532-4246-93bb-234958381b22" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSerialNumber(&quot;H000004000000020000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fb8337eb-3739-6471-250a-3d620e32af47">
      <Execution id="21f4e5a7-4b27-4a82-b969-ef1fd4f2ff02" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AcknowledgementParserSpecsStepsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="PartBCallSign(&quot;H00000400000000Q000000000000&quot;,&quot;0&quot;,&quot;!@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5bc9da6d-d193-b559-6c06-46953d31d8e2">
      <Execution id="c1ef6b7a-56e2-4521-958a-d7ae909764e5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBCallSign(&quot;H00000400000000Q000000000000&quot;,&quot;0&quot;,&quot;!@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="DimensionToStern(&quot;C0000000000000000000000000000000000000000000003wP000&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6a26db61-b273-9a01-bdc9-e9638c2215d1">
      <Execution id="a4a25160-a0fa-4594-80d4-8778bc69acda" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="DimensionToStern(&quot;C0000000000000000000000000000000000000000000003wP000&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="ManoeuvreIndicator(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e2799fb3-ce7d-c7f3-6230-83c767aa3945">
      <Execution id="02195c09-7bf6-41b4-920a-10bcf67166ae" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="ManoeuvreIndicator(&quot;13nW5&lt;00000IoPlSbE`:P8EH0534&quot;,&quot;0&quot;,&quot;NotAvailable&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000:0&quot;,&quot;0&quot;,&quot;Chayka&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7f02808f-10c5-a699-3eea-c833d77861ff">
      <Execution id="128a960c-9041-46c8-9b3c-0d955c461593" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="PositionFixType(&quot;C0000000000000000000000000000000000000000000000000:0&quot;,&quot;0&quot;,&quot;Chayka&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c8a693b7-91ac-3ea8-141e-42915e6cadb6">
      <Execution id="85eb44ba-56dc-47d6-aa9a-e66f7bb35fe9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000&quot;,&quot;0&quot;,&quot;CombinedGpsGlonass&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;E&gt;nlfV1`:Rab7h;4Sh&lt;h1WW:@:9MbW`ghDbC@10888gh20A`0UAC`4m@iDh&quot;,&quot;0&quot;,&quot;21&quot;,&quot;0&quot;,&quot;997011096&quot;,&quot;3&quot;,&quot;PUESTO VIG Y CONT TR&quot;,&quot;true&quot;,&quot;-39159249&quot;,&quot;-32877414&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;31&quot;,&quot;true&quot;,&quot;0&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;false&quot;,&quot;AF BUEN SUCES&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="02579369-1b2c-ab75-c447-d81b4f2db692">
      <Execution id="e3f1a101-3faa-4119-889b-a87512881a4e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.AidsToNavigationReportParserSpecsStepsFeature" name="FullMessage(&quot;E&gt;nlfV1`:Rab7h;4Sh&lt;h1WW:@:9MbW`ghDbC@10888gh20A`0UAC`4m@iDh&quot;,&quot;0&quot;,&quot;21&quot;,&quot;0&quot;,&quot;997011096&quot;,&quot;3&quot;,&quot;PUESTO VIG Y CONT TR&quot;,&quot;true&quot;,&quot;-39159249&quot;,&quot;-32877414&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;,&quot;31&quot;,&quot;true&quot;,&quot;0&quot;,&quot;true&quot;,&quot;false&quot;,&quot;false&quot;,&quot;false&quot;,&quot;AF BUEN SUCES&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="MessageType" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="614b5d07-674a-972c-0e48-975e4f12588c">
      <Execution id="10dca6c8-54a4-4ba9-9eae-f0f5c78a3ae5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.BaseStationReportParserSpecsFeature" name="MessageType" />
    </UnitTest>
    <UnitTest name="PartAMMSI(&quot;H00000P00000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f25d5f69-ea1c-165a-bb93-fb01d1653dac">
      <Execution id="406731a3-f1e5-4a66-a418-b4fce3dc44bb" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMMSI(&quot;H00000P00000000000000000000&quot;,&quot;2&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartARepeatIndicator(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8b9dc158-1473-a110-ca88-0481151a1607">
      <Execution id="dc8f55ec-a47c-4059-880d-efbe532f07e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartARepeatIndicator(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSyncState(&quot;1000000000000000000000000P00&quot;,&quot;0&quot;,&quot;UtcIndirect&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="008e5bec-09cc-0702-f1b4-d8da880f3bff">
      <Execution id="ef5a66f8-5d48-4b43-8319-89698472674a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSyncState(&quot;1000000000000000000000000P00&quot;,&quot;0&quot;,&quot;UtcIndirect&quot;,null)" />
    </UnitTest>
    <UnitTest name="FirstFragmentOfTwo_PartMessageWithoutGroupingInHeaderReceived" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d4efc13a-bec2-6a4b-8772-f5444865c444">
      <Execution id="aa2d86b8-f392-48bc-a7d9-1a3ad922d186" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="FirstFragmentOfTwo_PartMessageWithoutGroupingInHeaderReceived" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;24c`1`001pPEGSLR:=df3@4620SQ&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="c00ffb1e-9663-1f38-bf7d-f788968fa0cd">
      <Execution id="4ea5db74-ebe7-4568-8744-82beb797ee5e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;24c`1`001pPEGSLR:=df3@4620SQ&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpeedOverGround(&quot;C00000000@000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="abe7676e-46a3-96cb-09e5-40bd01cf47d1">
      <Execution id="7e0a6252-94e6-48a8-86b2-e04f02934864" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="SpeedOverGround(&quot;C00000000@000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PositionFixType(&quot;500000000000000000000000000000000000000000000P0000000000000000000000000&quot;,&quot;0&quot;,&quot;Galileo&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b45e4ad6-a253-51a9-7fb4-e6b7c9355458">
      <Execution id="3a84383a-bbbe-4eb3-88f6-67df536937de" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="PositionFixType(&quot;500000000000000000000000000000000000000000000P0000000000000000000000000&quot;,&quot;0&quot;,&quot;Galileo&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f697d8de-1295-8c02-3d1a-5730e5d5c0d9">
      <Execution id="d1194330-d4e0-457d-9c41-3ff905693e9a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PeekMessageTypeWithoutDecodingInFull(&quot;53m8lk`00000hS;;SP0Hu&lt;p61HTdTpL00000000F0H&lt;654@pt0;@0000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="079e9c46-1fbf-487e-2a09-c2bd8760f074">
      <Execution id="2dd4ee39-8a6a-4448-80df-fe443ca65646" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.ParsePayloadSpecsFeature" name="PeekMessageTypeWithoutDecodingInFull(&quot;53m8lk`00000hS;;SP0Hu&lt;p61HTdTpL00000000F0H&lt;654@pt0;@0000000000000000000&quot;,&quot;2&quot;,&quot;5&quot;,null)" />
    </UnitTest>
    <UnitTest name="ETAHour(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a2f26304-370a-5119-443e-d33906fb2fb2">
      <Execution id="961ca922-6770-4b83-8280-46de0c022fae" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ETAHour(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;24&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;100000&lt;000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse12&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2864813a-4840-3b40-c9b3-9767e957d59d">
      <Execution id="18906ba3-a54b-4934-99a6-bc15bd54d87e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;100000&lt;000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse12&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioChannelCode(&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5df56f6f-65cc-8522-84bb-ba75cd2ff790">
      <Execution id="969fd443-ab39-47ce-934e-ca7f8bb3deda" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="RadioChannelCode(&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;13mVWJ2P01P`jBlTMPsN4?v22&lt;0G&quot;,&quot;0&quot;,&quot;3600&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="49525ade-cb8a-55fd-e77b-770181083b65">
      <Execution id="a134cd05-9dd8-40dd-b995-53a01567183c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="CourseOverGround(&quot;13mVWJ2P01P`jBlTMPsN4?v22&lt;0G&quot;,&quot;0&quot;,&quot;3600&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;B00000P000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3e0abd77-4152-a942-c224-003087419233">
      <Execution id="c16166e6-f86f-44df-9bee-bc8da9f49723" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MMSI(&quot;B00000P000000000000000000000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;18&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2b29dcd7-b4dc-bb3f-18e6-3fdea6b02239">
      <Execution id="4c479cf9-9ee9-47ad-8fe8-cd8e6551731f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;18&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;A028nBCt@hbs02Gvd0H@2gop2ABb&quot;,&quot;0&quot;,&quot;9&quot;,&quot;510&quot;,&quot;5632&quot;,&quot;6&quot;,&quot;2&quot;,&quot;0&quot;,&quot;720376,595114&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="70499a4a-cd76-337e-9936-3bec1e2878aa">
      <Execution id="53d37abc-4add-41de-bec7-c06d8a3a2262" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.DifferentialCorrectionDataParserSpecsStepsFeature" name="FullMessage(&quot;A028nBCt@hbs02Gvd0H@2gop2ABb&quot;,&quot;0&quot;,&quot;9&quot;,&quot;510&quot;,&quot;5632&quot;,&quot;6&quot;,&quot;2&quot;,&quot;0&quot;,&quot;720376,595114&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;45&quot;,&quot;'-'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="19c03472-9658-4f4e-57b6-828fd9151807">
      <Execution id="ad0774ff-38ce-49ec-93a8-44aa76b11a6d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;45&quot;,&quot;'-'&quot;,null)" />
    </UnitTest>
    <UnitTest name="Name(&quot;C00000000000000000000000bdfhjlnprtw13579;=?A00000000&quot;,&quot;0&quot;,&quot;UVWXYZ[\\]^_ !\&quot;#$%&amp;'(&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9a861f8d-2ac2-1344-a2c0-587977c5b8e7">
      <Execution id="d9725221-831f-4362-92ad-f2552928feb8" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Name(&quot;C00000000000000000000000bdfhjlnprtw13579;=?A00000000&quot;,&quot;0&quot;,&quot;UVWXYZ[\\]^_ !\&quot;#$%&amp;'(&quot;,null)" />
    </UnitTest>
    <UnitTest name="MultipleLinesWithBlanksAtEnd" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1b8411a2-14e7-881d-84eb-9d092460f368">
      <Execution id="8a803e19-b9b7-41ba-8b7e-096059d23853" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserSpecsFeature" name="MultipleLinesWithBlanksAtEnd" />
    </UnitTest>
    <UnitTest name="SingleLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="5b7d8556-5bd7-da04-88b6-c99876456cb0">
      <Execution id="78e593ef-f752-4fe5-9ec2-bb2d2aec229e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="SingleLine" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;;4`Uu;AvJEF`g14&gt;V0DV@MQ00000&quot;,&quot;0&quot;,&quot;11&quot;,&quot;0&quot;,&quot;311000365&quot;,&quot;2022&quot;,&quot;9&quot;,&quot;10&quot;,&quot;22&quot;,&quot;40&quot;,&quot;47&quot;,&quot;false&quot;,&quot;14.90464&quot;,&quot;35.99721&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1e47d8a9-e341-71f1-d8ef-63f2889f1647">
      <Execution id="bb8313f6-f5cb-4e53-9202-070b729d9f52" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.CoordinatedUniversalTimeAndDateResponseParserSpecsFeature" name="FullMessage(&quot;;4`Uu;AvJEF`g14&gt;V0DV@MQ00000&quot;,&quot;0&quot;,&quot;11&quot;,&quot;0&quot;,&quot;311000365&quot;,&quot;2022&quot;,&quot;9&quot;,&quot;10&quot;,&quot;22&quot;,&quot;40&quot;,&quot;47&quot;,&quot;false&quot;,&quot;14.90464&quot;,&quot;35.99721&quot;,&quot;1&quot;,&quot;false&quot;,&quot;0&quot;,&quot;false&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RAIMFlag(&quot;B000000000000000000000004000&quot;,&quot;0&quot;,&quot;true&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="64e80ae0-8cb5-53e9-2cfc-4a5219839492">
      <Execution id="fc41d67b-8a12-4fb0-bb64-43a259073867" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RAIMFlag(&quot;B000000000000000000000004000&quot;,&quot;0&quot;,&quot;true&quot;,null)" />
    </UnitTest>
    <UnitTest name="SpareBitsAt145(&quot;100000000000000000000000L000&quot;,&quot;0&quot;,&quot;7&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="259fe6f1-17fa-c141-d571-525279e760f8">
      <Execution id="3ca1caaf-f241-4595-a1cf-4b65e3b46c9a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="SpareBitsAt145(&quot;100000000000000000000000L000&quot;,&quot;0&quot;,&quot;7&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;ADVDM&quot;,&quot;DependentBaseStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="2f1d17f5-ecee-b3d7-6dbc-5235b44bfdc2">
      <Execution id="71e3b1dc-7bd8-43cb-88ce-bfd00cb5e481" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;ADVDM&quot;,&quot;DependentBaseStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;137&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="62f4dac7-ae89-61a1-8d14-60ec4a844c5f">
      <Execution id="51dd2372-0407-4d72-b841-2200daf9000d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;13oO7800000FH&gt;&gt;S6rpur`P200S&lt;&quot;,&quot;0&quot;,&quot;137&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISTalkerId(&quot;AXVDM&quot;,&quot;RepeaterStation&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a1846472-4b3c-dbed-322f-d102d3addb86">
      <Execution id="0b1d027c-3d31-450b-a6e7-7c8dadb9267f" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="AISTalkerId(&quot;AXVDM&quot;,&quot;RepeaterStation&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;511&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="4d0b3289-d1f5-af6b-a4da-64225c845580">
      <Execution id="ebf27c57-478e-4bb4-85a9-756b0e92c2ce" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="TrueHeading(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;511&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="fa989d09-4d29-033e-a691-ce11b14965a5">
      <Execution id="5746b43d-74f3-47f0-b5bd-1b477e1a0925" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="MMSI(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;100000:000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForWig&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="67fc7f9e-9d65-77e1-1624-abbde7245def">
      <Execution id="5845e16a-99ca-4290-afcb-f8c9745cc420" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;100000:000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureAmendmentOfNavigationalStatusForWig&quot;,null)" />
    </UnitTest>
    <UnitTest name="FragmentedMessages(&quot;2&quot;,&quot;1&quot;,&quot;6&quot;,&quot;8055&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="77bdb364-2e94-f7c1-91b4-9a68d48ca25f">
      <Execution id="482d9fe8-dda3-41cf-9aa1-25165addd0e0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.SentenceLayerSpecsFeature" name="FragmentedMessages(&quot;2&quot;,&quot;1&quot;,&quot;6&quot;,&quot;8055&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="7343500d-728b-2c52-4d57-346543928e2d">
      <Execution id="10c8016a-b993-4593-9fc6-f5dc00a3093e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="RadioSlotTimeout(&quot;13`j@B001h0lICBPg476:TlB0@5:&quot;,&quot;0&quot;,&quot;4&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="26b7c5cd-fa39-bf9b-a908-7b4e11514f11">
      <Execution id="fdb35f92-a937-4314-9834-57fbb00095bd" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="RadioSlotTimeout(&quot;13`j@B001h0lICBPg476:TlB0@5:&quot;,&quot;0&quot;,&quot;4&quot;,null)" />
    </UnitTest>
    <UnitTest name="Destination(&quot;5000000000000000000000000000000000000000000000000000000000000000000000@&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e1f840c3-3bca-0f5e-b99f-99c15c6b0d9e">
      <Execution id="d753a977-39af-4d1f-ba2d-10c5d77da11a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Destination(&quot;5000000000000000000000000000000000000000000000000000000000000000000000@&quot;,&quot;2&quot;,&quot;@@@@@@@@@@@@@@@@@@@A&quot;,null)" />
    </UnitTest>
    <UnitTest name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;3&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="cd7e4ea1-ab5b-78be-3f64-c940661dfcf4">
      <Execution id="ae84a8c2-a2b0-4c6c-914f-70724577ecfc" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="SingleBit(&quot;1000&quot;,&quot;0&quot;,&quot;3&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;00000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d63f2ec8-e90e-14e6-7597-3d1d1676c0f7">
      <Execution id="2a220c5c-4919-48e5-8310-e4feca81563a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;00000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;82&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="AISVersion(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f52dd0a5-813f-0ca3-d357-85306a6fdca2">
      <Execution id="f130e3e0-ea14-4691-8415-c9c285d2370e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="AISVersion(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="DisplayFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="42fb2d05-7365-d814-9fa8-4b6805f28f5a">
      <Execution id="318531cf-9077-4c5f-bf1c-b88faa511363" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="DisplayFlag(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;false&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;CargoAll&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3c0d3867-163e-0645-9dc4-fba288dea674">
      <Execution id="ec45d2eb-0d08-4e71-9848-485bb26a3a5c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880&quot;,&quot;2&quot;,&quot;CargoAll&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;3&quot;,&quot;46&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="aa54627f-1cae-13f1-3ead-5b3536e6a3e5">
      <Execution id="9a377287-def5-4c82-94f3-41a67d08a681" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;3&quot;,&quot;46&quot;,null)" />
    </UnitTest>
    <UnitTest name="Name(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="17889428-ca02-31d3-345b-e29c5d9f7998">
      <Execution id="c050e9e1-13c7-40e6-9dd1-8ccec269d08d" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Name(&quot;C000000000000000000000000000000000000000000000000000&quot;,&quot;0&quot;,&quot;@@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="Three_FragmentMessageFragmentsReceivedAdjacently" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="04cc215e-1bc7-beb0-b94e-53e22b41e829">
      <Execution id="59c1f44e-525e-44aa-b97a-9ce9401b9e78" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="Three_FragmentMessageFragmentsReceivedAdjacently" />
    </UnitTest>
    <UnitTest name="OneUnparseableLineAndOneGoodLine" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="85cd4429-fe6d-07f1-e8c6-1d980684e2c6">
      <Execution id="24305268-68a3-4087-861b-4564e515a803" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaStreamParserByMessageSpecsFeature" name="OneUnparseableLineAndOneGoodLine" />
    </UnitTest>
    <UnitTest name="RegionalReservedBits139_140(&quot;B0000000000000000000000@0000&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="05eca697-b5c4-7c26-1a4c-074f93a061ee">
      <Execution id="79bce66a-af03-4fe4-875e-6dcea8e6cfba" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RegionalReservedBits139_140(&quot;B0000000000000000000000@0000&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="LongitudeAndLatitude(&quot;B0000000000000Owwwt000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="9573f45c-a243-c326-3db5-40b1671510b0">
      <Execution id="7b3928d9-0f91-481a-a408-1911b8764ad3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="LongitudeAndLatitude(&quot;B0000000000000Owwwt000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;-1&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBMMSI(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;257104720&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e7a284ac-8903-2278-2793-d88a9d443fb6">
      <Execution id="2aad5a84-4ffd-45a5-8653-af1c1915934c" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBMMSI(&quot;H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240&quot;,&quot;0&quot;,&quot;257104720&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_3(&quot;H000004012345670000000000000&quot;,&quot;0&quot;,&quot;ABCDEFG&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="842095d0-a381-ab02-c323-b34ad0dc07f2">
      <Execution id="28fd4de1-1c72-4837-8f5b-7e3e9b7d8d0a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_3(&quot;H000004012345670000000000000&quot;,&quot;0&quot;,&quot;ABCDEFG&quot;,null)" />
    </UnitTest>
    <UnitTest name="Spare(&quot;C00000000000000000000000000000000000000000000000000&gt;&quot;,&quot;0&quot;,&quot;14&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="dec34cec-12cb-d29e-5e83-99010d804453">
      <Execution id="ff2f0970-fc54-45e3-9365-b391a9ad892e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Spare(&quot;C00000000000000000000000000000000000000000000000000&gt;&quot;,&quot;0&quot;,&quot;14&quot;,null)" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;A028nBCt@hbs02Gvd0H@2gop2ABb&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2242121&quot;,&quot;0&quot;,&quot;-3828&quot;,&quot;21976&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2Gvd0H@2gop2ABb&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="34312caa-699f-8e86-c653-287d5b9cec05">
      <Execution id="9f7f1888-63f4-4b5b-ae63-04889e155eca" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsStepsFeature" name="FullMessage(&quot;A028nBCt@hbs02Gvd0H@2gop2ABb&quot;,&quot;0&quot;,&quot;17&quot;,&quot;0&quot;,&quot;2242121&quot;,&quot;0&quot;,&quot;-3828&quot;,&quot;21976&quot;,&quot;0&quot;,&quot;2&quot;,&quot;2Gvd0H@2gop2ABb&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBSerialNumber(&quot;H000004000000010000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="1ad78481-33e6-7d27-ec20-d6d31531bdef">
      <Execution id="8d626764-0010-4cb8-8b4e-b8c9b7f2a4c7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBSerialNumber(&quot;H000004000000010000000000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="Draught(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="32ab807a-7dc2-db46-0ce6-d83e23eff65d">
      <Execution id="b5e68681-f3d9-4173-b3c0-80f65ea626f1" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="Draught(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartAMessageType(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a26812aa-f7bc-c269-2128-a21cd8ec88d0">
      <Execution id="2b08545a-8efa-4746-8ea8-6fe1dc728f8e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartAMessageType(&quot;H00000000000000000000000000&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="NmeaTagBlockButIECGroup" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e23181f9-9b96-6d9a-0775-33bf1f31b529">
      <Execution id="1dd6a66b-8030-45b4-87dc-8377a4a4e79a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaTagBlockParserSpecsFeature" name="NmeaTagBlockButIECGroup" />
    </UnitTest>
    <UnitTest name="FullMessage(&quot;?77&gt;7w1iprE@D00&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;477333500&quot;,&quot;0&quot;,&quot;477686100&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="132b1293-2168-95e5-3a3a-c2f02270ba37">
      <Execution id="b9a264f6-86d8-4586-a8a8-8a9219963a83" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.InterrogationSpecsStepsFeature" name="FullMessage(&quot;?77&gt;7w1iprE@D00&quot;,&quot;0&quot;,&quot;15&quot;,&quot;0&quot;,&quot;477333500&quot;,&quot;0&quot;,&quot;477686100&quot;,&quot;5&quot;,&quot;0&quot;,&quot;0&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;100000;000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse11&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="43473201-160a-f649-3642-7fb43a535791">
      <Execution id="97eca51e-a464-4cb8-9f70-ee57a373afee" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;100000;000000000000000000000&quot;,&quot;0&quot;,&quot;ReservedForFutureUse11&quot;,null)" />
    </UnitTest>
    <UnitTest name="Signed8_BitInteger(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;42&quot;,&quot;-128&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e5fe0420-47bd-0c88-9e28-06727e84fa24">
      <Execution id="4dd6158e-c04e-4fb9-84e2-c23e335ee894" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="Signed8_BitInteger(&quot;13mCIp0P00PFnJBSHS1&gt;4?wH2@JB&quot;,&quot;0&quot;,&quot;42&quot;,&quot;-128&quot;,null)" />
    </UnitTest>
    <UnitTest name="CourseOverGround(&quot;B000000000000000000040000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="723ce79d-ca13-a4c5-fb2f-29666ac912d5">
      <Execution id="2abe131c-0d2c-4125-ad75-0a4c1a2cffd0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="CourseOverGround(&quot;B000000000000000000040000000&quot;,&quot;0&quot;,&quot;1&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;10&quot;,&quot;'J'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="b99c2ecb-0e7d-5306-84e6-fcf5e3052987">
      <Execution id="3a7bea8a-eb17-4b9a-a5f0-2f3e1054a62e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;10&quot;,&quot;'J'&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;47&quot;,&quot;'/'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="f7e4b275-b6c9-06a9-5a5e-6701b060c6c6">
      <Execution id="0c19efd6-c44d-4eb0-aace-3790922421e5" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;47&quot;,&quot;'/'&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;219014278&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="8e8da24e-3507-ea7c-fb40-e13a27032e82">
      <Execution id="f950b979-d7be-456a-8e68-348091c3ce30" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880&quot;,&quot;2&quot;,&quot;219014278&quot;,null)" />
    </UnitTest>
    <UnitTest name="VesselName(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;VISION OF THE FJORDS&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="3d1acc2a-11a8-3a07-f553-9a213b1db218">
      <Execution id="9490fff0-9674-48d7-b811-95735ec6c5b2" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="VesselName(&quot;53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000&quot;,&quot;2&quot;,&quot;VISION OF THE FJORDS&quot;,null)" />
    </UnitTest>
    <UnitTest name="ConvertAIS6_BitCharacterToASCII(&quot;20&quot;,&quot;'T'&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="96e2f0e6-d527-22c8-d250-fc0c272db0f4">
      <Execution id="8317725f-bc0b-4c8c-8ba4-8e104593c74e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisStringsSpecsFeature" name="ConvertAIS6_BitCharacterToASCII(&quot;20&quot;,&quot;'T'&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedAligned6_BitInteger(&quot;3000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;3&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="a99280ac-9cf1-3c25-0639-4e6a249d6c8e">
      <Execution id="eb871ca7-e5d8-455a-b806-9e6cb1c5f3f3" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedAligned6_BitInteger(&quot;3000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,&quot;3&quot;,null)" />
    </UnitTest>
    <UnitTest name="ShipType(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;NotAvailable&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="097111ac-2fbd-cee5-d04b-c1558d7086c5">
      <Execution id="414085db-c6d7-4924-a0f8-7bfb175c5a23" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="ShipType(&quot;50000000000000000000000000000000000000000000000000000000000000000000000&quot;,&quot;2&quot;,&quot;NotAvailable&quot;,null)" />
    </UnitTest>
    <UnitTest name="MMSI(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;257745000&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="913fc06a-3d18-4dc6-99fe-d908a165a165">
      <Execution id="b56fa3c1-f308-4536-885b-a59724b86430" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticAndVoyageRelatedDataParserSpecsFeature" name="MMSI(&quot;5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880&quot;,&quot;2&quot;,&quot;257745000&quot;,null)" />
    </UnitTest>
    <UnitTest name="Name(&quot;C000000000000000000000002000000000000000000000000000&quot;,&quot;0&quot;,&quot;A@@@@@@@@@@@@@@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="d9b9a2f9-d619-6d7d-4662-c020e28d506a">
      <Execution id="cd5b4329-5681-4c5a-afc3-e4c6bd808b3e" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportExtendedClassBParserSpecsFeature" name="Name(&quot;C000000000000000000000002000000000000000000000000000&quot;,&quot;0&quot;,&quot;A@@@@@@@@@@@@@@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="InterleavedSingleAndMulti_FragmentMessages" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e2df7a59-6731-77b9-a220-912f28558581">
      <Execution id="b818f708-d048-4738-8a3c-c636ec36f26a" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaLineToAisStreamAdapterSpecsFeature" name="InterleavedSingleAndMulti_FragmentMessages" />
    </UnitTest>
    <UnitTest name="RepeatIndicator(&quot;BSm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;2&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="37b6707e-37dd-db99-7038-c9cee28f7fd8">
      <Execution id="be6e4c1e-f075-4115-a2e9-8226669993e9" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="RepeatIndicator(&quot;BSm?;p0008&lt;q:naAtLh03wTUoP06&quot;,&quot;0&quot;,&quot;2&quot;,null)" />
    </UnitTest>
    <UnitTest name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;9&quot;,&quot;61&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="777134f8-508c-26ca-e60a-1a9b11a7672c">
      <Execution id="6fccb6d4-9f4c-4381-9e4e-afc518695050" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.NmeaAisBitVectorParserSpecsFeature" name="UnsignedMisaligned6_BitInteger(&quot;eogf&quot;,&quot;1&quot;,&quot;9&quot;,&quot;61&quot;,null)" />
    </UnitTest>
    <UnitTest name="TrueHeading(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="e2f90c57-1ae6-ae87-0b1c-ca096841f0b6">
      <Execution id="812f107b-5e9e-4cea-83fd-9c7acccafbc7" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassBParserSpecsFeature" name="TrueHeading(&quot;B000000000000000000000000000&quot;,&quot;0&quot;,&quot;0&quot;,null)" />
    </UnitTest>
    <UnitTest name="PartBVendorIDITU_R1371_3(&quot;H0000040Q0000000000000000000&quot;,&quot;0&quot;,&quot;!@@@@@@&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="abac8ee2-e918-2aa9-4a84-b928bfc796e9">
      <Execution id="91fa32f6-123f-48cc-974d-55f8d92eafcf" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.StaticDataReportParserSpecsFeature" name="PartBVendorIDITU_R1371_3(&quot;H0000040Q0000000000000000000&quot;,&quot;0&quot;,&quot;!@@@@@@&quot;,null)" />
    </UnitTest>
    <UnitTest name="NavigationStatus(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;UnderwayUsingEngine&quot;,null)" storage="c:\dev\ck\ck-core-projects\ck-ais-net\tests\ck.ais.net.specs\bin\debug\net8.0\ck.ais.net.specs.dll" id="6ebdbbad-88a9-ff27-827f-e9056a0ff6b5">
      <Execution id="6251448d-ea87-40c5-af2b-9f09d812a2f0" />
      <TestMethod codeBase="C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll" adapterTypeName="executor://nunit3testexecutor/" className="CK.Ais.Net.Specs.AisMessageTypes.PositionReportClassAParserSpecsFeature" name="NavigationStatus(&quot;1000000000000000000000000000&quot;,&quot;0&quot;,&quot;UnderwayUsingEngine&quot;,null)" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="f64c57db-45db-14ee-9325-bfefefe3d12b" executionId="c6f2ebb8-f4d5-433a-95c0-2f3159df9d5e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="345259f3-73d0-4c53-0802-118d48837632" executionId="cf1e25cc-57d4-4bfb-8e59-02004658b143" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="21565b41-d5bc-3dc8-e055-ec60f64af315" executionId="9ffc4e66-ee3c-4849-a823-f1d92f02a5da" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="29a1ba45-19af-c014-98df-2265cd94af87" executionId="38138b50-6c0f-4be6-8e93-6e3c30d2d60a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5354a16e-0db0-9185-51a9-af438f7ce606" executionId="127d02b1-496d-43e4-8e7b-b43c77272d99" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f6eadebc-e7fc-110f-9fe8-cefb20f3de83" executionId="8576ef8f-1428-4807-9bf5-11456a9d8cf6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5aa227ca-37b5-4886-a84c-180a7b435561" executionId="e71f068b-5d1b-43c8-86b8-8762d41944a3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="56538b32-e331-85ad-d5e4-58a1f6cdcc70" executionId="2a6ca098-01f6-4161-a8b8-c6e0ddab6a6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bccd3b6c-49a4-25a1-b2a8-c5f5f0a3b3e3" executionId="c071b37f-dfc8-49b4-83e3-54268e4d19ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5781079d-e8d6-99b5-8802-857764beb9cc" executionId="d6f92d09-44c2-4e8c-9719-e7b3b6790107" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9c78274a-3691-881b-aff2-405e074b0691" executionId="ba38fea0-5c51-417a-ac68-eacb5397a1c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9446d00-7f0a-dd64-da7a-072cac8ee7ce" executionId="6db684f7-f998-4447-a1b0-6bb4cc828c11" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="179e1831-a7d2-e5e9-dcbd-0496bdcf2399" executionId="484e7f44-eb38-446e-97d0-65c550189497" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1b877b3a-3d9c-faa5-c4cb-8ebfe984d06d" executionId="d8ade85b-cdc1-40e0-a04d-b5dbed02991f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f08334ce-2b65-27b5-1327-876e515dd6dd" executionId="d6066db8-7d55-4595-b439-3b53c612eeee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20b804c5-cfe6-108b-e212-0a213d381892" executionId="01e5a170-83a3-488e-9290-a0b3c819b437" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2a9f919c-1873-9a58-c5f8-ebc199729872" executionId="a00b8d3f-7ad2-43f1-8ab1-0c7f5890ff16" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="40f46989-e37a-3c03-1afe-33c4839c1077" executionId="e8b2fe02-3d0d-42d2-8ec3-79e82c104ce2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1d467f8-6d39-c235-6f4b-fb9069b8d25d" executionId="2e24acd6-5e67-40d7-8029-92a76368001a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f76a010a-4805-72f7-f4eb-b89e217953f5" executionId="cb848700-3c60-4fa0-8893-929760425bcf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e4d776fa-6f7b-7b9c-324e-3e0ee4e2cdcb" executionId="359c31d8-5fa1-4b60-a453-b697a148133c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="559b8cfe-17a9-b61e-2a03-945e0b13c6e4" executionId="db7c9d92-4808-4cb9-85b3-182da8ca84e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0d3782c-7c68-e27f-d2c1-05150844dd0f" executionId="4da10786-56e0-4fde-b825-31abb104e776" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="64e80ae0-8cb5-53e9-2cfc-4a5219839492" executionId="fc41d67b-8a12-4fb0-bb64-43a259073867" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca45b540-c90e-13bf-fdde-ce3e2fc84842" executionId="1ec3a665-9196-4711-88a3-7041a699a6f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27ef6eeb-32ec-fdc3-c993-9ef868f36954" executionId="8a16ed97-7597-4712-8293-186a5316bfd1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="43713c6c-867b-5b9b-4abc-1502165a3794" executionId="23dad974-3c00-4162-b6de-d04182fc6838" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc63faa7-3894-7408-c2b8-379a48f22b24" executionId="e371ce6c-4e18-4e0b-ad86-124f4c5d4300" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be0539fd-543f-f18c-4ca1-623cf429c1ad" executionId="95f3859b-5d4e-488f-b1e4-327e12ccd02a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="964e711f-86cc-8ecb-221c-9a27cc9b9118" executionId="4953a78a-ba0f-4bd6-b5cb-64bc3756ce4a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a8aaeb99-2d65-884b-8c41-158bc8a9e3e4" executionId="b07889d6-c4c8-4c01-b3b5-02574b8550d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1e47d8a9-e341-71f1-d8ef-63f2889f1647" executionId="bb8313f6-f5cb-4e53-9202-070b729d9f52" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1ad89db8-b4dc-3de3-051b-44471d08e1fe" executionId="cff33f4e-9183-49f2-9c2a-fb179ed6d4d2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="124ac23c-d5fa-563e-a206-5b06f4012fff" executionId="efaf47be-8f42-4609-8756-1878a1dd2459" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b8bf3de9-96f7-d9d1-6626-c47e7f61f078" executionId="0620ecda-7c65-418c-872a-e90883ecda87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8641f56f-c269-6ebd-e4c1-cbc4ae3817a4" executionId="513fb497-27bb-4f34-88c7-929422563b43" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b48b6dc3-bd8f-ac03-f4f6-aec7b3537837" executionId="d6d4bf9a-45e3-4543-a1ce-a0d630a37c42" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c790654b-a31b-6be1-5187-c398d94e7bc3" executionId="e6344dbd-35cd-4f4a-af4a-7f1e16346200" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="187b73c3-40df-76a9-05f8-ce2737697880" executionId="b7048e0b-ba06-42b5-8ad6-3b8ea7e035ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fe06932c-d038-89a2-641b-72709b0a0f65" executionId="1508c13a-b72a-41d9-b7fb-7b2abbc4516e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="776f729c-c702-a912-a873-394f7d3a19e6" executionId="a50fc8c9-e26f-4fa2-a7f4-88855a8abc9d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="89492880-8875-cc9a-2241-94825e82827f" executionId="c33eb7bf-5bff-49ac-a3a0-a7f8e46bae73" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a724d7b0-9096-c4bb-ae3b-c3c8e82dc0c4" executionId="3d9319c8-71fe-4015-bb16-8e46bbb49f57" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0820d0a4-66da-e2ae-f1de-8724421b2d23" executionId="56595235-6836-4f80-9487-94d75a256190" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="26bf8d9b-51e6-3bb9-4078-ba15b0a59d82" executionId="e58280ab-b397-482d-afc1-4c0f65b3910e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="126f94db-5658-524c-0d78-06f3fcff65cc" executionId="e4f596cc-a42d-4b63-b244-3c821d4776e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="feb0a125-3ead-1893-42b8-d48e39012898" executionId="24d68613-966a-4f3d-bb6e-dddf1bb83d27" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f636fe6-13e6-3d3c-268f-3c2189da45c5" executionId="185662f8-8c6a-4ae8-9954-5dbf2ff61bf9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9657a21e-47cc-a3fb-d50e-f6ba809da636" executionId="769a7768-f2f4-41f3-928e-6925281d2466" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7848174c-191f-1c05-982b-e4eaac58942d" executionId="c5d1313d-3331-4f39-a119-319241a40cb5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ce2d554f-d77e-bb59-fa53-00f4d20ce384" executionId="e8474fd5-53e9-4862-ad54-4db96e22f5da" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2014c4b9-731c-91b6-1b1f-975d2a93aa67" executionId="d0a953a0-3d7c-4cea-8e2c-dc5d7d26abeb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c00ffb1e-9663-1f38-bf7d-f788968fa0cd" executionId="4ea5db74-ebe7-4568-8744-82beb797ee5e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a86bebc-66d9-ea34-5337-4cc4983c30fa" executionId="c3d43685-b0f8-4caa-92b4-a188465154a8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="94a9edf7-4b7f-a86c-3ba3-89b29ab19da6" executionId="72624082-c84a-4bb8-9ef4-4c30b2fd25ac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e2fbd46a-7239-ec2e-df6d-9594ecb8ed60" executionId="39553b3f-f51c-495f-be51-01684b5dcda5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="93ea75b0-5e22-15df-4d35-7f3f8438b9f0" executionId="e4db1530-42d8-45e6-9e95-7e0cebeb9cd1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4bcc0343-270f-e408-5ece-373da2debc90" executionId="65f687d1-bb14-4ccd-ace6-e585535f4cd8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d5c4ef54-0a88-5e17-9876-800c99f55076" executionId="438bd46c-323a-4fea-ab2d-1cffe35f0726" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="57fecdc4-bb9b-44ac-023e-bdf9637ee1ef" executionId="c9e9e5e4-d351-4bad-b82c-25b54a5254dc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="59b17cf1-cd86-d331-86e5-1f1346149eb2" executionId="0301e5b0-16b3-4289-ba6d-1dd30ae21379" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b7b34dea-ee3c-cc24-16c4-1e5aaa5ef52c" executionId="f17e9ed8-1a74-4a89-a730-bf8b71246d4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e165a77f-b10d-6a72-6e8c-173f26dd49f6" executionId="a60e7ef8-5ff6-4c30-86c3-3414e8e721f0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="678d54f8-c3cb-9b7e-7d78-a6a71d446737" executionId="3e9687c0-8fb2-4a0f-9712-fae5e9339d7e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="32ab807a-7dc2-db46-0ce6-d83e23eff65d" executionId="b5e68681-f3d9-4173-b3c0-80f65ea626f1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e75b09a4-f690-0bad-26f6-bb520b4ba150" executionId="2663edcb-c5ca-475a-a578-d96f89b0db8f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c08b5769-35c4-b48e-13b3-ec86ac342aaf" executionId="ab52d08e-d0e8-4e08-bc30-e08a2ca1d6a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c8a693b7-91ac-3ea8-141e-42915e6cadb6" executionId="85eb44ba-56dc-47d6-aa9a-e66f7bb35fe9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5816061d-d874-23aa-0a6b-658e62ffb9dd" executionId="ca49d747-07d2-4caa-8a47-36af1e896d26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="072ec24f-e6cc-df82-a1ed-b84eca07b73a" executionId="3f7aa165-e86a-4eaa-82a9-4c136c290c40" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9882346a-b984-690e-ba88-56e115b2c8e0" executionId="e577f479-2af6-47e9-b20f-b62778c096a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05c1327a-1a2f-a0cb-d372-2f5425d30d5f" executionId="ba5646ff-7887-4a8f-9746-ddf60dc3eaa4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c9b212d6-7ea6-5806-b2f3-6655bc5c22fd" executionId="5e7bad51-b234-4949-bd03-631bd107a8f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="26477b6e-5439-5e66-f49e-f495e0563c09" executionId="e35ac176-69bc-4c20-9e89-378774e62ce1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5dadd8e8-7883-f461-61b9-6b9c366256f7" executionId="b140f607-9eec-479d-af4b-59d544c03d64" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45c455f8-b14e-dd94-570f-270cbc20636f" executionId="b892d1c5-8b69-42fe-9b09-8489193bfae0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="647bd5c8-589d-99b8-475e-41e2fac8d593" executionId="a25a3099-f8ff-42d2-8970-d9da1a5abd88" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="67fc7f9e-9d65-77e1-1624-abbde7245def" executionId="5845e16a-99ca-4290-afcb-f8c9745cc420" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3ed4072-c962-5dfa-d39f-11e0681c06a1" executionId="2580d793-adfe-439e-8a5a-b5de9f968b47" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="805e8292-98ae-b04a-4b05-67ca68dc269a" executionId="bc1f1eb8-8a4f-473f-9267-13662e0fc821" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9154bd0b-cdb4-1ae4-e831-66303f378d25" executionId="767be603-4fca-44f7-a9c2-ff8a1d8edb4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20603a81-31b0-498c-6673-028a9e86a79f" executionId="ba3c90cb-6b25-4d23-ba81-b758e012267a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="df0ac554-d270-05ed-4643-2acc7af7ab4c" executionId="d0ce61fe-b399-4a9c-b381-9f679aa0b8f3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30718773-f372-66d2-06db-c3c03587c845" executionId="a0c0b274-25d6-4b48-92ef-5770bf0f6a0b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="93ab3a69-f633-08ba-95eb-6ad667187fb0" executionId="bb9e74b3-9ed9-4d88-baa9-0ab9d906e8b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="597b879c-dd99-f679-d4c7-0bc4c1461ffb" executionId="d5a77beb-e689-4c28-93ab-943976011908" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d0b3289-d1f5-af6b-a4da-64225c845580" executionId="ebf27c57-478e-4bb4-85a9-756b0e92c2ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="361265ac-04d1-3d5e-b926-84ad5d23a317" executionId="23ffd304-1d25-4eda-98e7-bf4789fe99e5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7b37bf3b-774f-446b-8274-f853f2e9f3e4" executionId="6312526d-4f83-4c00-bce4-99da7061bf25" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b99c2ecb-0e7d-5306-84e6-fcf5e3052987" executionId="3a7bea8a-eb17-4b9a-a5f0-2f3e1054a62e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78ca5cfe-7f25-a252-6d84-279a9fe58296" executionId="c13531a3-0116-4dd3-8dc2-bfe6a2eac580" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a85a301a-5531-1628-0928-9e745146f8a3" executionId="d8bbaafb-7326-4d85-b4b4-dd7b3bfe9d54" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae00ee5d-0aee-cfee-b677-fef41fe9ddec" executionId="3f24115f-6c51-48a2-bc60-39a2d5edae6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="34de4405-2a0d-09a1-0be2-8fab262cb629" executionId="e56e5824-03f5-4910-8e11-0ffd527452b8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd7e4ea1-ab5b-78be-3f64-c940661dfcf4" executionId="ae84a8c2-a2b0-4c6c-914f-70724577ecfc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="84de66bf-3f7e-7e37-8cab-45b5955855a2" executionId="88f6a89d-c712-450e-8202-4e814e35262c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d63f2ec8-e90e-14e6-7597-3d1d1676c0f7" executionId="2a220c5c-4919-48e5-8310-e4feca81563a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="07ea9a45-7ff5-a587-df80-042c5630ac19" executionId="437d21c0-1ea0-4056-8f9c-70f8fbba4a29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d8a1a05c-d4f6-06f9-1743-0dd92c1c5565" executionId="dc51fb67-4c46-4318-8d28-1cdb340d7520" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="33856094-da52-21b4-2a57-1287f35706b8" executionId="da40250e-bf27-4ecc-b089-3673b9e663a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a88ada19-9d3d-a3db-ebff-91a30e2921b2" executionId="49f0b920-9348-46e9-8bd9-5abcd74d9a5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d3cf6644-051c-5037-c245-352d8d1884da" executionId="3a3d4435-6eb7-4ba5-85d7-3e4d5c67a78c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ca231b4-9037-4aaf-4dd4-af8ec42d4d76" executionId="10d3b100-287a-4bfb-947d-c208362e4e65" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f20f1ba3-f4d3-99e3-9367-30f14257930d" executionId="69a817cb-1e7e-429c-8063-7c275f17201a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7811b6b5-18a0-a328-c386-1775049d7a35" executionId="558aa2b9-93c0-499e-99ad-70b07d31dddb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4039bcd1-f776-f008-dbc6-126045adabf2" executionId="fd91b65c-ee93-4fc7-ab3b-e074ea5496d6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="df2570f6-8c66-0b24-2d68-8978a49e151c" executionId="c091f175-cc68-4854-8c54-3339628bc16d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8e13f186-4e37-725b-5e7c-8de4564ccc72" executionId="0d8adbe3-9602-4942-9dd8-3423823ec8d2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0ad6cfb-ad29-f883-04cb-111ddf6971a3" executionId="26bf9fc9-76d9-4997-a8b1-2dd3cfac8c1f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9206f15c-242b-d067-e74e-fd85f45ad31d" executionId="ca40708e-675a-44af-8fda-b403e27be660" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d7d4a0f8-d8cd-ac68-71c7-8dafcbbd97fb" executionId="4342d8c4-d34e-440c-b789-f8ea8332b1cf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f018392c-b69f-1819-ee39-41471671512a" executionId="ac8f1c21-1941-478a-9476-4c3a94bbb0c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c9a7ed33-28a5-5f4d-54c8-fddee0e768ea" executionId="56d176c6-95ac-4afd-8be0-497623d6ab80" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fbd36d80-d7cc-8951-ec77-526b58a5e8ff" executionId="26ce6c9a-ce81-400a-bd3d-c850051d2449" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cfc29afc-a387-dd8b-5641-4cae3d060e7f" executionId="35455e9f-a79b-49c3-b529-5f6e94c9638a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dba5a901-a55c-b2bd-b537-bf3a2387f350" executionId="453e219f-b989-4064-98d3-b7dfc18ce4f2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f249456-5732-16b7-398d-97da594e4794" executionId="6a0ab0a4-223f-4b6e-bcd0-f383033cfd2e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dde45fa6-e37f-b1de-99ed-78dcd17dd7a7" executionId="9240c618-9798-4469-868f-76217c63e4ba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b24d73c-fd0b-ba63-9a82-9ff440d3f23a" executionId="196da310-f89d-4240-bb85-d942226a58d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e566e537-c657-37d3-8b8a-29152d9047e0" executionId="3d948d57-cba5-4fd0-bb48-0e33918bdeba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="19e65515-b261-324b-14cd-3cfaa165995a" executionId="526fb6ab-4525-417d-bba9-94b04f0e0557" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1648a77-d498-d52e-97e2-9218ca631910" executionId="5947a2f5-b66b-45c8-93f4-0bdd990d91a3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="efbba2b1-a781-6038-8fe8-2e8bc601c820" executionId="53562f2d-72df-4eee-956d-6243687c16c7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="de8da467-3292-2c7e-887b-61925ff6c58a" executionId="35366b9e-7eee-4683-ab31-7df879b6afee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="af07cb37-69be-87db-644c-e58392c2f942" executionId="4203146c-3256-48c6-a45d-4b4dca39208d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="772c977b-9a60-0304-43a3-4bb5f19b1e16" executionId="48afcfb6-cc4a-4e34-9621-fc2c2c48aa80" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="54f19680-fed7-f01e-948a-3235a655b51b" executionId="698b1ce2-a74a-4dae-ac87-01dc71aab9a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b4d2cf55-8eee-3bd4-a69c-9552453dfd80" executionId="fa09d009-bd95-43a2-9491-8e594c8316dc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6803eb75-8cd3-f12d-bf82-4c52a27c5f5a" executionId="339630a3-6a9b-4835-a697-991da281475c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cda159b9-68c5-e199-f96e-bdbd1994bb82" executionId="347fc6ef-43e6-467c-983a-81d2c2383479" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="42fb2d05-7365-d814-9fa8-4b6805f28f5a" executionId="318531cf-9077-4c5f-bf1c-b88faa511363" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd55b306-5114-b928-4f2b-11887f0d8203" executionId="f6ecbeb5-3f76-47fb-834c-226ca892bb03" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e2f90c57-1ae6-ae87-0b1c-ca096841f0b6" executionId="812f107b-5e9e-4cea-83fd-9c7acccafbc7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="047388df-83c4-3a87-4405-1c3b99517335" executionId="62f36a78-93f9-475d-8c0b-ce7d86259710" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a67aee9f-e97c-78f7-f186-a0dbd2589049" executionId="67d4eb33-0148-477e-a60f-7f54cd6be590" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7a7cd104-7ed9-c88a-8a4f-2d87243e42a6" executionId="c4853983-0443-476e-823b-27945592f572" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a81de4ee-7aab-e81a-5560-c1f4faaef599" executionId="773510d8-047e-49ba-8f7c-2465ce40a241" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="72e599a5-ffae-234c-14f5-6f09e0450aee" executionId="52bc5258-f794-4807-b4c5-a61bc3668e45" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30286ba8-3f49-ca95-c9b7-28de3aa4f583" executionId="7b6e70f5-c470-4cef-93df-fb540fdcee7a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6c939327-e182-1879-4613-457890dd9ee8" executionId="5dc886e2-491c-44d4-9a7e-dd9cfcd99dfb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b1a72e91-1a36-124e-f8a0-694b86250c95" executionId="e87df31c-7032-4d42-96c7-f56b1cb6c32c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27a15858-e462-192b-de2b-d3f0ddbd57b4" executionId="d3e74718-95bd-4f89-a9ad-e803e92c5c22" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2df8e2f-dd46-b40f-af79-547388f599c1" executionId="c77ce142-b151-482f-bd32-d9c1b4a8ae21" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6e21064b-3b3e-7f8e-1e67-fc76c97802da" executionId="c298531a-95ae-42ba-bbf6-40c89cfdf10b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5058a9d6-b9ef-7fef-c417-14cf926f34a3" executionId="b1fd51cc-0151-4cf5-aca8-50239ac5bbc8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a6d09e3-297b-f869-8fc3-126c4b92e2e4" executionId="027e8bf4-6055-4d09-9428-a3a647e04cd4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77314d58-01e3-55d0-6dcf-cb0e66fdf3e2" executionId="1b8ad3f5-4ad0-49f1-860e-8b9610339a61" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e0d21fdd-0b03-b702-79f3-12bd88e2b542" executionId="73368e7b-e7e1-4e23-89aa-cacc18570a8c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="321b9524-f118-ccd2-b63b-ac508e63d626" executionId="16fd2927-62cc-4268-982b-c6646f0ed82f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2e650580-d267-47c9-9121-7685c2c0122a" executionId="b3bb3f1b-120f-4d76-bdf5-bbb65fe0e089" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="509d4f3c-0258-20c0-4756-eff8e7493d35" executionId="b7123e92-06ff-412a-9f5a-c073f02f9614" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9aea0d68-87c6-4e42-f950-ddbefdd83cf6" executionId="f315d2d6-8f75-40c9-983e-ac40229de83c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a2f65f5-9494-3f28-cae6-42d4ffe0fac1" executionId="dfcb086d-875d-4873-be05-d00dbcde291b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b45e4ad6-a253-51a9-7fb4-e6b7c9355458" executionId="3a84383a-bbbe-4eb3-88f6-67df536937de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9dc6bdaf-5281-8e53-8cf5-d6edebab3bb8" executionId="472f65f2-d5a7-45e3-9783-b3d7f4d2c544" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="79994107-4692-be33-6d60-41927ecc9baf" executionId="498ed8eb-7dad-4023-946d-34b98f84f868" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c0d3867-163e-0645-9dc4-fba288dea674" executionId="ec45d2eb-0d08-4e71-9848-485bb26a3a5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fb70d808-27c7-04c4-0102-52c38b810ebe" executionId="a7e61ea8-542d-4e1b-8dac-a245b9c42456" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="52ae657b-56e0-d342-c0a9-dd9f545029ad" executionId="729de461-2fb1-48ab-8bd9-1843c6dded16" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5bec235c-b822-8eb6-ed81-3161aa6c5e46" executionId="0174399a-896d-429f-960d-23acd3542a8a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="636fd18c-bb17-9ef4-d2bd-88b547119285" executionId="a7699d29-3014-474a-bbb3-9b947207bbb3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a9ebcf75-a817-e431-5e1e-1b6610bc5839" executionId="94eb4f3d-473c-4861-8521-4f2647b0ba87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="da8d8202-c59b-56b2-a443-b08269f53f46" executionId="68fd4f88-2935-4582-9305-75127bc5fcc2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="13b6d395-8f0f-3bde-edb3-12edc2fe7e61" executionId="10fb2e4a-1289-4a3f-a7a9-40986f68bf30" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9d71603e-c3c8-b540-bc7d-03271d97686d" executionId="7e0f3010-4332-43e1-8849-7679d0ee0011" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="82ed057d-7398-d676-5207-8e72a6631a09" executionId="ee54f7ce-a2cd-489f-9f79-d6889181624b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3d1acc2a-11a8-3a07-f553-9a213b1db218" executionId="9490fff0-9674-48d7-b811-95735ec6c5b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="98ccd8d7-0d52-6896-c7a1-9cbdd87734d6" executionId="c2d2f800-2f55-4d1f-ac23-0b9d6bc21ea6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="02b15256-76bd-543a-81b0-124e6cd71cda" executionId="bc68397c-2a61-45e1-b4f4-b0bbbd39db3f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a0027da-5bdf-7929-ad57-372b4b750f35" executionId="55ddb34e-6a85-4965-a428-f6389a61f518" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a71d5b0a-55d1-a684-ce6e-a29739e6138e" executionId="ac6c7c44-2936-4c1b-ab25-44477e846dcb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="152c4fcd-7252-9f39-561e-59c1df217945" executionId="423433ac-6c99-4e19-ba30-c34090fadf82" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63f4c05e-1a3f-0836-418d-e5e62946c1aa" executionId="3a0abe62-1e2e-4ec3-87f0-866fe5c7157f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eebe7cd9-c3cb-f5d9-b9e8-a7420e9160d7" executionId="728157e5-00e4-42c7-9883-798d1e7739ec" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49525ade-cb8a-55fd-e77b-770181083b65" executionId="a134cd05-9dd8-40dd-b995-53a01567183c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="023a340e-a495-c32c-2a2d-e3f5d7e165e6" executionId="48c2db02-1d0d-48e5-a33c-229ca9bbeefe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c6402895-8bf3-30db-72bf-ee8383db1fa6" executionId="c0e3e900-ae66-4166-b4aa-93e01eb8df8d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7dbc60c4-4373-6985-98f6-be866679a32b" executionId="7a2c16d5-9687-497c-bf5d-2f31e5683f3c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0d48b321-accb-8cef-c7d2-870cb25d1952" executionId="864905b2-0256-41da-a9b5-3733eaa0a953" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="88245270-bb54-735c-b41a-c033dad5a2d2" executionId="2fcca770-50fe-4584-bf4a-2fe39e1e815d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bb3a5fae-a743-8009-1c2c-30541e552257" executionId="f5b1c94d-730c-4a27-aa31-91664d0cfc0d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c40b779-01f3-f4b8-cc92-c0335ecc455f" executionId="b6c0fecd-275b-4a8f-b228-29d0149741c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6c13e3d8-7ebd-634f-673c-0e19d4dc5450" executionId="d1ca92a1-676d-46df-a1ce-e35d0af5740b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49fcf1b2-6edd-ed5c-7138-e5ffecbb05f1" executionId="400e1d6a-eeb7-493a-9fa1-2805e9d25755" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53cd430e-0767-38f6-5caa-582fcf2ab532" executionId="3917adc4-edf3-48f7-bd8d-88418e40f31a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="50ededf9-3f7e-fc9a-9d02-1c40afd11853" executionId="069092e0-9e7e-4297-88c3-956f73397c71" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c476bd87-46cc-55ec-0afc-0ee1f96595b0" executionId="e862ff48-4e1a-46d3-a7b2-4034377aeafd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="91358b4e-2d29-1192-d1ba-563032ec4754" executionId="500e6470-beb8-4331-9d03-4e79870b4b96" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f697d8de-1295-8c02-3d1a-5730e5d5c0d9" executionId="d1194330-d4e0-457d-9c41-3ff905693e9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bda8a6b6-60af-8b36-56f7-510a085964e2" executionId="88a654dd-6515-49a2-8816-85f5d7f6a88d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="08567abd-2ee7-1452-cc20-ca2d49debdd5" executionId="44d8c295-3a93-4430-bbbc-c05cb8f207c1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="888fe45a-f7d5-3444-ef43-8ab3896d4a7c" executionId="2e994ae2-c944-4a08-ada2-5c1b2fcc4711" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="469ffce6-b0be-9f13-4b85-e39790b88e1d" executionId="d165e9b3-b018-4001-beeb-56303a1262a9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3603fb8-b01f-e636-b3b2-815f3d2282d6" executionId="c9f241c9-6af5-4216-a6b4-b1b650f5a42e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aba19db0-7fd8-f103-2f47-f4947250c1be" executionId="b83b6818-9c22-46f8-b7b0-1f38058b752f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4fa87240-6be7-c557-1146-deb2877c6b30" executionId="7ba6131b-8a86-4cad-ba63-d1b3154bb1fb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0cb2b1a-640b-cb08-528d-e5506b132ea2" executionId="f2e3320b-b7a6-47a0-86a9-f2f9167d8106" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c8d94c85-217c-7de3-5d79-63f993898555" executionId="874eabfd-64c5-4ad4-9ff1-9604194f779f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="39835474-c23a-0357-9d98-c66ed3b78236" executionId="6db55114-6532-4246-93bb-234958381b22" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="60e8c0a2-01de-0c70-a0ec-2bd12f188c71" executionId="debaec99-5964-4e03-b1ef-9044cd262e60" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f58c993-fa10-ded5-1568-481030cb968f" executionId="ad37784e-2e51-4f74-aad3-1a4dbcaf7e94" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1806a801-45ca-e2d6-481b-b9db5e179773" executionId="e407f8c9-4e92-46be-a689-ed5f7eb90a96" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="24f2e515-f6c4-b384-48d7-ebc7d46b1072" executionId="3a321fe1-62f5-49e8-915f-6946c2d0efcc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2e82c15-888e-1f07-9ea4-c3ec2f89ca75" executionId="94e64f75-6092-4f66-9dec-7d0d196dc0ad" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="839a5105-1f29-8cd7-59d6-7db4c115ed2f" executionId="64f2404c-b42a-4fba-a97c-f9acdce60dfe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="37a0febe-8c68-5733-dc6c-6a87aaaf111f" executionId="cce3f27a-6f8f-4250-b2bb-3a89f3ef8aef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="923c683d-3832-13ef-fba0-99eb35a73d99" executionId="4b19edf1-3fca-4443-bfd4-ed6182e56d83" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="de6627ad-15e5-30f9-1318-ea5613250e56" executionId="f48d891c-a317-4c7c-aa2f-8e38d27f5303" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="288e331f-dd13-e90a-6db1-d3ccaf6157b9" executionId="c5b55a1a-b4d3-4c29-b129-2433c0b224f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f6d3c818-2378-97f3-6dd0-e9412954d170" executionId="c64b9e34-1420-4510-b975-2c07797a6b41" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="210dd2f2-f6e5-7324-9d3b-0b6365bf71c4" executionId="9c7af05a-25e0-46ed-88e2-87c969b0a98f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca38d60f-263b-6c21-df05-c79882baf833" executionId="b701e2f6-e4b8-4913-9b34-488a2072919d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8b2f87e0-a176-53e2-38fd-811cdd2a11e2" executionId="57c84cad-7f28-4c1f-9093-a39613bb38d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fe4aec47-605e-5a1d-4b60-5cb80fd16085" executionId="ceed2a33-93be-4428-bbf8-3ca000e796e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd218e62-906a-0437-5a38-b921aaff7b1e" executionId="5d14ea4b-ad28-49b7-8f1f-30bf10cb38c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5a305fcb-7da2-d366-74b1-77cc61e7bfac" executionId="b7dc41a8-0eef-42a4-bece-90a4620d4ff4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="44be0c2c-36c0-437d-8e12-8d4046318e29" executionId="acd8b8e9-cc0f-41a3-97c2-2099c7f9cc41" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="73781839-e391-f846-4ded-b9e602f19ac5" executionId="cce31100-4d37-4506-b097-d12f4fd764e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a03d9afd-4326-5e24-0e7e-ac2f20f591a3" executionId="01819bd8-44f0-41fe-99fd-97a828efaf78" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="56bd4a5b-9e83-03fd-8e58-a9a6f004a9f7" executionId="f152a532-21a9-4375-8c8c-33d77abf06c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05eca697-b5c4-7c26-1a4c-074f93a061ee" executionId="79bce66a-af03-4fe4-875e-6dcea8e6cfba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7f02808f-10c5-a699-3eea-c833d77861ff" executionId="128a960c-9041-46c8-9b3c-0d955c461593" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e54eb199-13ef-3101-0972-2525e1643532" executionId="a88b132c-d87a-4c7c-b1c9-b6a39741e4ad" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="012638aa-ef08-c200-88a1-fe71c9167a59" executionId="fb5ab28b-aa25-43cf-8eb9-bddad0f47315" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eb6428fb-6908-4aa9-d71f-d91f19fd7889" executionId="17f1fb45-35df-470a-a720-7c68d7e516a1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f839b87e-4f92-7b55-2a9c-2b5cbbcc720e" executionId="0e85c9b3-5490-4716-8a5c-f0a93efe1862" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="377f3b3a-c8ae-c7ef-41f1-74d2c7caaeb4" executionId="683ee9ae-5f3b-4ca6-bbaf-e59fac4b223c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d5322110-61d8-1cb9-43aa-234c410a1e7b" executionId="941ae2cf-0a53-498e-9b40-0708826e7451" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="54ce8bfd-78cc-1fc5-f5cf-02e9dbb2d354" executionId="30a53541-957b-42dd-9c20-2fc085acabb7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3981900f-d4cb-7487-bed4-7b989acf9c4b" executionId="67630b7f-7b88-414d-b9b5-b5b63cdae00c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1846472-4b3c-dbed-322f-d102d3addb86" executionId="0b1d027c-3d31-450b-a6e7-7c8dadb9267f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1a037fdb-7e21-141c-ff31-66214af5c84f" executionId="825d5335-cd12-4ca9-854f-18175e48b930" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f25d5f69-ea1c-165a-bb93-fb01d1653dac" executionId="406731a3-f1e5-4a66-a418-b4fce3dc44bb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6df9afa2-d06b-689e-5a74-517d0b0ed892" executionId="3d7f2c3b-4455-40cc-8210-b7fa37ad2df0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="11d3a129-53db-aa59-4c2c-5ae5e06bed1f" executionId="c6d50ee0-6a59-4f68-a314-fec060096e9c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="efa984ee-a860-9b4a-86fc-78bdbca9efd8" executionId="da6be5d7-6be8-4528-93b9-b63b49506309" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="85b64cab-4ae7-6812-6d95-d82c298a15ec" executionId="0a85ff21-94a5-4d17-b650-eed48805a975" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4e4d1800-0ed1-5265-c300-02f4b5a4dce0" executionId="b3ba5822-9290-456a-8721-5ae05dbff08f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1ce261c8-497d-8b9d-cb4a-891ee95f43b9" executionId="2d585a92-fd97-4c6c-93bc-88f681b46725" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="abe7676e-46a3-96cb-09e5-40bd01cf47d1" executionId="7e0a6252-94e6-48a8-86b2-e04f02934864" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b4154d4-acc4-cb94-f810-d9ac46e11df5" executionId="27e412c1-8157-45c6-83ad-17800eb72854" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aed13b2c-262a-03c1-351f-cca161871d2e" executionId="4f765b80-6353-4e2c-915f-fb4c6651edb4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f64b6fed-6500-8e88-8257-f3f0e703d03d" executionId="5040d464-cb65-4c76-9464-2616626ea57d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4ad0ffed-0277-2ee8-5633-814e7ca2265b" executionId="6eae7cb5-796c-4096-92e6-7203b72232dc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1dc13f6c-fed8-644e-2fda-7f8d9d11645e" executionId="eb490479-861e-4602-9b99-b2a7c4f91843" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fa989d09-4d29-033e-a691-ce11b14965a5" executionId="5746b43d-74f3-47f0-b5bd-1b477e1a0925" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="64667372-7785-62d8-9295-57cd2ebfc7a7" executionId="56cd6eae-5ac5-460e-98cb-8bf2712887ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="928b4530-2f70-467d-7fc2-565740358501" executionId="458129cc-06dd-4612-b51e-f7fe5d5fa2ab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="863ddb91-388e-49d5-1e8c-1746bdb93ed7" executionId="011e3f16-8ec0-4593-887b-96e189a5b6a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="03d351ba-88c1-7fe2-b09e-51c7c615b3cc" executionId="ef4201ba-f0a8-4674-9913-bade755d2ceb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6934b211-c797-d496-a6e3-95beb6abab3b" executionId="547243e1-64e1-437a-b732-d3b91bbc44c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e18d598b-6e72-0fe9-f26b-3d06fa0ef488" executionId="48db881f-dfb4-4139-a1a4-98f812495d3b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49f905b7-2729-ec3a-73d1-7f766540fbb6" executionId="4c37963d-17cd-4122-94b5-57dc72e0e0a7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c1dc7386-a289-2a43-ca7c-a9907f4128a9" executionId="7209ea64-10ac-4f4f-a369-7489c862d6f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a26db61-b273-9a01-bdc9-e9638c2215d1" executionId="a4a25160-a0fa-4594-80d4-8778bc69acda" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="502021e0-1ebf-e675-0eda-8668ea396e48" executionId="7288c4a9-2a73-4f65-9db9-6f282a68f199" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ddea7248-313d-f096-a543-593947955b28" executionId="22e3f959-8f9c-44a7-af66-660e7d18e077" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="44f35079-d059-a1a1-cc67-a215f0639d69" executionId="3c94ae3a-2350-43dd-ad1c-a1c1f03e2b31" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed45f407-76f1-efe1-5539-924a7b8a3b96" executionId="e4c950f9-d8e7-49ba-ac92-2704a0ebb955" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b0150c2d-7e64-59ad-9486-1c3ce44d9090" executionId="bed898a6-98fb-4d7c-b9ed-66c9e04455d6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3469b7d9-f2e6-2967-5df0-7bc30de34b83" executionId="bea77e10-3743-4ceb-8da7-638435384b43" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7cf6f8c8-e4da-636b-a2fd-8373e5f2c18b" executionId="c261b095-ab55-4145-9e03-327b913904cd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="868a3cec-638d-9e28-cfce-53ac3105558f" executionId="ca03b63c-b2f9-4d3d-936e-4b23a258dcb2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="160b15a1-4aec-726a-e54e-a6c36a8756e1" executionId="ba70adda-bede-4466-b388-ff4bfdc1d720" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="52aba770-0125-6d22-58a8-ab3ae6a42591" executionId="ee5f9a72-3106-4389-8fee-174d688853a6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="11a6f218-aa23-4161-0ac4-0a498a2f6034" executionId="ae860caa-4170-46a6-8f88-a385d941b62b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="264cd5c6-a4e2-d5ff-d135-e4f88a2529a2" executionId="29563241-2b7a-41fa-8e13-1fe1dfc8b578" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ac20535-0278-9442-7732-425349ea785b" executionId="dc6beca2-d964-42e7-a642-2359ad1a4b58" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ccdf408-52f5-e60e-0f8d-e8ca446ac0cc" executionId="f4370971-9152-4de5-93a4-2d8c7ec4d59d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd85adc2-d40c-9776-1165-db8e957025b8" executionId="68e9d9f3-43df-4ed0-86f1-f4842fa8d80f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="21543dbb-4272-a14c-cda7-4aff8dd53072" executionId="0e1ea650-85d4-4ef1-83f4-60f41c1f288c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8d57dd4e-d39e-4b3d-18eb-673b102ebba2" executionId="929ddb14-891c-4538-82e0-addc456f021e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b60587a9-bf4d-e481-4748-93dcadb46aed" executionId="34f743cd-cd51-430b-937d-f3aa3bc68a85" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27f580ae-6317-bd0d-796f-2b9270018a53" executionId="4d23ab04-f6b2-4239-a444-3fa633b7753c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="abac8ee2-e918-2aa9-4a84-b928bfc796e9" executionId="91fa32f6-123f-48cc-974d-55f8d92eafcf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77df07c4-cd2b-ee74-62e6-63d3b19bbf2c" executionId="ea7ba44b-a833-44c1-b89f-b59dbff036c0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d296caba-9c79-6147-27a2-b4464ab723d2" executionId="d0eabb53-b3f3-43e2-a44c-8337237e4ed6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1efaab11-b9e4-1998-2011-ad66e8cf1802" executionId="9b85c51a-4efd-416f-a3b3-862e7ea00bd4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c911a2e4-a72e-0838-2bb0-d8ae70ce57e2" executionId="25c4e5fb-968c-4ab5-9dc5-10ad215d96a9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="842095d0-a381-ab02-c323-b34ad0dc07f2" executionId="28fd4de1-1c72-4837-8f5b-7e3e9b7d8d0a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1c713cc-d0b4-faa4-ec0d-c0b13b9449a9" executionId="9a95decc-001c-45b2-a2e2-c1a2533fa12f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3631668e-100c-c00e-2f32-ca9ca70b0f89" executionId="7cd4049d-4654-4656-b12c-7bd6e86e0b4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae4bbadc-d58f-132c-7708-33d693cb8597" executionId="aec3529c-f93b-47d2-b3cc-99400b1bf56a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d2c231c0-51e4-00e2-703f-c1a283e4cda9" executionId="2865b910-99e2-4cb0-b00a-f5d492657067" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c9d22342-68af-6f2b-9225-d04dde4b4033" executionId="a14a4586-0be7-476b-b2a0-53c6ad5c7e6a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae77094f-cd68-e0b9-529e-11cc5d77fa40" executionId="9a5e0c45-5a60-4417-829a-ce5e1d120a5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c579684-6f50-051b-fbec-837d1c70eb7e" executionId="eee694df-c824-4137-90ed-3cfc14efa836" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c177594-daf2-f12c-22b9-6e1756881c46" executionId="0a83e540-78e1-48f3-a33f-d4bc98647dba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9d6359b4-c3e8-6c08-4062-845513e6a1a4" executionId="94f231ee-7e9f-4c71-b36c-f1e62c93cad2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e623abcf-d035-820d-d533-cba826ec3534" executionId="43686dd3-b1fd-4227-a394-64f05966a59b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3515468d-2a06-a106-4fe1-a0d265eeaeca" executionId="412370b8-7d46-4ea3-944b-1f29b8823f9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e5723b77-b8d3-f19d-627e-7e14829ae702" executionId="bbd0db66-b171-48c5-937e-36ef19649542" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f02af770-5725-45ac-c92b-93c8ffef437d" executionId="4cd871f3-2b8d-45dd-ab34-2250638311b5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f81f8e5-a084-9939-006e-87b583a28cc6" executionId="70fb20f2-93c7-4af1-9b75-7d9d3e7d6b01" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="41cd7e55-593f-9adf-ad9e-d0e2dfe10f3a" executionId="a88f042d-6363-464d-ab68-6169d42a2014" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="71b31e5e-a294-5c82-8cda-96afa1d33120" executionId="87df9ca0-550d-406a-9db7-87bc5b63c436" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ffe36e8-8fbb-bc28-7710-cff9d80631c5" executionId="22a40835-6ff3-46e4-9f59-0f6de2539877" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="71f06fff-8daf-ecab-97ba-da91159cc289" executionId="fc41107e-59fe-41bd-bf3b-51c0ff621070" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fdf1853c-e377-a4fe-8d82-1f9a08f84df1" executionId="db7937f2-cf7c-41cd-9f9c-c38b89e92bfe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d2f9b5e6-49a1-041e-52cf-a35ee3c324cd" executionId="726e90e9-2d4c-4ba6-90ba-507d489d4bbd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ddb1d513-7115-2d96-22fe-782ee4ac835e" executionId="c14b02dc-af35-4a79-abd5-2c11aa08ac33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="056e7bc8-972c-7c12-fb65-563a136c095b" executionId="1231dbb5-f64a-4f32-8e87-9977c0cdafc4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="09222f1f-c1d9-4415-dcf8-90b05ec55a12" executionId="778accbe-d5a2-4f67-b248-e1dcf68aebeb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1ebbc039-dcf5-bb95-acf3-e7dfd43a8804" executionId="71056378-c13b-4a88-8d43-5db548828b0d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aab37a21-4661-83e7-2342-0163b0b35423" executionId="f02d8f59-978d-43de-a0f3-76bf3a7ad71d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0aa85379-a9c7-4f21-fda1-6d63ae9071f1" executionId="c742abb0-c240-4b0e-9c09-377ba02b61ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53347c42-73e5-373c-5d2e-898331f0000e" executionId="5f340ac8-b5dc-40c0-8da3-c2ddbb1c3ec7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="48c28b74-a769-8c31-398c-45a63041f87c" executionId="7ad0c861-40ff-4ffc-b9cf-1a42ad1c76e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a628e807-15e2-021e-1aa2-7b980bd02ca0" executionId="32013774-6fda-4daf-a18c-7be1beca314d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e9872385-5a4e-dda9-0e25-bdff79815a2f" executionId="b924a072-357e-4355-a774-56d8c93521a9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fb60606d-cec0-82f5-b2bc-60166cdf57cb" executionId="3b68b209-a1fb-4d8a-a9d9-20f299450915" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d08e0394-7ad6-f60f-f408-82b1c54ceffa" executionId="a94db369-8b01-4f3b-a006-48ebb924c010" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0331db2-c707-a90c-6b5c-d14602440d1e" executionId="08f2d9e8-180d-461f-a1a3-1d8aabb37647" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f167bc0b-d75b-f008-2996-7556f366e06a" executionId="a94a4727-1d18-44cb-8076-76d34b55e982" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="da1fbd70-dd9b-803e-b84c-c50a6a07b17f" executionId="f6960101-057b-4c60-a90f-8f18b141d946" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="52158ebb-1869-2fd2-41dd-40e53a17bf0d" executionId="71bf202c-fe22-44a8-adc0-a57a86b2e84f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c883ccdf-8a0c-8384-cd66-4e12faa1ec2c" executionId="7cc5af00-cc6c-4035-b2b2-924d1e9ed8b3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eba72b38-8260-7cb6-1471-1c9cf588f496" executionId="5d18b21c-a53a-47db-83e5-4b716b914744" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="89b4b627-b683-5180-f0c2-595b6a88c034" executionId="49da87c3-6963-44be-928b-0d5b9d8074c9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="db2b69c6-d8c8-769e-ec27-0ea339860550" executionId="29cbf081-b76c-49f3-8e43-7d83734b73ac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3efb5d3d-7072-a56c-4a3a-e06c950ed4b1" executionId="e0375bac-93a5-4fb0-afb2-98e03da70c36" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6c03c3c9-dc70-856d-bcdb-d241181d0930" executionId="d51b9ca6-6f30-4f9a-bf35-177af1d84a95" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="274e3943-9e61-9b4d-fb31-5b33e5c45bd9" executionId="88cd900f-7549-49b9-8611-8fccee1de3d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b586a11-6d3a-3799-889b-9a413a168585" executionId="5f423003-9e65-4b05-8b71-ac64f4d968a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9ae1017-ce91-456e-fb0d-d33c05d0c488" executionId="48e0856d-3dbf-456d-bb6d-194ce6861873" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8201ce2e-e4e3-afce-3312-58a9731fa239" executionId="adee392e-220f-4924-8459-0a4c2b2bf115" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="529cc424-f0da-4def-dd66-bb280f3193d9" executionId="917f7506-a42e-40c1-9b9e-7431301c6aff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77f91d6a-6da7-0449-bff8-f94c0a3db1ff" executionId="09ec5343-e574-4487-b6dd-c209a75c22a6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec375bf2-8b27-0a2d-3603-03ee93d0cd28" executionId="170c7294-8a8b-44c8-b646-b1b71ac371ef" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c4e01d0-2099-4358-0a1b-f2a089a0fba5" executionId="8a2945c1-d796-4c8a-bf1d-695dc1e58370" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6f0553c8-abf0-0783-e116-bd9ecc7354ab" executionId="c62145bc-1704-4088-9427-a18b9086154d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53bc1628-11f3-3c3b-05cb-47b16a6d9d4b" executionId="97408c5a-e6b1-41b9-a86f-51600bd9ad89" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1760b0d1-1ee3-4472-2fa1-f56dd1e5bedf" executionId="511e1e2c-38a4-467e-8cdb-a880c2008265" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="171cae58-1142-09ec-0bec-37f972db7aed" executionId="26f9e5e9-f4c5-470b-ba0d-1ab678ea7b32" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="87b4c137-12d6-e08a-0616-0a0c7e541904" executionId="421ac468-88f3-4ca1-9cd1-e33441473836" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="80f714b7-3cf2-4245-5525-f455d6c9a322" executionId="45f9212b-5274-4799-a272-112ff5ccbd20" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7343500d-728b-2c52-4d57-346543928e2d" executionId="10c8016a-b993-4593-9fc6-f5dc00a3093e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="216fa6c0-e22b-85e6-5d3a-2b0ad0ec66a2" executionId="7d35719f-c7b6-4098-aa69-04fabdff5da2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="88ea683e-9766-0a38-0d85-f8319fe971d3" executionId="10767510-27c1-4eba-9de4-72ca12e631d9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="afc5c274-009d-448f-e0fc-bc2b0e4025f0" executionId="6ed9ea49-2656-4e19-af60-12674aaa5f31" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="89a98f48-a635-cce8-dbbc-a13ef749156f" executionId="54cdea6d-ae27-4928-a468-6f5a4741c676" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ca22b9d-149f-be4b-e447-e5feaef6bb82" executionId="3a37a6e4-d478-4faa-9cc1-d77683e2264c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="22b9f8cd-8879-1d7b-9c1c-6642e594ebd9" executionId="266fe524-789f-4a25-868e-f6ea38758615" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="87596738-5309-54c6-2668-51a025d16d61" executionId="fd31d2c4-06b1-4bd5-8ae3-8ab43d19f9de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eff63b3e-5fe4-e090-28a3-10975522c070" executionId="772239ca-94dc-4b1a-89e4-09a313b0f25a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d8e6601-32de-80b6-4741-1ee6448bc1ee" executionId="785bc223-95fc-42a6-adc8-c69f910926b1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1328f662-0aba-282d-cc57-bf9ecc283b3c" executionId="92d97a93-df8a-46c8-95ed-f16082644c6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="41d82e1f-da2b-1d11-568b-3bb9ebd052c2" executionId="727ffa30-f38b-42f9-b7e5-91503c5ce14d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="29ef816b-07ee-7da3-86c0-4f06f04ae48c" executionId="06f3ee60-9e09-4825-80f8-787367c4b611" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7097d409-7506-31dd-9920-992d990cc16f" executionId="18546f45-8065-462a-ae1d-d861ed20cd9f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="11d99925-1db5-2a65-c0e1-b7cde4dc55a1" executionId="e40dc596-7b8f-499c-8757-ef50e926ba39" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d5005810-ba10-5061-b2bb-b6816e38b312" executionId="458dead3-7d16-4d22-bb61-f8f33bd0d138" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a043c836-e3f7-6a70-b40f-23d1927c92ee" executionId="6005814d-d40b-4aa5-acb9-4fe9f7cf0ad3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bfe55cc1-2d4b-ac49-99f5-a5fd668b1793" executionId="1d7aff57-e344-474d-9d9d-271a65b2359d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7991c725-036c-c853-ff90-46ae1f53b750" executionId="c8f47473-3aa9-4677-a390-24ffa12cf23b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="82552452-b427-7c9c-c385-d07a63a9d3de" executionId="cf36a9e8-792c-45e1-a116-c423d562fbab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e21ee75f-f0f6-b686-0481-35399f16301f" executionId="bfa8ac8f-2e62-4796-8cff-824398d4e5b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="31f20ecb-f8a0-fee4-3115-c9729cf47d91" executionId="42d396b5-4893-4934-803e-6aa71d9aabf7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="95d41c29-a342-c017-833f-1ac6fbbf1ab4" executionId="ef444e82-7cd1-4bf2-a0b2-adc5875eae87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b75cb4ac-2e80-0174-86f4-e1bba4b9712e" executionId="ac6b20ba-8dd3-44fa-91e9-c7e39062c5b1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c0b40f5-fac1-2c23-1df9-70b3fb29e244" executionId="2f19ed03-15b1-4fb2-b6b7-31c500f0254e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4c5e4c3-ecb4-4678-0a45-0e075318543e" executionId="aaffc70b-e802-4602-bf02-57cfa200137a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e18d98c7-f7e0-917c-f980-a8eb4722eb9c" executionId="4bda7e07-28ff-4e8d-89f2-fa781882b9e4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ad942ba-294a-1c2c-a60c-4d14b26dc4ab" executionId="8adcfccd-ad28-45c3-aba8-e233376c1c7e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c99e9145-c524-cf03-398d-c687520a9fac" executionId="83252ad6-ed2f-4879-b6a6-607b087a13e6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20a8bf3c-7475-9033-7979-b7f3fdaf7096" executionId="be1c2315-3315-4ac5-9fe7-e758b644481a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3dfeb67b-6bf3-b2c6-4f52-56fc4e978a18" executionId="c96b59d1-8650-4ef7-b2f7-00361d8c2fd0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9edcfa64-9ea4-e361-84f6-31caee583639" executionId="645a13b0-c2ff-4568-857c-5976d0bd4f88" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2e04a2f6-03a6-6ea2-9247-f3a0b86341c9" executionId="b42bb701-7836-44dd-9dd8-ab78aa01c0d2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="265b4d01-b647-c37d-e88f-8e50daae8194" executionId="0955e0d2-fef0-434d-bf51-70269f0975e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="23ab1cd2-f50d-ef82-d459-cd1f12307c06" executionId="8c71f980-4e1e-4d73-aaed-f23d249dee38" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e7a284ac-8903-2278-2793-d88a9d443fb6" executionId="2aad5a84-4ffd-45a5-8653-af1c1915934c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2c487e8e-1bbb-e5a8-7ba3-8d5c8b9c45ac" executionId="b0d89e98-7307-42de-b2b5-318305d9a51f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="097821c9-d0a1-e795-b147-af0d785aa6ca" executionId="c6b719d3-3e6c-4110-95b5-7502f774ee5a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3f63fde-1195-51e6-f7e3-976ee2be3a83" executionId="339f1fe6-ea35-4785-a0c9-be16a01ba83d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="29626d6f-a10f-191a-0857-b5903edacc62" executionId="f23e6389-5823-4237-98ac-e1e2287a614f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9c71320e-a66c-ff16-1d61-e6d5af2fbe53" executionId="54b41379-462e-487d-bed2-011cb12be7b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5df56f6f-65cc-8522-84bb-ba75cd2ff790" executionId="969fd443-ab39-47ce-934e-ca7f8bb3deda" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c0df46a-8c72-0f01-06cb-5f9c0c65e2af" executionId="6b68fc06-cd9e-4d9a-b8f6-9cf0abc191f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a5f47be4-f5eb-67bd-5ab1-852c808a2d6c" executionId="be6c724c-ac37-4a40-8fce-5780a9cc0064" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="87a5d4bd-eebc-0866-87b8-773797b6ef79" executionId="4e46fe7c-56c7-4a2f-bd1a-fb4c91bb8cc9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="034860b2-d474-0b44-009e-e3eef2c70ef0" executionId="ec35a7b2-2a3a-4ca3-906c-729b79b20b03" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="03524cdd-bb61-2a2e-21c2-a7609f06c34b" executionId="54e4ea55-42a2-4a12-9b4c-9b6f657ea6f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ea509acf-3e16-781b-608e-f9e68cf0ca08" executionId="5138777e-c0f1-49dd-9bdc-237bbabcbae6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3f14de57-3cd9-0625-1c85-dfb92a697e9b" executionId="a661e742-2faa-4483-b403-3de09d22b15f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f593ce9-2961-dc8c-bedf-51a9f72813c0" executionId="5643f7eb-de04-45d1-9036-440d845e9e0f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eb2b232f-7bce-1b3d-8b4d-4643f2d56fe0" executionId="23c32239-b3aa-4416-91c0-48029e0533b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="562b7d7a-9d37-31e8-cf61-72dc7b7dfb9d" executionId="0fd936de-0f59-4e24-9de9-255345f252be" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0fb5b85c-7b66-c542-b180-5f124036e473" executionId="09cc9293-04f5-4f48-9741-6719cc3e8022" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d598b20f-fbee-cb34-7332-f5082420feec" executionId="b0ebb594-0f2f-4e2d-8cec-89bf364b274a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="681d49f3-c1a4-42c8-9889-e7acab7f6cc3" executionId="5a93b284-3120-436c-a7d4-6da134cdc688" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="216c1bbc-9875-a8dc-58f7-a0c1b5ff99c0" executionId="18e3fc05-d756-444d-bf7f-1788db5eaeae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30c2c3df-adb2-2c2a-77fb-57ba5562e534" executionId="0680be85-88a7-420d-9123-2e172413d461" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b36ad83d-4685-d1fb-9c3a-9343048e0826" executionId="be4e37c8-2ba4-43db-b525-ce3a707dfdf6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="213210d5-5665-9884-6fd5-360a8d8cfdb0" executionId="cb6c1ffa-35be-4261-9681-fc979dad0b4f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="54047076-96a8-79d9-5c84-1be1395deeb5" executionId="af6a4659-7a72-44fc-9788-87b49210759e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="edf0240d-f9e3-51a7-8f79-a47cab4f8c48" executionId="0eef92e6-48a9-4e25-a12e-68a5d41f6816" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="601f8e65-53ac-3c0a-d061-039ac6bad73b" executionId="fa1291dd-1ba6-4a88-808f-ecb9c8b290cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed790a87-7415-5b8f-8ec4-b3de7d168bd4" executionId="97f41824-f698-4245-941b-b59146420ff7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c18cd688-61b3-83e4-9506-62156136b95e" executionId="a60abcbd-cd66-4cf9-8de6-2a45aadd95bb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2332e7f4-f5a0-ed03-e0b7-1dca38c68689" executionId="a400a805-5cba-4c0a-8a06-dbc97df75008" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b51aaf2-2584-b6bb-c8bb-74e9df8cb2a3" executionId="8bfba817-41e9-48c0-a115-6cc527c38cc8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8da00938-b7a6-7e74-e6c8-73f1cfb92f43" executionId="8fe877c0-d24e-4dfb-8a86-9f3c54b944e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b9faca44-ca88-8bb4-04ff-622679980b9d" executionId="9c1fde8e-79d7-4f63-a447-27365b6110c1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dec45e98-f794-4534-d524-b21e73a91d95" executionId="4774e13f-facc-4c2c-926b-df6eee4c38c6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="959dd6a6-9c42-529a-bd21-cab456b87538" executionId="806fac9f-690a-4388-a198-649f72b354e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="09baf7eb-1f66-4f0a-5a47-ce02fc22802a" executionId="cc5a30f3-88a6-4610-867e-05a075d768e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="266e26f7-d379-a372-c268-d60745414997" executionId="4d2c9f4c-5664-4d7e-9621-11349a84e611" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5bc9da6d-d193-b559-6c06-46953d31d8e2" executionId="c1ef6b7a-56e2-4521-958a-d7ae909764e5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="61a8e662-3b6b-6228-a20a-007ad146ace5" executionId="8d939560-863b-4b0e-a1fc-9592f4ac56ca" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="82ac8ff4-38df-467b-7c0c-e3d067e7d7ea" executionId="0e7217a0-5d9c-4686-bacd-ccb2ba4b6ee1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b61ee699-dc23-d04e-d511-7583ed927e30" executionId="0368620f-294f-42ea-98d8-dd3c9670c584" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a4890a6-5826-2dad-66b6-0e7f21dce346" executionId="ea6196f7-b908-42c5-8de1-0c0c826a737c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e58e09d9-9c42-82b2-f4d1-7e5b8c979f92" executionId="7f4990b7-df33-4e73-988b-0a1bda135563" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f306b54-cf0b-9840-97dc-d6bf47446fb6" executionId="c2584d3b-0911-4d3f-96ca-2b0807cec2a1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2cb3167a-2758-019a-adfb-7be2e395844f" executionId="9f77cd16-302d-49d0-9928-46d4ad0c7ede" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b062c3f-aea2-121d-f54a-af5f544c5048" executionId="f99f9acc-765c-48c6-8dcc-e85c8ee992bc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="61454356-95a5-cff7-21fa-8eb79ed5699a" executionId="7c2f392d-d303-4650-9f1e-e1368d86f51a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a7e2a721-3563-39c5-7376-cae790c2c303" executionId="08e65856-971c-4999-8300-4fc286576729" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="de7190b1-5f48-e7fb-4be5-e2308f383708" executionId="d05ab85b-43bc-4b46-9143-f47973406867" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7ee4507d-118f-b2d7-5f30-4f1c8fdd4c92" executionId="d86eded5-5017-44ad-839f-a445b156f230" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d4a15018-5745-15be-4c96-67be687caedb" executionId="1fab2d70-2cce-47d4-8e51-73d36b29b939" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1fbf5e61-48e2-da54-a1e5-a22002bf2fa8" executionId="661d3686-2b52-4b16-b34b-9b230622eeac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="614b5d07-674a-972c-0e48-975e4f12588c" executionId="10dca6c8-54a4-4ba9-9eae-f0f5c78a3ae5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7e7b50e7-cfbb-195e-ca37-85a3961d42d5" executionId="22cdef69-af1a-4cc7-b580-265eb5372351" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7ef6fede-a1fa-e5e5-6844-ccaca7e8c4f1" executionId="725ff926-ea21-414f-9ba7-68bfb73ac195" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="42073682-43cd-d0be-fc55-9adebdb9be72" executionId="1740847d-0671-4cc2-be9d-8b95c8a4e3e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="597f1eb7-11ad-6d43-463f-4af998588ec3" executionId="b5a36835-5327-4d59-9daf-5e2c0008b219" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1b06e212-fb6a-fdcd-0c5e-0e85b90581b8" executionId="b887886e-523d-4c63-80e2-bd351106a301" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="959a9947-e742-b918-a0e5-cd19c2954198" executionId="6d9e0481-e09f-47de-acc0-522b10c31859" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f084e90f-268a-f2ef-e9b5-efc789c363b9" executionId="30d367a7-0194-4b92-974d-28b52e04ab39" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3b14af35-95b9-ece9-5dea-6485de2c6aae" executionId="0ecbf2f5-acb8-47d8-b22d-781398d1a9e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1b8411a2-14e7-881d-84eb-9d092460f368" executionId="8a803e19-b9b7-41ba-8b7e-096059d23853" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a99280ac-9cf1-3c25-0639-4e6a249d6c8e" executionId="eb871ca7-e5d8-455a-b806-9e6cb1c5f3f3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aee4fb23-4723-0c3f-81fe-46eb3a60092d" executionId="2841c4b5-00d9-4514-bafe-5419fbd36291" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1a5595fe-263d-88bb-9d14-61259bcd4a1e" executionId="a8238d38-cb9a-4495-ba90-2342ff041609" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f52dd0a5-813f-0ca3-d357-85306a6fdca2" executionId="f130e3e0-ea14-4691-8415-c9c285d2370e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a45e0ce-1968-c407-44ff-a6a9b78867fe" executionId="23f284f6-08bc-4467-b587-5819cf2e431e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="00b192c1-97a2-fed1-74b7-a377d279b13b" executionId="16081122-fce1-40e1-9e7d-53286be4082a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a2bb297-8ab8-bc9b-d295-4f3f0970ee91" executionId="40a37548-7308-42df-9faa-e4d58c6fb1d4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c99ebe3e-55d4-d07e-f9f5-854d05f2aafb" executionId="49ecd53b-3b66-4742-8af7-bd40f85853a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d5228018-3e22-aaf7-a40d-fda110134d29" executionId="757ba80e-d333-45a2-bf98-92ef37ebc563" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3aa0b42b-ee9a-aee1-eb13-70821f935a64" executionId="47072802-0fc5-4403-a6fd-f30181b7fca8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="46370188-f9de-3064-68f7-790dc7e77d2f" executionId="741297b7-76e6-4ab2-a3f0-66e1d13c4b01" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9e8b7538-7f5e-51df-66f5-f52588a562df" executionId="e117aa90-b0e4-45e0-bc0b-4105a3f40fa0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa54627f-1cae-13f1-3ead-5b3536e6a3e5" executionId="9a377287-def5-4c82-94f3-41a67d08a681" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1cf65927-c8c1-8594-1569-04eea56b6083" executionId="ee46d4d3-24f7-4dfc-a11b-f3167e79d6a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="79d17eac-87bf-0990-b186-23d023b73738" executionId="bdf575ef-c879-4a9f-ab03-bb684cf3d354" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5cdcdf43-8c7a-87dd-3541-11e8d901df78" executionId="ca3b8cf9-4923-49f4-a6d7-119c795c4ca0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ebb9df6d-2299-db14-a33b-d236a74b068d" executionId="8253af2c-452f-43e7-83c8-a2adcbcd74b1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0707f91-bdfa-2693-216b-8557e8e160d4" executionId="eedf90bd-0329-4604-9bdb-1df11e1f44ba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="25fd5efd-34f0-9b3f-2718-c2a053b48c56" executionId="d0dca4e9-3d68-481c-9136-09ff5230341c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3736d342-7e1d-842a-14d6-58f987c7f4d1" executionId="219a6c6d-597c-4514-b7c4-5a1006c4536f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76ea33fc-9a4e-cf1d-9f45-da6f63a037a4" executionId="fca96f5e-8294-4211-918a-fa23c0e4167c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77b4f4e0-8658-1e3c-feed-c54181211703" executionId="671bd3bd-86b0-4c02-9e7c-cb6262ceb463" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dc6960e2-8232-0490-f4d0-7c7fcda95854" executionId="934cc283-bb6a-4fab-ad7d-bbfa675842a1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7eb3b820-10db-a369-5a3e-183bc84aeda3" executionId="0c03bced-6a70-4a5b-9730-7afb7d6dd0b8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1a67b44-84e7-c6b0-cf36-814d395770ce" executionId="90623499-550f-45ad-8044-fb430d5e2ac1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="161713fc-8b09-2d3b-c38e-e9fe2925aa63" executionId="303b67eb-a0df-4624-a2c7-96d1122a4acd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fea6c937-7f33-5409-b331-dd4bb97f1e2a" executionId="5ac969eb-5536-4867-8302-e267a167638e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="675ba778-a08e-c48e-1f1c-2539cb263993" executionId="b7747dfa-bdf0-4277-b18f-c3d1b3447021" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d4fb723-f295-e7f1-9ebc-6e1541a4dde3" executionId="18b4e60d-11ca-48e5-bb92-c3b951a70d38" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ee78e767-37f8-6eb6-959e-e6eaa4994c47" executionId="59c69174-bf92-4b24-b35d-87ac35960367" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96b64768-99c3-5c99-ee94-4c6601d3166c" executionId="89355c4a-a696-40de-a61b-b91e209b32d1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="913fc06a-3d18-4dc6-99fe-d908a165a165" executionId="b56fa3c1-f308-4536-885b-a59724b86430" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5b7d8556-5bd7-da04-88b6-c99876456cb0" executionId="78e593ef-f752-4fe5-9ec2-bb2d2aec229e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bd7780fd-fa19-5965-0760-d807f8ea9946" executionId="5637b07b-b4c4-4e2e-9344-7acf7536c167" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77eb8b91-6863-70c7-ad80-7ccf88a77113" executionId="156f5038-45c8-4a0a-8c9b-2d98f08d041d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fef430fa-c061-a26e-3f13-368adddf7d35" executionId="4bef10b5-d1e5-46db-83b7-14739dd50926" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b891cedf-639a-f9a5-6551-ea9adae01ccd" executionId="0a2b8db2-3452-4192-8c13-f14367f76346" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9fde8896-f2de-f548-e144-15f1eb08814f" executionId="68ea0f93-a08f-4fd0-b293-ca847df677f2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0f69575f-a9c9-fc1f-dbde-e8fd2944d1b3" executionId="3338a079-9511-493f-878f-5a2b133ca345" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="349633e9-a9b7-3daf-748b-773508b0900f" executionId="9181c386-bf36-4303-9ca7-c9ab7bc0492e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b9078cc5-993f-a717-a283-1d131b07ea5c" executionId="2bedfef1-ceb9-4be9-9eb3-2c59fbb4b85c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="896b3124-2cfa-5348-05c9-35d2c9df9461" executionId="cf19c1a5-6a25-4193-a363-25c9b926b086" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="64a6915c-df53-c4b2-1c4c-4607840b4c95" executionId="9ab486e5-294b-4664-8c05-800f8d5389e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="34312caa-699f-8e86-c653-287d5b9cec05" executionId="9f7f1888-63f4-4b5b-ae63-04889e155eca" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="10ccb84c-844f-294d-791f-90d833ad20c6" executionId="29150b39-fce0-4f69-84e7-116e1c0543af" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8cc6dcb3-3ef8-8a08-91c6-7896afb29ea1" executionId="e25b0b6a-4e33-4218-bb4f-a720421e5c12" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b15165ff-2dab-597c-b73b-81c42759809a" executionId="f2d8909c-e588-44ac-98b1-b3aa7a3323b6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d483fbac-e797-3396-f5ca-7c37c7527fb8" executionId="30707f95-9f49-418b-99f7-5c2a58c85e14" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8e64c27a-ded5-a42b-b287-7e1c0c7d0a8f" executionId="6e82f2a1-0391-478e-b074-c928326a069e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="971197da-8fcb-7314-768d-6a68609e14ab" executionId="fb9fd778-4444-4823-bdaa-aea572690237" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c36a81be-ffce-9a9d-9db7-412027b94d46" executionId="7a990a7d-5815-482d-b176-d4ca622c2a1b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53119093-25a2-c291-7943-6ac8304fec36" executionId="fd6cd7a4-5a70-4ab8-bcbd-e1aad3b6f6b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5981b7eb-a63b-7a23-db45-c2f59252e836" executionId="0de34d0d-bae8-4649-9d42-e60874ef1a87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a09bf79-60b0-b03c-1713-ca10a247dd63" executionId="bddab4e6-b47d-4d46-809d-ea6f08b6e297" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5eada7fc-2acc-aea8-35b1-6fca73adf22a" executionId="2517aa33-fab1-44c2-b656-f9244e849a23" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b1513997-d316-7779-e7dc-251957007d9e" executionId="628800e1-ea9e-4436-a9e7-b458f740965a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5ce065dc-140e-8f97-0183-83ba61be2920" executionId="c231f0c0-aa8a-4bbe-bfa5-cc3ca1b1499a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4463ca8-d345-2ac8-d414-e2b722430e40" executionId="52215dcf-f036-487c-a496-eb012c855b63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d244013b-46db-30f8-5da4-71951c795b7a" executionId="1e5a9ef7-1e63-4b37-b1ce-5360f964173a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1a423eb0-3e54-e0c3-539d-079d0889efd7" executionId="c0b68023-70c2-4deb-99b9-f23e95f47bf4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5cac0706-8221-16ff-eeb5-64881d3c75ac" executionId="8e3452ad-b06b-472a-ae10-cba06a747d52" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ecf26e4-9e7a-f173-78c5-b406abf8d2ba" executionId="8039aa39-3ab3-4bfc-9ae4-89a5e5ff46f2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7152799f-ea99-d02c-7439-43b04cc6e5c4" executionId="8f33794c-21bb-42c2-9d7b-8e9ecbf27a9e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c050b12c-92dd-28b7-3fd8-dc62e7ca1abe" executionId="fc4dcd1a-d1b3-4392-bc66-56e58dd80ea8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0382289-48c3-472f-3928-e04a6a9f4469" executionId="f9713d21-b7d0-4616-aaa9-2d92ff2e4030" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="48d6c016-974d-2866-9cd5-62a3721cda10" executionId="6232dbb9-e2c2-44cd-9fae-668c346095c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="291856fc-8773-a015-6d4a-19d974076703" executionId="fd738c19-5caf-4490-afc0-e8c178d5ccf3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="62f4dac7-ae89-61a1-8d14-60ec4a844c5f" executionId="51dd2372-0407-4d72-b841-2200daf9000d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="172419dd-4cb2-9494-7052-bbcb2bd6ed7c" executionId="c1a94ceb-37eb-4036-b54c-b9f2465620ca" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="13980a52-f0d5-579c-9da4-f0b43777af47" executionId="b1891524-0e49-427f-bb24-569217040619" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9fd27d51-93a4-c66b-0cd3-5eafb740b272" executionId="ebb0c7b8-b9b7-482e-a32b-6b69d5c2d87d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e0780b9f-c970-79da-9305-7063b7f92062" executionId="b5c0cee1-a95d-4467-b0e7-cda0a4eac1e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c4593ebb-b6fa-d157-6f66-e7a3618757e5" executionId="dab2a53f-781d-41f1-a8ef-9b94c88aa0e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e663960c-b19c-864c-a04e-af8d7bcbd81b" executionId="445a9b7f-1637-46ac-a581-05772d10768a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f69a475-ef74-5756-fbad-a2b11b590740" executionId="34a9912e-6ef3-429c-aff1-83cd54aa6ea7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a78ab4f-801a-2685-8fa1-ce0ec28b1267" executionId="cb5a4761-ac26-43d2-9d7c-2269a928b829" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1395b97-7898-d7b6-38d7-ca96e604ce52" executionId="247e3557-d12e-4adb-993c-f65e3885abf8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4fac9da8-4ab0-f19a-d964-dcaf9b00eefe" executionId="6496dd51-46e6-416d-b29a-a37d0a1d785d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9046d1f2-834c-b5f1-8f16-d0c8e6104398" executionId="f05f4af3-9c29-4728-9490-6613ab838cd4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c39c131-25b3-e860-0ba6-b6490ac0651e" executionId="66b061c8-0f0f-46ae-ade2-722c91ed919e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5cb16de8-99a4-6d68-7230-11a54ec4c223" executionId="e8a63755-64da-4544-b046-28794656f50b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="85cd4429-fe6d-07f1-e8c6-1d980684e2c6" executionId="24305268-68a3-4087-861b-4564e515a803" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="336feeff-fece-cd62-3351-e18a873fa550" executionId="6439c4c6-9ebe-4450-8586-2e54ecab7283" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8b9dc158-1473-a110-ca88-0481151a1607" executionId="dc8f55ec-a47c-4059-880d-efbe532f07e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d2b824c9-8ccc-f6f4-47cf-89c1fcdb1b31" executionId="866fddde-8c93-4cda-b7dc-975735a3709c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ddc06bca-4f6c-fe7e-049f-57c5d1a664e5" executionId="4807bf4d-96c8-43d1-a0a6-5ffe959d533b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="259fe6f1-17fa-c141-d571-525279e760f8" executionId="3ca1caaf-f241-4595-a1cf-4b65e3b46c9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e27c294f-413c-5f33-2866-17e8ef91ff2c" executionId="7ac34b26-912c-4977-81a7-30df89a2b94e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc44fbf3-1471-b132-cdfd-f80810a48a89" executionId="b4d46d87-d51a-4686-8ebb-d00ec9422f8b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="780df155-9b20-b2b2-d16a-95572a1ee51d" executionId="ed0707f9-c5c1-4351-84e6-0c5c2190f424" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="142db06b-dad5-da50-ef51-8aa9a3cdcd86" executionId="1d022c6d-2b08-4990-9952-a0cfd23d98c6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1a3848da-39df-c0ac-228d-97af0597fa4d" executionId="f63541d7-7219-4a2c-acd5-eb82a0beb6d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7c4177d3-5fa0-aa1b-f899-b29b3d9e1993" executionId="57282b69-21a0-4cbc-864f-7210938b841f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="03d11e6a-d2eb-0a2e-a132-53405e1f1ab0" executionId="cf93fdb2-6a3f-4067-980b-8b873695889e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a26812aa-f7bc-c269-2128-a21cd8ec88d0" executionId="2b08545a-8efa-4746-8ea8-6fe1dc728f8e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="88518fd5-1a17-99e7-a229-e332018d42a7" executionId="9afda57f-d0b3-477b-98ee-ecba960413d4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8cc26fd9-a9f2-fa62-ab97-6b1e58f2dfbf" executionId="884c682d-735a-4b44-8f3f-5122297f4713" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7888396e-14d6-a05b-438f-fe45c5b15895" executionId="a374eacf-e40c-4bb3-a235-7f4b7bc72e9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7f2763da-ce2a-e81c-bd41-13ca9b126952" executionId="ff60cfaf-faef-43f5-b085-e1ebca444a4b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fc300ffa-3526-6696-fa1e-a4519a0553f0" executionId="4cd08231-bb92-4969-bf39-6583fb64a309" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="314e990f-64f0-4941-31b5-dbac9635f680" executionId="dabfeb3c-3a59-43df-af1c-ebebe0bd48bb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="11f58379-48af-3869-1f0c-25f45522dad8" executionId="d2ce684c-c35a-4e41-b2cb-d5f57c9d59ee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f0f053a5-9341-bcaf-3b14-af62c0ced1d5" executionId="8328d558-d927-42fc-bd9d-036b0178882f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3004acb1-93e4-0690-7cdb-481cc3232888" executionId="8facf74c-4782-47c7-9acd-58092627b1f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa533b89-5bef-5471-6f00-da9b74b118d1" executionId="80eec411-7a7e-4397-9bb0-37048fc8dce2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7da6bd95-0b57-6c67-9a9b-9040d6929f5f" executionId="caf6c81e-035b-4cc6-8caa-6e4bef5359cc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="517ac1a3-f405-5ba4-0de9-2fdcdfdb9717" executionId="774bc92b-64c8-414e-84c7-13b8a375d522" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="704a5629-4cd6-a984-892b-27444d492197" executionId="72818764-2917-4092-b80d-7d69816ebc4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2d805c2c-8c47-bb84-b2b0-19df4dcb8c16" executionId="4a7cdbf9-ed80-49ef-a837-fb7a345b29de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa841ef9-db63-c75c-6729-8f9ac725ae56" executionId="3dace802-1823-40b7-84bb-3d72295a4e26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f809033-a3af-8d92-e106-5608f63bb9a6" executionId="c2469c3f-e59a-404e-8f6a-bf199ee98f5a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d289b24c-fe5f-9382-cdac-c29da5cd6d0a" executionId="2d97658d-86f3-402b-b77c-5f42aade0b11" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b611c92a-8f28-e893-6032-4ca28e2e82c1" executionId="8b7950ae-2d90-4e46-aca8-d5f39be42961" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9374b079-aa6d-1c74-c345-7cc1d2bc42db" executionId="2d24e8d9-d5ff-429d-9093-000fd03d80eb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="552c4bb6-d2ca-e681-2192-ef38be6f1389" executionId="344f72b3-64d3-4633-9654-e5f470dc1750" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="208b18eb-01a2-d978-255f-cf5932305d29" executionId="e80314c0-38fa-4491-9410-0c07effef1d9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="16d5f37f-7cee-b9f0-33b2-400b1fec0376" executionId="c30a5a35-8624-4b4c-bdd1-a055af5cc30d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="22e69c94-7909-6b47-bca6-11f676145e1a" executionId="5b216011-83f4-4f88-a2be-c4e2083a3629" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3bdeef6-4676-079a-a19e-fe0427f5a315" executionId="66e962df-bb6d-487d-9c79-15e02a8a299b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="08ef5787-6f75-d434-e26a-949294aa0411" executionId="67e03309-6799-4491-84b2-8456d854db12" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="059d0acf-bb46-9682-7e97-02cadc6696b9" executionId="ec5006b7-01f5-4826-97a8-2d7e84e51c96" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7744ff3f-d7ac-7aa2-4bab-0d3c6ea395c4" executionId="4fac8b9f-2634-43f4-98c9-bba98014ea12" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="deccf647-0fab-b1b9-e228-e802eb3dde39" executionId="a54ca28f-856a-45dd-9407-0886a97fa3c2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d70a07d5-8a46-21fb-ca1a-d033e0fbb3e0" executionId="9f8712f2-2a12-46e7-8491-7397d5cd7ff8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f7e4b275-b6c9-06a9-5a5e-6701b060c6c6" executionId="0c19efd6-c44d-4eb0-aace-3790922421e5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="381e1d24-0a3b-7d94-0e6e-a09dc8472d09" executionId="b5d1f336-b001-4914-937e-32dcba0f41da" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c2199f2f-dde9-cd9a-7004-15fca31301e7" executionId="d5162776-bd97-4a96-a849-976bcf388f1c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="99ddd5a7-673e-d064-c1ff-d3812be81fd4" executionId="00490648-d17f-4c05-86b0-06478f9ee8d4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7ca898e7-39f5-3cfc-f60f-bc82cf3cdca0" executionId="b6b0d79e-5882-421e-9334-3930cd6919e4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2e969c0b-06f1-02a6-66cc-46997c1d2236" executionId="457561c7-e6b0-4035-a4e1-be7aed8f8b5b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a9fa4ae2-aaaa-b21c-9df7-c9b74e388bb0" executionId="f0ec425d-28be-418a-8188-2c9533dc05ae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ab6c7f41-0b74-7b91-a0c3-4638afd83fdd" executionId="9763aa9e-bf56-43b6-9416-44040a0c7c6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05b89b74-21c4-85ae-ec3a-0233f715e860" executionId="0c31c8cd-9525-41db-aed7-d5da3396018c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bd128498-dc85-7445-7977-58be309f9092" executionId="1886572c-0f6d-4f50-b11a-60fda4f4a9de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="92e2f593-1c16-e911-13b1-2097223330be" executionId="9a6f866f-2bb2-4da7-874d-1e849bbd4e29" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d82d115a-487c-cdd2-35d3-b89042c5d6b8" executionId="f245859a-af38-4e4e-86f2-8217ee4f0630" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8cd2421b-49d9-4c32-e188-ac30042b98a1" executionId="d08b756c-403c-4c88-8925-fe56b2e9944b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="97340da8-6228-03ba-0549-5bb32bcdad64" executionId="f4e71582-4dab-4705-bd7f-c7c60d538a2a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7855ae7e-4b65-5404-75ba-baa82a75afe4" executionId="13c4bb7e-4784-42fc-9051-38d5d675b467" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="097111ac-2fbd-cee5-d04b-c1558d7086c5" executionId="414085db-c6d7-4924-a0f8-7bfb175c5a23" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b3b1975-ae71-413d-410f-f1be3f6855ae" executionId="4efc3a4e-826a-44e7-bece-1773f152717d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="291b49c5-a11b-06c6-8921-59e3c8cc6041" executionId="b33b8d6b-2e37-46da-a07b-db3cb027995d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f52ff216-48b9-236f-d1ec-ac2720df6689" executionId="4058704b-5d56-4856-83f1-3db81cbaf6b3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78984977-a8b2-d459-e574-4d0225d18d94" executionId="928626a5-7c0b-4c3c-b024-db9237b838e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="af91c3c8-dea7-5346-2219-20fd8f8bbabf" executionId="cb479415-d8da-49df-bbd3-7e0d8cb9ff33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="678a9af5-35f2-f97c-2cfd-2c9e04eda840" executionId="8e79384f-37d4-4bbd-87ad-7b03b0648f94" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e5fe0420-47bd-0c88-9e28-06727e84fa24" executionId="4dd6158e-c04e-4fb9-84e2-c23e335ee894" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ca6919c-60eb-ad15-776a-060f72bf457b" executionId="03173822-40b8-48a9-8ecd-4600627ed53c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ba3ba26d-aa49-ab9a-a23c-c44fc8f5e966" executionId="b4cf49e1-fddd-4ef1-a382-5b47db3ca956" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="56d67bc1-e43f-8c0f-1ea1-007e833b9438" executionId="6d7d7857-77bf-45f2-9b24-f6f28e37f7eb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e15c8fc-9697-68ef-6fbb-4ece87e90dbf" executionId="fdb3dbad-f23d-4d22-8f96-8149ac985c59" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ab292012-e9ce-2c1c-9d0c-73ab9d04ddff" executionId="e1b2a0e2-63f5-49ae-9417-a3d343473a9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b460af32-d409-df7b-ac67-e1995d9bb65a" executionId="749881ae-19e0-4bfb-bd17-c61b5d8f72a7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cfaa4022-b1ab-f1f7-b91e-af54c2ed3329" executionId="090793d9-6df1-4cc5-b645-435b72b4be54" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5c5090f8-d0b5-cce1-cb2e-686e52fa7345" executionId="a1424dd1-37be-4f32-a166-d31678b41e18" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="31e1a5a9-16c9-7f73-1aeb-79b52988c74e" executionId="d0b85029-0a23-4289-b0a7-70f8b63f4677" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd63c204-e89d-2f23-fa32-c61bd07ead76" executionId="348cdecd-a4f9-461c-bda5-c6c677c65879" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4a411074-f5cf-cd96-13a0-a22dbb268663" executionId="1fd3ddd9-544a-4412-b0dc-6fcb2e3401a1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d8cfe6df-e428-afca-9ab7-529f9c70a7d7" executionId="c7cfb523-ba36-4311-ad2a-d7efaad137da" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e599713f-6235-6af3-800d-a3c888f8e708" executionId="66918264-a21a-4c80-8cc5-8f9f3b7192e3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="08aea83b-9c36-de19-b36d-9102753e46f0" executionId="432deb37-723d-4337-a518-419a8194d430" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b6764b4f-bb6d-c8f9-f1eb-4a4ef88f7d7e" executionId="7af4328a-583f-4336-9a99-27f8c8e38b03" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca9c210d-4c66-2c5b-5cfb-a3e364d4e133" executionId="efa890f2-5571-4276-9fe8-2072be18e5a3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="58299824-e1ca-02a8-3545-4af1f994886c" executionId="6a5b0d8c-2f0e-4bd9-a94c-631c0d8e2972" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f8e735d7-3425-7e20-d14b-ae5b8dee262f" executionId="49b714e0-10a1-46dd-928e-ec942d788994" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="91c35acb-7e8a-3fcd-1d0a-700aa28b7566" executionId="7d3e2ac3-3108-412c-9c18-5bda54ab9229" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b6eb170-79f4-8d79-56f6-fed63612da74" executionId="87203082-9772-435d-b523-685ddfeae23a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="132b1293-2168-95e5-3a3a-c2f02270ba37" executionId="b9a264f6-86d8-4586-a8a8-8a9219963a83" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e23181f9-9b96-6d9a-0775-33bf1f31b529" executionId="1dd6a66b-8030-45b4-87dc-8377a4a4e79a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b40bce5b-06b4-17b0-07dd-736c7215ad04" executionId="56897cf2-6d56-473e-b7e6-50499b339443" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="72796d72-d947-2a45-ebf8-ced6db4cecb4" executionId="b91ee9ea-d57d-48cf-b5ee-34410c60e238" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ac785512-8d50-0847-cea8-e321d4a50ec5" executionId="b55e10df-168f-46ef-be8d-cf342b367deb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5575e3d6-c86e-0aee-1bc3-8d9a4a92d138" executionId="a116216b-973a-4738-a7cf-ec49a2708832" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45c49b25-3cb2-3582-614e-1db47dc7fff5" executionId="a897991f-ce9c-4dc2-aafa-33076ee7ca60" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1dc99b8c-bd8c-45f1-3917-7acaacea205c" executionId="5bfc60aa-533b-42f0-a76e-e599ffef9e1b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2b29dcd7-b4dc-bb3f-18e6-3fdea6b02239" executionId="4c479cf9-9ee9-47ad-8fe8-cd8e6551731f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a7e4c28-84ca-448a-9dcc-738a2da75705" executionId="117ffe49-52e8-4047-8942-f6846000c508" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="822d1b67-f4ea-4bf1-1b8b-06e2c1b35848" executionId="b4de0a22-b57f-4705-8c29-dda45af0643f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c319b7e-07dd-ad3a-692c-1a1c52fbe121" executionId="018e1bf6-7347-4b7c-80b9-afce02f3910a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="18be096a-ecef-f518-7ce8-8b81048ff452" executionId="fc7e3def-c941-411f-844c-72ab1b69ee38" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ebad54cf-5d79-398d-b8f0-88418703d4d3" executionId="75514368-5c6e-490f-b24e-c2e41b449d27" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2cffeeeb-882b-c499-e64b-3c6ab7d7742d" executionId="9cbcd4f6-3483-48ba-8eb8-3bc93dd7960c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dd4b69a9-9e19-cd79-e706-edabf76e54ee" executionId="768f4f6e-a8fd-44e4-804f-a37fc864deb2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30ab9d03-f43d-9e12-3ec6-849812e563d9" executionId="87ce7780-93d6-463a-80d5-746d9c856799" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0a0f0fef-9cab-9e68-1d66-78527db6b4ed" executionId="eae0d3ac-6a25-4d2f-bd96-3d6d75c9de0e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa1341f2-f9dc-17ac-3501-7b476cca44ef" executionId="ba54892a-9b52-459c-a8a5-3ecd0e712d2c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="72e70e69-55c9-381f-219c-1fe3080a24ed" executionId="f81678c0-1212-4d11-85a6-3d0b25b2a4b4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1f840c3-3bca-0f5e-b99f-99c15c6b0d9e" executionId="d753a977-39af-4d1f-ba2d-10c5d77da11a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d936d2ee-b6c4-9d7f-7352-933e65fe2ff3" executionId="f11aa8d3-7865-4404-9e99-383346768f63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc32601a-4724-dbc7-6a27-a275859df2f3" executionId="e56bcea7-33b8-42dc-bbac-81a3b853774e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d572a5f6-650b-0db8-4128-7d1c918c19cd" executionId="cfeb710e-22b8-4f7d-949e-8c2bf21f476b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4355136b-fc60-b581-4028-86821b1bc251" executionId="942573fa-b204-438c-9c35-848a5a162c72" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="557535c4-0a1e-a22b-6af6-c0d534facfda" executionId="8531d479-8947-40b0-92e9-71c4b642edd3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81294266-c252-bcab-99f8-9b4fb844e549" executionId="448a74cd-d1d7-44b7-b805-91039273ae94" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9ea8c10-39f1-6b8c-d242-e390b7c20e00" executionId="81a81229-f098-4da7-a108-8169268c8789" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d7b81827-7844-6e9d-90a5-f680e4cc02a1" executionId="0985c6cf-f1af-45b1-bd52-a2d91bc3d5af" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cdf8ea98-3530-0172-41be-d4aab5522b79" executionId="6e14317c-947f-4138-9d16-6a3111482d84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cc63f932-80a9-0da7-11ba-8fe22eab95fe" executionId="6ad6dab4-221a-46e0-8ba1-aa20449ce2a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd5ab80b-da07-2bbc-74cd-bad8e2e224e3" executionId="1f1532a2-7456-4f81-b2ad-b08e95f15e9b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f62b3f6f-456c-5196-6346-6beb1fb6f47d" executionId="21578f51-93bf-433b-a0b1-d668c6848713" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a6c4fe7f-ee91-bbfa-0125-2f055a1a66d2" executionId="bcee05e8-1542-4a3f-9186-cb278aaaef18" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0a04a77c-0eb2-bdb8-77ff-0527aa34ca20" executionId="3d566780-9eba-41a8-8087-24dd41c9c415" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="233c0c1c-27f9-545b-d124-24ee06773ff7" executionId="4a96229c-a29f-4607-805a-7af2019c3873" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eff3441d-74fa-e9a0-5be7-63b0c905a70e" executionId="6528a952-5782-413f-b1a9-1db09fa4a904" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa78429c-6dd6-d58f-4ea3-3d4eb1819341" executionId="42b12769-980d-4b67-a26e-88033af669c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cf315c21-638c-e374-3fa3-1d62def2beca" executionId="128e987f-700f-44bd-a334-8c54d6289938" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="95ac5e3f-49b6-7f45-2bd4-b07476d0cf69" executionId="289fc099-a23b-42c5-a212-329066e2c552" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5041a295-0876-44bc-8958-3b501f8b6cb4" executionId="936e0e6c-9bdb-4ff5-8ab2-74fc69b28fe1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3d359916-4a96-2c79-b7bb-dfd62b894734" executionId="448ba159-ca8c-4996-b4cf-b10d9577a399" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2bf57e75-3dec-8bad-8922-ab5af265505d" executionId="ec89054d-1c4e-47cb-8942-e0a03f9ff8c9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="089b42c6-cf41-e615-a360-f517fc6d8347" executionId="56381110-32e8-46b6-b335-96ff903c187d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bae34b8b-78bb-0f1e-0361-c3c609e24758" executionId="65157035-12c4-44ff-b966-cc9acd9b99ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e00d72cd-5b0b-9f38-8328-a5447b99e6ff" executionId="80db9d88-ec13-4ce0-ac76-c7205aa97e67" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="008e5bec-09cc-0702-f1b4-d8da880f3bff" executionId="ef5a66f8-5d48-4b43-8319-89698472674a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1d18b1cc-1939-d140-a85c-fa67d1e220ea" executionId="73847e26-2d32-4180-aeef-71d7efd996aa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6da058a8-f2e7-d263-4f5d-51031d7d11ec" executionId="08efd52a-0f98-4979-958d-aff2211c9682" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c2673843-9828-fcb4-b4b2-b7a8c6ee8c75" executionId="99838299-0ee7-4acd-a42f-9a652505edde" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="609894d0-8d5d-7572-06f7-869c73c0e9fe" executionId="ce4e0d27-104a-40d3-aa33-69eb0613dde1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="59133c35-5662-01b8-57f4-d7c5830c45e1" executionId="234a282a-9ffd-4039-a2db-4bbf9ab947a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5a548450-1ff0-bcf7-46cc-5073378951c1" executionId="bd2c5868-c59f-4099-a6b0-f7f3c55bc23c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ec61729-7255-7d5f-a2f2-9beef7ff66a9" executionId="514c51d3-d16e-4e22-b344-ba9593f55518" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5fa3826b-6151-6eed-45bd-b43f22cb5dc4" executionId="04ae5f29-f297-4538-bdf6-3026071578fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96bbd594-afa6-ecde-a7c6-ac3b2bf69ea4" executionId="2e641203-6ef2-4457-8038-7e30a27bfca0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="22b971ac-7cfd-128d-ec05-0e2ab786d957" executionId="32b174b8-e73c-4a0f-942f-24a5d46f9e08" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f3a0f66-fa06-365c-d71e-17a0544e3bb4" executionId="9a0a5ad0-e96d-409e-ac77-122cf61abfbe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0e56e6d-6f86-8a13-4d4b-8acc621ef073" executionId="6cf557fc-e5d7-4139-af58-1e9579b19346" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7d10f76c-da18-5b57-f56d-734f311a48b6" executionId="5e4e0ca8-9ac0-4000-9d77-f6fffbaacffe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae0b0bf6-279f-814c-49ee-4e18b40409d5" executionId="c0edb617-3036-4e82-9663-fb2a6d6e7c5c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1ad78481-33e6-7d27-ec20-d6d31531bdef" executionId="8d626764-0010-4cb8-8b4e-b8c9b7f2a4c7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="276d0901-308c-3aa9-b6df-2f7c981cbee9" executionId="64a89db5-bb43-429a-8941-e648584a1d55" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2168f957-a1f3-93bc-ebaf-6190cde8531d" executionId="a13a77fd-fb4b-484f-a060-fc57ee3f982f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45ae910d-9968-b23e-8c68-f02256bfc65d" executionId="339232a0-e844-4aec-ba6f-30b52ab47480" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="75110cfd-aae7-86e5-dc47-16f86b65a3be" executionId="46836a13-d2ba-4b9c-8ebd-f25521b20448" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="10d482f8-f8b8-3034-8eb1-3c583cdb999c" executionId="f89cde31-c639-446e-86cb-1e306c8dcaaf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="84dd30f8-3a1b-bfc4-3456-d36da061938d" executionId="1cb44a9c-d82a-48e7-9b7b-364bf5dde151" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="02579369-1b2c-ab75-c447-d81b4f2db692" executionId="e3f1a101-3faa-4119-889b-a87512881a4e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c9e79aad-8881-095e-7bcc-3a4ddb4c82a0" executionId="e8db984b-1e97-4598-83d2-25c920bca02d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="030a17cd-b01e-119f-cda1-6268b8ff1f39" executionId="e69a8926-5875-48dd-8b85-4a08349cf8a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="735ac887-e916-5ba5-f56c-7180c693e802" executionId="45b54438-64f7-4e4d-8de5-98998d0cd809" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b33c6a45-e283-9138-9bb1-f8306a5bd1bb" executionId="b7a11cb6-2b32-4d86-b383-88b59a94f9a7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83fee536-07e0-00c9-afd6-f5a6016883a2" executionId="c9ef5923-089d-4fac-919f-45174d43c80d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4a6156e3-eb36-b3f6-d133-0992eea8857c" executionId="4d2ce3a7-b53b-4ca3-940a-d81fd4fe9c06" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f7d7215-65d5-4d25-e282-0e8892955b15" executionId="585fa780-998e-4ee2-8e05-ea6c0cc0c27d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e78c3666-405f-6998-272c-4e3f18482072" executionId="e3220856-a5a0-4b42-92a2-15f70ddac8f1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="90d1ee4d-c446-3041-ec9e-d98300634b7e" executionId="81ba3fd5-9215-4cbb-b9e5-5af95b82549c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="359e89a8-1828-241f-cc5f-821a3c7f2480" executionId="b2f3c165-e367-4d19-b04e-ddee0f533578" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fe723703-7572-54b0-3474-b5d2606442ec" executionId="d24be1ef-910f-4b25-a2b7-cd189ab15b87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="966f28aa-b87e-6ac2-c900-9d582c273d12" executionId="552b2e80-74c0-46f1-b82e-b63f71e6521c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c54e6d19-4b1c-86f6-0d62-69fdf8d7bfc4" executionId="19ea8a8c-2674-4dc5-8e4c-0c83ad95a9b8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="77bdb364-2e94-f7c1-91b4-9a68d48ca25f" executionId="482d9fe8-dda3-41cf-9aa1-25165addd0e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c31e3282-5723-ff89-1fa7-2e1e99875a2a" executionId="88e3b582-711a-4ca0-a15b-d9b0f09290ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c15743be-2054-dc80-8348-226c8096722c" executionId="a002684e-f232-4e1c-873f-e45bdb8cd778" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d7f68091-ac89-0646-0c4c-f4e3da416ec5" executionId="8f6809ba-044c-4cd1-9096-f1848b98fcb5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="098e9c73-ca9a-3ee4-e7f1-767cec719c47" executionId="6a8f7d65-455d-44e9-9a4b-60fc0526c067" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="338893e4-1814-693c-d51f-67b660629087" executionId="448ecbd7-bcbf-494b-b318-27aefec992a9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2cd6d40b-76ea-ca93-f09f-9c8892a78cd7" executionId="1e7f2799-a12e-463d-a948-7ac1cbe6a21f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30614867-9fa2-4396-278d-119b26f828af" executionId="316f97e9-bb87-4dc0-a73f-86582d59f7f8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4c7995db-15bd-3e77-7b92-651c88f6a7cd" executionId="5f26064b-efb5-4f4f-ad69-e34fb89dbf64" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="91d47562-8832-e2e4-f715-1755a2f4f7bc" executionId="27365861-e828-4c22-9af2-64a55f74472d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="28d5c8a7-4ffd-56d3-53cf-33b3b80ec1b8" executionId="546b4229-4ed3-4be7-8d67-952245713ed5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="61fbb03e-4a30-41be-22c2-c7721122c7e1" executionId="edd0bbb9-2fa7-4b33-a253-81686873c0e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e4671126-e6cf-ff73-46d1-7764e57406b8" executionId="8e70fd03-4025-4d2f-89f4-793998d6fa6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2af31fc0-d7d1-0c9d-28ad-47e73c1f7d9e" executionId="7ba49bb0-5f36-4b99-961f-d3c4dd348b40" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3942ec0b-4c15-50e6-30d8-c1cd036edcad" executionId="a1b0b9b4-63df-4548-8c9c-62517781b7aa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f610318f-db7d-5b4b-b4ce-71af0ac6f6da" executionId="d790f94a-67fc-4e3f-ac58-319538e9c9de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9860baa1-af05-9206-7968-fea126a8aefb" executionId="0e2e0bf9-72b8-423a-9b4f-7a6e5f521f3f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e2799fb3-ce7d-c7f3-6230-83c767aa3945" executionId="02195c09-7bf6-41b4-920a-10bcf67166ae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="484e1c5b-74b9-a825-2ce3-6fde92a5c63f" executionId="852bf13d-d244-4696-accb-6ebc047a66d0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="642bd812-134b-cd6b-46c0-17a30ad10d0f" executionId="dc5798df-8257-4ecc-9cfc-6c12163f6cb1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0d4cf52e-5d8a-9211-f817-f4b8f17842d3" executionId="5a2ceec8-657e-45fa-933f-3abdc844ac49" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="82c5474d-88a4-d245-4e10-5f0105db7747" executionId="27d5ef7a-4b75-4521-bc91-a9d0163e77b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b26b3f50-d17e-27bf-d889-79f48876ce7f" executionId="446e3281-6d73-4a5a-86f2-c9d8cd248849" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="37b6707e-37dd-db99-7038-c9cee28f7fd8" executionId="be6e4c1e-f075-4115-a2e9-8226669993e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1568b428-2c9e-4c7a-6c6f-4762a62e88ef" executionId="ddf47024-4d3b-4181-8a42-37242fb15ee2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="34a8b516-11fb-b76f-8e00-a516f684748d" executionId="bbb43410-7367-48c0-b7bc-a3a9c4238507" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65f9fcae-4346-b156-f4a1-ff3dbe5e5600" executionId="fcebf243-e2de-4e24-895f-ab37875d8c46" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa14bfae-7e79-5d1c-68d4-fe90d986debc" executionId="9602af1c-f2df-4309-98c7-87e7bc3a75c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="66cb65d1-1f9c-006d-e574-286af95ae5e9" executionId="f36534d6-84e3-46e2-8044-08c09f77136c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="70ab7756-84e9-25d3-c607-4ab802f85f6b" executionId="17877ab4-4722-4803-a544-0ea7437ac5a5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="32d222d0-55aa-64e4-e060-7ca36447ea37" executionId="dbfa00ca-4841-4719-a794-f6fafdf9baf0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e742a83e-3ba0-dd6b-07fe-16f6159c5106" executionId="72e817c8-1c1a-45bb-9a64-7f40898a2615" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="723ce79d-ca13-a4c5-fb2f-29666ac912d5" executionId="2abe131c-0d2c-4125-ad75-0a4c1a2cffd0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7f582eb7-fe6c-6104-a26d-69fd564b233a" executionId="533c7fa1-2e9e-4cb1-9bc1-ef47f7f5efd7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="775b2241-ddf5-bb27-6e87-1d523763137e" executionId="d744790d-3559-4433-8b29-6ca89454e900" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ba52c88-ce82-6444-4595-423daa8a3ea8" executionId="140c70f5-d54d-425d-807b-98b6eed81c03" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e22a33f9-9dcd-81d7-be49-dea324035808" executionId="ab257cd0-9bd5-4b95-a5f3-b7756534a410" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8e8da24e-3507-ea7c-fb40-e13a27032e82" executionId="f950b979-d7be-456a-8e68-348091c3ce30" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f3f3882d-6364-2bf1-2b20-653f20ab749a" executionId="5967592e-e5e9-42ba-aff2-60e3512faf44" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="feb287eb-d373-ddc9-76bc-26e4362d8643" executionId="f126c31b-1bfd-471e-9c33-e6de765a72e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2d370ee2-5ce0-563d-6806-116132fb1472" executionId="8792c7da-43ea-4729-b382-4a3500bd06bc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e06de842-6fec-2f15-f145-2f83acda7674" executionId="f7ac0dfe-a087-43eb-abec-f5608901552c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cecb7428-839f-83fe-3c50-23f6cddf3385" executionId="ffea4620-aefc-466a-8372-b25812e47db0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f1d17f5-ecee-b3d7-6dbc-5235b44bfdc2" executionId="71e3b1dc-7bd8-43cb-88ce-bfd00cb5e481" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="04f96f4a-920b-e400-c28e-c29aaf25d2de" executionId="861bad28-cdc4-468f-9b13-aa92be6a251b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="89e9c742-8d2a-3adb-6a7a-5cfb76421629" executionId="fad4e562-1bfe-4443-8f11-39d35fe04aa1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b8b17862-840a-8586-2c0f-d94215b836ed" executionId="9ee6ca8a-b82f-42e1-b76b-22ceecdd5a16" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a12dee9-b4c2-8dc6-d860-16a66221ceb0" executionId="150073e9-396c-4025-a929-772bca7b424f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c7a70460-1cf0-d41d-42af-693bc4135ef7" executionId="217a89d9-4d3a-4a24-a2af-cec1a7610381" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2848bd4-6ff4-2768-0a69-f07c12fc819b" executionId="2c4bf9ed-5fff-444a-a3dc-236a60054026" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6ebdbbad-88a9-ff27-827f-e9056a0ff6b5" executionId="6251448d-ea87-40c5-af2b-9f09d812a2f0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f6ee8e72-5780-e6ee-044e-bc3807521094" executionId="28a46f14-1446-490e-b8c6-00270dd2acc4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b752a33c-2442-cf1f-5a6c-74ddeda6d07e" executionId="8852a762-5a97-4855-8322-9b559febb177" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="19c03472-9658-4f4e-57b6-828fd9151807" executionId="ad0774ff-38ce-49ec-93a8-44aa76b11a6d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="87c70220-aa35-8862-9293-cc8f5599d321" executionId="b2766108-dcd7-43f6-9fdf-37a017feb487" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="35bccceb-f6ee-5b65-75ff-9af3618a8ffb" executionId="c629b441-2850-4b98-b358-f35bf3e5f80b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="01cb9f57-d5b2-1d4d-5ca0-719caf9f76eb" executionId="280ee611-0f19-4c01-a587-375324ff8704" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ba5a4899-b217-b9d3-034a-d38d020a2947" executionId="bafdca4a-a8e3-4291-9e69-af013129b186" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0a11025d-0bea-6951-a03b-df5a9b0101b1" executionId="292f59e1-ac43-4c2b-8216-145d3aa0a5e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3ff0599-7dc1-c225-76b1-8a0a351f95a7" executionId="7074feca-94d0-4875-9b37-984e39c18438" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a2f26304-370a-5119-443e-d33906fb2fb2" executionId="961ca922-6770-4b83-8280-46de0c022fae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3a2417fc-e555-e259-ab1d-9374da335c4d" executionId="1b4867d3-5667-48c0-b711-e3b225603b9d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4a195c3-cd67-dbe5-70e8-8755254e7ff9" executionId="3f4759a8-9fc0-4a1b-b449-e300b46ed012" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96dab6e3-da35-a803-042c-4325f95f86ca" executionId="0dc2bca2-c922-482b-980a-fb6c1ec80d8d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ab49996b-01ad-5852-f2d2-49adf4519303" executionId="6412cbc1-fbbc-42a2-a047-651adda1fadb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f7e6a6b9-506b-36e9-7cf7-356d56158f02" executionId="b4a8aa53-5f5e-472a-b98f-3dc0f55d704c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="578f0a1c-72ba-521f-6391-2a5eaa512e52" executionId="59f3d97f-3d6a-450e-abc9-8c3fb83b2643" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd43354c-47ad-4eb3-50c3-8536028c0043" executionId="60beca17-69a6-4187-b4f9-cbab13918082" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="95be8499-1297-e662-0746-d1528520b0ca" executionId="99947624-c3d9-4d1a-8f59-c6349ea9f290" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c4dc95ea-8491-9ee1-a641-918b4c2e825c" executionId="089ef525-adf0-44b9-b03d-2e6cd16fd54d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca1cc6d5-b6de-95ce-4799-464d81e5c7be" executionId="67ceb583-f40c-4a7f-bb8c-5fea69d29b87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45147d28-5223-17c0-ea05-046316f12876" executionId="a6a0f28c-55d6-4467-b2ce-a5e5b565297f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dfc473d2-9790-122a-6e9f-6f9fb0a017e4" executionId="a1cd850a-2f04-4678-8664-85c73bbecfff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e0abd77-4152-a942-c224-003087419233" executionId="c16166e6-f86f-44df-9bee-bc8da9f49723" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="328553af-4061-64e4-0c38-5993242e9563" executionId="6f38f540-4e58-4017-9e7a-bbfb4ddff8a0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b8992405-f960-0387-8c6c-a5bd8a30f5c1" executionId="2e38b279-eb73-49f8-ab7e-c3c58f533b66" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ade64053-e0b2-d3a3-9c98-8d8104dee21c" executionId="07705f98-22ed-4ab0-bd28-911772c7126b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5631ac32-5d4d-8b55-1186-f0c8e79c1039" executionId="98e72a32-f297-4593-ba21-f3b43c2d49c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0e193da8-f513-fe5b-6683-986a53d5a600" executionId="a7727ff4-2241-4953-a8ef-609e228991f3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="73878df9-fe25-07f0-683c-760b6002cb56" executionId="f026340f-ea54-40cf-abc7-7c9b87f9a88e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="69a52391-7984-d589-1a5c-55989b0fa8d8" executionId="4f519fd9-6a65-481c-a7fe-ed16bba79b37" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05b162b6-0513-a4c2-c5f5-bbeb05f0bd0d" executionId="f6f42f87-b46b-4404-ad59-ddbe0688617e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2391bf4a-d116-4eb9-46c6-90f3fac542f3" executionId="4512b8b4-487f-47f2-a4d5-7b57d8ebe2b5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6be46e58-c170-5d86-9f80-e66c6f561ea7" executionId="3dd8bf00-0f5c-4b55-9c7e-5dcf5b9b35c3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e7f7ee0b-3938-3ee5-ede0-d7640679835a" executionId="aea38743-8ab7-4cda-8d94-61716a5389b4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aede5d77-2095-52bb-874b-38965070d284" executionId="f6cb6538-193d-4bbe-8358-e6279a04a33d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c70f165-7f29-08c3-7ce6-950772949299" executionId="03f1b56b-4c50-4326-8d57-83c56143d0cf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9abfa4fa-0966-7acc-8fba-41269e486f0a" executionId="a372b4ce-0c92-4895-9afe-87eb89b706fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c1cc4239-760c-473e-b0c2-75fdf0e4736b" executionId="c8c6e413-0556-4963-bac4-167f9a26eea4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4193d59-1aa0-0143-e9bf-4542f385da99" executionId="804793f8-676f-4d59-b7db-8aae4857a9b4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0679c05f-ad28-32ec-fb44-20ec880c7756" executionId="9737be4c-8d19-4fcd-a629-974e916c99fe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e2df7a59-6731-77b9-a220-912f28558581" executionId="b818f708-d048-4738-8a3c-c636ec36f26a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e0c3c976-0fd6-a531-96df-9b28664877ba" executionId="eaaa9578-8e6b-4b0d-8b87-7ef14b7ceb6e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2fd8f20-bb30-555a-b394-2f4330258aa6" executionId="43ed0eff-c492-4175-9451-d90be134ea45" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a684207d-6916-af8f-2310-6018fac5d443" executionId="c2942bd8-8f78-46e3-846e-1a51f7236940" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="61079c10-1e66-7a51-b44f-f81fba0c2f8e" executionId="e10a4076-ef6e-407c-bd0d-daf2728bcdc8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6134dbac-1e64-cb59-e280-d1c8c56cd72b" executionId="52d5363c-267b-4051-bf7d-cd50ef86b065" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3774045-3f96-cb80-56d7-1af371ee4f2f" executionId="83f802f6-853f-4dbf-b6da-29a1ab49f722" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ddc396e-9c48-d3e0-9b59-9cbded94a347" executionId="8f15fda0-e438-4e19-a338-f5d6dfa86ccd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3f208dc4-93b2-3998-6ffe-e403c2dfe9a7" executionId="ff66941e-54fa-45e6-9bb8-fa8c218dbd5a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="63f5b22f-c1e1-7d33-3341-e96a68b4a065" executionId="21ac0972-8811-4cce-8fab-fe37bb7b8a33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="69bd1461-43f3-90c2-894e-c7fa62d5743f" executionId="b9f5bb14-7778-43ea-a440-e4d1d0f2102c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1c551731-8bc4-c7cc-c6f6-6fe822e92e28" executionId="cf73c75f-8e4b-4cae-b4b5-dbe6da949084" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dec34cec-12cb-d29e-5e83-99010d804453" executionId="ff2f0970-fc54-45e3-9365-b391a9ad892e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b9ac81f8-e330-8f54-8c91-c6de096f0682" executionId="32f01efc-33af-4411-afc9-a2951be40d1d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83a00785-11d4-f91a-fb8a-8ef30c91d13c" executionId="073eb842-d4c6-4648-8c5d-18cc893961db" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="674a2039-9e30-0e88-bd6b-59eae87d2ee0" executionId="da06e79e-83c3-41a8-912b-f15ff1da4710" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="08fd8447-b106-9d22-9742-c9fe6cd3a2f4" executionId="1e6e2b3b-8f0f-491b-9225-d80ac223f35e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dc8bd6fa-53ee-0563-8572-adc5f47cf5aa" executionId="b390d7c4-f775-4961-97b6-a7e756946b6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="74b131ad-7f18-876c-b22b-a6081f2694a3" executionId="3ead2af9-3d67-434e-ae9b-aeeefe80aa9f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="25eea7e8-7e85-5442-338a-e6db5aaf5b9f" executionId="ecc3c77e-b5cb-4502-912f-3e782ce24db8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d4efc13a-bec2-6a4b-8772-f5444865c444" executionId="aa2d86b8-f392-48bc-a7d9-1a3ad922d186" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e9548bc-c9d4-3bd3-145f-680c5b777cd1" executionId="0cf76986-9cb6-44e6-ab20-762e3bee231f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="108ad442-1083-a607-e794-889b6697f857" executionId="785f41ce-958f-4e19-8a9b-c2be1540a8b7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d6564536-1588-767b-392e-af461babdfd8" executionId="fc652f01-6fe0-4825-a5f8-be4074e239ae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="23665826-5b54-b176-1a28-171a18d761a7" executionId="cfd5bbbb-68eb-4c45-a6b6-db82e5175f80" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9eee4542-8284-0d0c-a7cb-35b376e5ae4f" executionId="f6c41b5f-f1a0-41f6-94e4-848009eb0dbb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9573f45c-a243-c326-3db5-40b1671510b0" executionId="7b3928d9-0f91-481a-a408-1911b8764ad3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a9720abd-8c66-4581-9c43-32aa0c4ade3a" executionId="a87f577b-b362-46d4-9577-958f9312495a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d73da228-b736-c506-4b90-2c56e181e7c5" executionId="f2447020-88ba-4cb4-ad6a-dd100dfc9181" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1330fba-e1ca-6d45-259c-265b4255d5ba" executionId="1192d105-91c6-4090-bdfb-7e7c31d19b53" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="00184939-9091-f4e7-f8ff-d32cfd1fa0d8" executionId="5be810de-8897-4f0f-8ce6-4a389d8a4945" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="505d964f-380e-e2b3-7264-be63f7f44c3e" executionId="87db8223-c1dd-4fce-8bbd-19d1672cb56d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9871e5b8-1181-6683-ecd1-13364afde5e0" executionId="66a599d7-0010-4799-9fd3-36f2d18889ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="66dd722f-a0ed-5b85-3dd5-406e16bf25fc" executionId="45e72812-4dc9-4d6d-bc24-c9f5fbe764ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c7f54bf3-60c4-dc88-f50d-b2544a8110c7" executionId="ce1c94e0-4193-45ce-9282-456deeb9f576" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81f09891-d621-cffd-cfb3-4bf3e737a18e" executionId="c0f992c3-3295-46bf-b358-0d4aeeac67c8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bfa23b9b-f329-c854-571b-2c0a6dda82fd" executionId="d75f7a26-fe6f-41bc-8839-80ecd963a0d5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="57dbe557-f257-4c9f-cd16-7068945dfe64" executionId="759625d9-c944-4683-8d36-12ce113bdf82" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="84aa8b3c-e0d9-3874-ab3d-6d47574a9a64" executionId="81b0cdcb-52c4-4613-8073-a8637ed8af91" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27e5818b-c211-b307-55d5-e9e4ee43fa5b" executionId="c1cb14fe-c10f-4da2-9043-50fa85234579" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4359848-50f9-dd13-5a20-37a03dd5d2e2" executionId="2f027c84-a194-4035-a10b-8dc6254cc72d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="314a4f8a-8ddb-5592-c09d-aad4665d90ab" executionId="97b4d8ea-5ff2-485c-8c03-fe2d1475973d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2e5a7aab-46ce-cefd-4367-d527b7469ca5" executionId="38247c2a-7056-40da-bca9-f870bca2205a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1a811642-3dcc-43cb-8a91-43083c1eb5af" executionId="bb4a456d-65e4-45e6-8aae-475f47836450" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9b9a2f9-d619-6d7d-4662-c020e28d506a" executionId="cd5b4329-5681-4c5a-afc3-e4c6bd808b3e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c36eba9d-af26-c6ba-a888-becc74d9511f" executionId="fd70ca57-ba2f-40f8-a1b7-438836603a9a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="42437387-d93f-3277-2912-7af75f380bd0" executionId="082de1b8-11d8-46d3-9a01-442bf93e4e64" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f800f507-b0e1-50dc-446d-4fca2f94e592" executionId="609a4f6e-6589-443b-8bf3-1b743ad7921d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="56e2ca14-659c-5639-9715-9f19a2efc652" executionId="3d318526-9e7a-4866-82fe-4d0d9028637b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a861f8d-2ac2-1344-a2c0-587977c5b8e7" executionId="d9725221-831f-4362-92ad-f2552928feb8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1efc7ad1-d30a-6229-a9d8-5442d6439277" executionId="8e0f445d-813c-4da7-bed2-404091a60138" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1ff0a8ce-40d7-5b4f-907c-956bd16b6e23" executionId="8ed4ef2a-bac6-480e-b2aa-0e84cab2578b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c1701f6b-b5f7-6323-8e44-da55a16f53e8" executionId="ae5ea1c1-2bd6-461c-a49e-49b88ed08395" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c4d5de09-f9e1-4b62-1f58-8fc3809a1d12" executionId="9e427cfb-64e9-488c-ac95-68bd2017df25" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ab8fb1f5-9884-5e74-0e57-febba0b3f273" executionId="52f221a4-44fc-4fae-bda4-e52336dee12f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e4bd6d87-cbfa-e535-2730-50f3e1d68da7" executionId="e3a3ef24-48f8-4ec1-bc19-4faa7cc961c8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83d26cf2-7b29-36a9-3ba4-4ed99c7f430f" executionId="3e40e910-f013-4d21-ab71-7073dc519033" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9f0468c7-ecd4-cbe1-ff6d-0a7c418db9cf" executionId="d34de024-e30b-4d65-95b9-15ef26e0cc6a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c37e1422-3dbd-d1a5-a331-1b8b0cbfd640" executionId="cf3bd171-6096-471f-ae5b-6ce57784a288" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8a3e8abb-afad-23dd-2fb5-0e4c27fd5f01" executionId="c283d540-1f00-4d15-b404-e840a69081aa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1099d86c-0f9c-edc3-889c-f9d51735be57" executionId="d0e0175a-2583-41dc-8601-b1892510055a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4274ab3c-e0aa-6bb6-cc50-a605ccba2618" executionId="ae79789a-524f-4a30-bde3-6a9303b18e35" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="777134f8-508c-26ca-e60a-1a9b11a7672c" executionId="6fccb6d4-9f4c-4381-9e4e-afc518695050" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="283ee842-4baa-9fde-148d-9efa193b3d0b" executionId="7b837e0e-f0d8-4755-a99b-b5ee28ce491c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81dd4e8b-6629-ac01-97f5-513accb067fa" executionId="41e94497-9542-4661-b182-7bcb852ee4a8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="36a24959-d963-38c7-9e41-615a77ffe4c5" executionId="285ecc79-072f-49dc-8e11-c364a06bb404" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1cf779d5-84bd-b9ef-2695-58483d54d708" executionId="86cf0d85-6e77-463c-bef6-6f914a1bb6ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="98d00d21-bc84-f67f-930b-bec52c9a47c3" executionId="5a816b04-3251-4af5-9763-624ae018cb24" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="079e9c46-1fbf-487e-2a09-c2bd8760f074" executionId="2dd4ee39-8a6a-4448-80df-fe443ca65646" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="137dac6a-552a-ba9b-d8a1-a91407de4df6" executionId="254a6d09-f086-4486-8100-24717129d458" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c8c9ac9-f81f-0e48-361e-1080707e9383" executionId="d72073ae-a156-42bf-bd29-d00bba8827b9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="500c6590-975e-c2cd-8808-338636ab291b" executionId="16d01876-b098-4828-a3f8-5e2b69f27fb9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27f38577-4d20-3dd4-9995-5791bd9b5071" executionId="aafc8f6b-5801-4066-9a23-137e0fdac589" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="75ecbb0d-da94-a567-a7d8-fd22a5105604" executionId="3b6812f2-579c-4b77-bbe4-cb1310b068dc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="22b86104-d709-ff83-0bf7-4dc280269aba" executionId="022752b7-e91e-4a04-a104-cc94926e5ab2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="389bdfd8-3d3f-142c-3add-0f8f153be9bf" executionId="c5508f40-11f3-4497-a622-bce1d85b4602" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="96e2f0e6-d527-22c8-d250-fc0c272db0f4" executionId="8317725f-bc0b-4c8c-8ba4-8e104593c74e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="275fa282-b410-4d0e-58a2-59a4c093a794" executionId="1e6a71c1-cd73-4295-8646-7b43d583ae6b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cef52192-5b56-9ddb-0304-9ecf03dedc51" executionId="c9761eec-99a6-4bb3-b5cf-d3e0517deee3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bb291040-a3a6-b647-9c9b-ee53c274c005" executionId="283136e4-c2e9-477a-ba5e-4f960f15a86b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="deb0ac60-7db0-8081-4720-4dfc3b5ac1b2" executionId="fd20f20b-3482-4fec-9b0d-896daeb5aa34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="926cbab8-1a50-0934-3fdc-db09ce0f0a73" executionId="7d4affec-8e2d-42d4-b0fc-88b39954a9d5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="269a766c-87ac-75be-ac23-71e9b01d9594" executionId="f1c5c7ec-a001-4f6d-abe9-7402860c21d4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e9fd03ce-09c6-b7f9-d1ef-6f751884fdea" executionId="1bb892b6-e470-4ab4-b507-a662284604c1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="68113b74-84a0-0ddd-0b63-9bd540b31d47" executionId="5eb5da96-be4c-43f4-8f3c-08f5232eb93d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2a2c9429-c6c1-c0a2-7d36-0cfba8ee5a96" executionId="3f32a0e3-ea00-448b-8af5-d91904e57c2a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="41ca4e6f-2ed3-ef99-9a74-c7bf219c3282" executionId="8ef92176-b92d-4ff5-bda4-5141e047ef7e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d27076e9-8412-bf2e-515c-77be634c128b" executionId="9656537b-9d1f-4bcc-b0c7-173593ffa207" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="09349440-8c4e-7e04-3c59-e7568a74ec7e" executionId="80df6597-4240-44d4-b325-86f0502e967f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="887d3956-b829-d654-445b-3aed805427de" executionId="807e72a6-f838-42fa-b56a-36b988e69bc3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0850eee5-2cf3-5613-1e91-faf7c8ab3607" executionId="07cd1569-3442-4fac-b123-bde1e3131f7d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="43473201-160a-f649-3642-7fb43a535791" executionId="97eca51e-a464-4cb8-9f70-ee57a373afee" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1d79fabf-8846-2af6-dc4f-b24a6cb7a515" executionId="b5cb623a-68b6-4467-82eb-3d8201dae823" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bcd4fcdf-b58f-3d8f-0d09-91e53522ba88" executionId="d47b8362-362c-4426-9911-ebbd1cf2a13b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6fcfbd81-1211-88a8-f02e-1be7ca2b98d7" executionId="ed1c36b8-b6e9-448d-aea9-210126d8e327" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="00f9ae03-d210-c0fc-f4df-b8aed487e397" executionId="543151ac-1dd7-42f7-be3c-68aff8ce263d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2adfdae0-96e2-0e9d-bd27-907e9d583150" executionId="6b5ae6c2-3cac-4b16-91bd-359cabf4e70d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="db8e29ee-17f0-0eeb-d471-64fd1d0fb8a1" executionId="ce2f5f75-ba99-4848-92ba-4555cccd8e24" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd956e77-3737-89bc-5bd6-6b0c04f0d1b0" executionId="09df1e87-f48e-4bf4-bbbf-2ae29836da73" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b3ce4970-f87d-f26a-6b22-52a1f5323d10" executionId="9b0e1c1f-8cd5-46f3-a946-aa7150b53fe3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bbcb91be-6e77-7448-eff6-d4317be900a3" executionId="2178d419-030a-4c92-8667-a1ae6d3199ac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d6d8f7b4-a511-d7c2-5d3a-5ccd7611a1a1" executionId="c305422d-f884-4d34-aefe-32ccdfed2f80" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="70499a4a-cd76-337e-9936-3bec1e2878aa" executionId="53d37abc-4add-41de-bec7-c06d8a3a2262" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cce01482-69a0-92e9-f295-9965989b71ac" executionId="91684e64-38f9-4626-a79a-601684095375" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d816c403-8230-a74d-4c74-d69637392b7d" executionId="89d69754-f379-45b5-aa90-9a97c3fda20e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c82b7739-1790-f643-de72-a2fef7a86c09" executionId="e3750cdf-c566-4555-8b2b-06ceb7a52a08" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="38dd50e1-babd-cfa6-3920-9fc68da9ec5e" executionId="4586f305-f335-4ddc-b534-13ead581f433" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e8713e19-5cd1-fe25-5813-316021130479" executionId="db496219-9652-4246-8589-9401b2694083" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7395e4d9-3f7e-a43b-ddaf-daa2e0ca97f1" executionId="518111e5-9c46-4cf4-a96d-c06edd888ee2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e6f0a632-aedf-3d30-7401-fc58ea01e176" executionId="58d8bb45-b6b9-426a-8e00-ea62c84c1a74" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d772bfcb-78c8-49c7-b154-7dee9ecaedd7" executionId="04adb662-4f60-4296-876a-33f94bed7ac6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="83d33432-ef67-dde9-8a5e-0a263c8737ff" executionId="cf330451-915d-4e19-9be1-fb4afa76f12e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="10a738b5-11f7-8d2b-91d3-6633779e2c4b" executionId="548a1afe-0308-4cf6-a630-04374180c3e5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="87c854c6-bfab-223b-75ec-184624731970" executionId="a0be13a4-fc55-4a3a-9b09-6f663db34a99" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fb8337eb-3739-6471-250a-3d620e32af47" executionId="21f4e5a7-4b27-4a82-b969-ef1fd4f2ff02" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="56f85b12-9002-3421-1d3c-2ca7bb215814" executionId="7994c3d9-0492-4866-ae5f-650d8959aeab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fc3bfbbc-5dad-1f00-4d06-d751f2562ae8" executionId="600c55bf-4b25-4440-8d92-bf6da47503ab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4f2d6fef-138a-2870-170c-5b971f750254" executionId="e9b1ad62-d59a-46f8-ba11-35e0ccd0f9fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c416bac-1a20-4eac-2a44-6a8bfe7edd5c" executionId="15782512-fd41-4f25-8552-7e550d25869b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="069b1e62-8cb8-e7d9-3fff-5afc87978ab6" executionId="d4b03bef-9b39-45d1-8cf2-caf0b1b3b30d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c256692-57b2-8c6e-c53d-e30d93651e2d" executionId="517de1a2-f567-4d0e-ab97-286e3d35210d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b558b161-51be-d7ee-3417-5244b6244d19" executionId="0de397da-1500-4b9a-9be7-425528b0e002" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="04cc215e-1bc7-beb0-b94e-53e22b41e829" executionId="59c1f44e-525e-44aa-b97a-9ce9401b9e78" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eac65b18-a358-2de8-88c0-4e2bbcaaaf03" executionId="dc6f0a5a-0ba5-4ec0-a8a5-d66558306975" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3c0d627a-1c1f-b7b8-ad5f-010c087e1cf3" executionId="de8ac15f-aa68-4e80-ac91-0db50e639d1e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="44c899c9-4808-4df2-dde7-1ef4ef0ae76c" executionId="4922400c-eb05-477a-9bfa-fb45046bcb2a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2fb1d4de-7abc-e8b3-2ade-aa6667667a12" executionId="908d2c09-8467-4faf-9883-ecf39991e2ca" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aeea1d04-5003-2b0a-8d11-4e67264dd013" executionId="b8f86389-dc36-45bd-a347-f555eaad55fb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="487373dc-dafb-4517-5c6a-5d74a95cf239" executionId="a52a28c7-de50-4349-bb2f-2ef0db9ceba0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c39e7b60-9729-69ea-fd65-0b4405f5a9d5" executionId="24c2b0dc-d898-4b89-8c3a-69ae043f0b95" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="26b7c5cd-fa39-bf9b-a908-7b4e11514f11" executionId="fdb35f92-a937-4314-9834-57fbb00095bd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0b102957-9529-0fb6-9d49-cd9d4fbec90b" executionId="b42313e2-7bfb-4176-aa85-ef971c7d8faf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4e097ab2-06b3-46b7-6f12-dff8a9dfaa3d" executionId="46099c57-31c2-456a-9665-e2fc24b3847e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3ba23308-6541-408c-963a-7fb1a03f105c" executionId="7bf3a5bf-0be3-470e-9a34-4b98fa005a7c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="134d491c-928e-9107-fe6f-7f3101a5feb0" executionId="7fa3f7a8-2952-4c9d-9624-ee90d92dd08d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bd9b8e61-33e8-f211-ecf1-c7920470b7df" executionId="7c42c7b9-2a08-4fcb-81bb-f2eb77d62d55" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="17889428-ca02-31d3-345b-e29c5d9f7998" executionId="c050e9e1-13c7-40e6-9dd1-8ccec269d08d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f0eeac0-e9b9-2e16-7718-65532f534383" executionId="9bda1593-0fb1-4e75-81f2-9fae86b47fac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6bebb593-c8f9-6419-95cd-72219a5e6a10" executionId="b4636e7f-595c-438e-876c-252df67fd835" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7727c02f-bdf8-5893-65cf-fe9294aadc5c" executionId="94d88247-07ea-4eaa-ad11-233517e4d7c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2864813a-4840-3b40-c9b3-9767e957d59d" executionId="18906ba3-a54b-4934-99a6-bc15bd54d87e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="043ff5f8-a1b3-b881-e5cd-729ec38a7238" executionId="e2db0aa8-81a6-437b-b6e8-d60db015570d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="453a25f8-62d3-32f3-7562-44a6236b5e74" executionId="7832848f-f78f-41c1-991d-61046c67c6dd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef830dfc-44c9-8911-e019-d065b318ee64" executionId="c992cdee-6fe6-44c3-82b2-affc6ebc6c26" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="244f3fff-d30a-d150-5bc9-b1f81e2989cd" executionId="b60a88e0-03b5-4fab-bcf3-5e7a40481ec4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0281243d-3a5f-63cb-fa5a-01b65a672989" executionId="3559904b-42ac-42ac-b9af-bdec777875ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="919" executed="919" passed="919" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 3.17.0.0: Test execution started&#xD;
Running all tests in C:\Dev\CK\CK-Core-Projects\CK-Ais-Net\Tests\CK.Ais.Net.Specs\bin\Debug\net8.0\CK.Ais.Net.Specs.dll&#xD;
   NUnit3TestExecutor discovered 919 of 919 NUnit test cases&#xD;
When I parse '=8156b@iuus2' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=8156b@iuus2", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.RepeatIndicator is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.Mmsi is 538003113&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_MmsiIs(538003113) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SpareBits38 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi1 is 209582000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi1Is(209582000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi1 is 2&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi1Is(2) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi2 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMms21Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi2 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi2Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi4Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi4Is(null) (0,0s)&#xD;
&#xD;
When I parse '=5@jof1HMrCPF7NTph' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=5@jof1HMrCPF7NTph", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.RepeatIndicator is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.Mmsi is 353155000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_MmsiIs(353155000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SpareBits38 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi1 is 371059000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi1Is(371059000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi1 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi1Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi2 is 371059000&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMms21Is(371059000) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi2 is 3&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi2Is(3) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi3 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi3Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi4Is(null) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi4 is&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi4Is(null) (0,0s)&#xD;
&#xD;
When I parse '=6D2aSc?SAghBHVwTP0&lt;0;&lt;4:AOwhgs17wpEF:NuHP8oBsti@Rep80klilPCQ830BiH8888' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=6D2aSc?SAghBHVwT...", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.RepeatIndicator is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.Mmsi is 423668110&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_MmsiIs(423668110) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SpareBits38 is 2&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_Is(2) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi1 is 870532860&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi1Is(870532860) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi1 is 0&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi1Is(0) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi2 is 308441060&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMms21Is(308441060) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi2 is 2&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi2Is(2) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi3 is 196652&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi3Is(196652) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi3 is 3&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi3Is(3) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.DestinationMmsi4 is 17450495&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_DestinationMmsi4Is(17450495) (0,0s)&#xD;
And NmeaAisAcknowledgementParser.SequenceNumberMmsi4 is 3&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_SequenceNumberMmsi4Is(3) (0,0s)&#xD;
&#xD;
When I parse '=8156b@iuus2' with padding 0 as a Acknowledgement Message&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.WhenIParseWithNmeaAisAcknowledgementParser("=8156b@iuus2", 0) (0,0s)&#xD;
Then NmeaAisAcknowledgementParser.Type is 13&#xD;
-&gt; done: AcknowledgementParserSpecsSteps.ThenNmeaAisAcknowledgementParser_TypeIs(SafetyRelatedAckn...) (0,0s)&#xD;
&#xD;
When I parse '6&gt;oHhp000000&gt;da30000@00' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;oHhp000000&gt;da30...", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Mmsi is 997601504&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_MmsiIs(997601504) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DestinationMmsi is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DestinationMmsiIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DAC is 235&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DACIs(235) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.FI is 10&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_FIIs(10) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationDataPadding is 4&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationData is a30000@00&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataIs("a30000@00") (0,0s)&#xD;
&#xD;
When I parse '6&gt;oNma0JOJtL078NuS1`s6mQ0vCv048@0002P1401`0000000000' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;oNma0JOJtL078Nu...", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Mmsi is 997701028&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_MmsiIs(997701028) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DestinationMmsi is 111111111&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DestinationMmsiIs(111111111) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DAC is 1&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DACIs(1) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.FI is 50&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_FIIs(50) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationDataPadding is 4&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationData is 8NuS1`s6mQ0vCv048@0002P1401`0000000000&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataIs("8NuS1`s6mQ0vCv048...") (0,0s)&#xD;
&#xD;
When I parse '6&gt;p?paQREindIt4&lt;' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;p?paQREindIt4&lt;", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Mmsi is 998504614&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_MmsiIs(998504614) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DestinationMmsi is 412469099&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DestinationMmsiIs(412469099) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.DAC is 415&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_DACIs(415) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.FI is 1&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_FIIs(1) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationDataPadding is 4&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisAddressedBinaryMessageParser.ApplicationData is 4&lt;&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_ApplicationDataIs("4&lt;") (0,0s)&#xD;
&#xD;
When I parse '6&gt;kKL=000000&gt;d`u06?D000' with padding 0 as a Addressed Binary Message&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisAddressedBinaryMessageParser("6&gt;kKL=000000&gt;d`u0...", 0) (0,0s)&#xD;
Then NmeaAisAddressedBinaryMessageParser.Type is 6&#xD;
-&gt; done: AddressedBinaryMessageParserSpecsSteps.ThenNmeaAisAddressedBinaryMessageParser_TypeIs(BinaryAddressedMe...) (0,0s)&#xD;
&#xD;
When I parse '&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;37ood0ne&gt;80P@&lt;CP...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Mmsi is 209582000&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_MmsiIs(209582000) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.DestinationMmsi is 229456000&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_DestinationMmsiIs(229456000) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RetransmitIs(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SafetyRelatedText is " PLS CHECK MY AIS DATA AND REPLY"&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SafetyRelatedTextIs("" PLS CHECK MY AI...") (0,0s)&#xD;
&#xD;
When I parse '&lt;815N7n0AABp19CPD5CDP@&lt;CP13;QQ0' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;815N7n0AABp19CPD...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Mmsi is 538009119&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_MmsiIs(538009119) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SequenceNumber is 1&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SequenceNumberIs(1) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.DestinationMmsi is 538002734&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_DestinationMmsiIs(538002734) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RetransmitIs(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SafetyRelatedText is "AIS TEST PLS ACK!!@"&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SafetyRelatedTextIs(""AIS TEST PLS ACK...") (0,0s)&#xD;
&#xD;
When I parse '&lt;9N`1nBD@=8L7??4P41IQP5D1PD?PBFPilrhh&lt;DP`ED3Pckrhha0' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;9N`1nBD@=8L7??4P...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Mmsi is 636092889&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_MmsiIs(636092889) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SequenceNumber is 0&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.DestinationMmsi is 621819015&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_DestinationMmsiIs(621819015) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.Retransmit is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_RetransmitIs(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SpareBit71 is false&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SpareBit71Is(False) (0,0s)&#xD;
And NmeaAisAddressedSafetyRelatedMessageParser.SafetyRelatedText is "GOOD DAY! ETA TO RV 14:00LT (UTC +3:00)@"&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_SafetyRelatedTextIs(""GOOD DAY! ETA TO...") (0,0s)&#xD;
&#xD;
When I parse '&lt;37ood0ne&gt;80P@&lt;CP3853;P=IP19CP41D1P1&gt;4PB5@&lt;I' with padding 0 as a Addressed Safety Related Message&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&lt;37ood0ne&gt;80P@&lt;CP...", 0) (0,0s)&#xD;
Then NmeaAisAddressedSafetyRelatedMessageParser.Type is 12&#xD;
-&gt; done: AddressedSafetyRelatedMessageParserSpecsSteps.ThenNmeaAisAddressedSafetyRelatedMessageParser_TypeIs(AddressedSafetyRe...) (0,0s)&#xD;
&#xD;
When I parse 'Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("Evlt&lt;Cf50QUaWW@97...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RepeatIndicator is 3&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RepeatIndicatorIs(3) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Mmsi is 995036238&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_MmsiIs(995036238) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AidsToNavigationType is 28&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AidsToNavigationTypeIs(IsolatedDanger) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidsToNavigation is JACKSON ROCK@@@@@@@@&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidsToNavigationIs("JACKSON ROCK@@@@@@@@") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.PositionAccuracy is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Longitude10000thMins is 69358400&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Longitude10000thMinsIs(69358400) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Latitude10000thMins is -12399100&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Latitude10000thMinsIs(-12399100) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionA is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionAIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionB is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionBIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionC is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionCIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionD is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionDIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.EpfdFixType is 7&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_EpfdFixTypeIs(Surveyed) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.TimeStampSecond is 37&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TimeStampSecondIs(37) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.OffPositionIndicator is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_OffPositionIndicatorIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AtoNStatus is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AtoNStatusIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RaimFlag is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.VirtualAtoN is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_VirtualAtoNIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AssignedMode is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBit241 is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBit241Is(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidToNavigationExtension is&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidToNavigationExtensionIs("") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBitsAtEndIs(0) (0,0s)&#xD;
&#xD;
When I parse 'E&gt;nRFnO77h0W1T7a9hFh84`2V4W@3AEb1fHgh00003aP11H0DQ@H&gt;@' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("E&gt;nRFnO77h0W1T7a9...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Mmsi is 996710105&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_MmsiIs(996710105) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AidsToNavigationType is 30&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AidsToNavigationTypeIs(SpecialMark) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidsToNavigation is NO ANCHORS - PIPELIN&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidsToNavigationIs("NO ANCHORS - PIPELIN") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.PositionAccuracy is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Longitude10000thMins is 857450&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Longitude10000thMinsIs(857450) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Latitude10000thMins is 3617150&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Latitude10000thMinsIs(3617150) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionA is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionAIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionB is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionBIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionC is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionCIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionD is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionDIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.EpfdFixType is 7&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_EpfdFixTypeIs(Surveyed) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.TimeStampSecond is 19&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TimeStampSecondIs(19) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.OffPositionIndicator is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_OffPositionIndicatorIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AtoNStatus is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AtoNStatusIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RaimFlag is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.VirtualAtoN is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_VirtualAtoNIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AssignedMode is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBit241 is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBit241Is(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidToNavigationExtension is E AREA 9&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidToNavigationExtensionIs("E AREA 9") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBitsAtEndIs(0) (0,0s)&#xD;
&#xD;
When I parse 'E&gt;nlfV1`:Rab7h;4Sh&lt;h1WW:@:9MbW`ghDbC@10888gh20A`0UAC`4m@iDh' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("E&gt;nlfV1`:Rab7h;4S...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Mmsi is 997011096&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_MmsiIs(997011096) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AidsToNavigationType is 3&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AidsToNavigationTypeIs(FixedStructure) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidsToNavigation is PUESTO VIG Y CONT TR&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidsToNavigationIs("PUESTO VIG Y CONT TR") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.PositionAccuracy is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Longitude10000thMins is -39159249&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Longitude10000thMinsIs(-39159249) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.Latitude10000thMins is -32877414&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_Latitude10000thMinsIs(-32877414) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionA is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionAIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionB is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionBIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionC is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionCIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.ReferenceForPositionD is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_ReferenceForPositionDIs(1) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.EpfdFixType is 1&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_EpfdFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.TimeStampSecond is 31&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TimeStampSecondIs(31) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.OffPositionIndicator is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_OffPositionIndicatorIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AtoNStatus is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AtoNStatusIs(0) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.RaimFlag is true&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_RaimFlagIs(True) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.VirtualAtoN is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_VirtualAtoNIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.AssignedMode is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBit241 is false&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBit241Is(False) (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.NameOfAidToNavigationExtension is AF BUEN SUCES&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_NameOfAidToNavigationExtensionIs("AF BUEN SUCES") (0,0s)&#xD;
And NmeaAisAidsToNavigationReportParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_SpareBitsAtEndIs(0) (0,0s)&#xD;
&#xD;
When I parse 'Evlt&lt;Cf50QUaWW@97QUP0000000D8U=0r5W0P00003jP10' with padding 0 as a Aids to Navigation Report&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.WhenIParseWithNmeaAisAidsToNavigationReportParser("Evlt&lt;Cf50QUaWW@97...", 0) (0,0s)&#xD;
Then NmeaAisAidsToNavigationReportParser.Type is 21&#xD;
-&gt; done: AidsToNavigationReportParserSpecsSteps.ThenNmeaAisAidsToNavigationReportParser_TypeIs(AidsToNavigationR...) (0,0s)&#xD;
&#xD;
When I parse '@02=VgPoD@C43h00' with padding 0 as a Assigned mode command&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.WhenIParseWithNmeaAisAssignedModeCommandParser("@02=VgPoD@C43h00", 0) (0,0s)&#xD;
Then NmeaAisAssignedModeCommandParser.Type is 16&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_TypeIs(AssignmentModeCom...) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.RepeatIndicator is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.Mmsi is 2320062&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_MmsiIs(2320062) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBits38 is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiA is 232014129&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiAIs(232014129) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetA is 60&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetAIs(60) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementA is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementAIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiB is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiBIs(null) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetB is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetBIs(null) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementB is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementBIs(null) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBitsAtEnd is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBitsAtEndAIs(0) (0,0s)&#xD;
&#xD;
When I parse '@02a4KQD2cFP&lt;P0000000500' with padding 0 as a Assigned mode command&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.WhenIParseWithNmeaAisAssignedModeCommandParser("@02a4KQD2cFP&lt;P000...", 0) (0,0s)&#xD;
Then NmeaAisAssignedModeCommandParser.Type is 16&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_TypeIs(AssignmentModeCom...) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.RepeatIndicator is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.Mmsi is 2770030&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_MmsiIs(2770030) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBits38 is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiA is 352497000&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiAIs(352497000) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetA is 200&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetAIs(200) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementA is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementAIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.DestinationMmsiB is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_DestinationMmsiBIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.OffsetB is 20&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_OffsetBIs(20) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.IncrementB is 0&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_IncrementBIs(0) (0,0s)&#xD;
And NmeaAisAssignedModeCommandParser.SpareBitsAtEnd is&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_SpareBitsAtEndAIs(null) (0,0s)&#xD;
&#xD;
When I parse '@02=VgPoD@C43h00' with padding 0 as a Assigned mode command&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.WhenIParseWithNmeaAisAssignedModeCommandParser("@02=VgPoD@C43h00", 0) (0,0s)&#xD;
Then NmeaAisAssignedModeCommandParser.Type is 16&#xD;
-&gt; done: AssignedModeCommandParserSpecsSteps.ThenNmeaAisAssignedModeCommandParser_TypeIs(AssignmentModeCom...) (0,0s)&#xD;
&#xD;
When I parse '4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Base Station Report&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("4028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisBaseStationReportParser.Type is 4&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TypeIs(BaseStationReport) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Mmsi is 2241071&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_MmsiIs(2241071) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcYear is 2003&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcYearIs(2003) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMonth is 1&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMonthIs(1) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcDay is 20&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcDayIs(20) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcHour is 17&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcHourIs(17) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMinute is 37&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMinuteIs(37) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcSecond is 8&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcSecondIs(8) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionAccuracy is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Longitude10000thMins is 3.215745&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Longitude10000thMinsIs(3,215745) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Latitude10000thMins is 41.96259&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Latitude10000thMinsIs(41,96259) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionFixType is 1&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.SpareBits139 is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RaimFlag is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.CommunicationState is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(0) (0,0s)&#xD;
&#xD;
When I parse '44`Uu;AvJEF`g14&gt;V0DV@MQ00000' with padding 0 as a Base Station Report&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("44`Uu;AvJEF`g14&gt;V...", 0) (0,0s)&#xD;
Then NmeaAisBaseStationReportParser.Type is 4&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TypeIs(BaseStationReport) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RepeatIndicator is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Mmsi is 311000365&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_MmsiIs(311000365) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcYear is 2022&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcYearIs(2022) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMonth is 9&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMonthIs(9) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcDay is 10&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcDayIs(10) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcHour is 22&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcHourIs(22) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcMinute is 40&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcMinuteIs(40) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.UtcSecond is 47&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_UtcSecondIs(47) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionAccuracy is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Longitude10000thMins is 14.90464&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Longitude10000thMinsIs(14,90464) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.Latitude10000thMins is 35.99721&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_Latitude10000thMinsIs(35,99721) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.PositionFixType is 1&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.SpareBits139 is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.RaimFlag is false&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisBaseStationReportParser.CommunicationState is 0&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_PositionFixTypeIs(0) (0,0s)&#xD;
&#xD;
When I parse '4028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Base Station Report&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("4028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisBaseStationReportParser.Type is 4&#xD;
-&gt; done: BaseStationReportParserSpecsSteps.ThenNmeaAisBaseStationReportParser_TypeIs(BaseStationReport) (0,0s)&#xD;
&#xD;
When I parse '88uQwV00G@:?&gt;G1?6600' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("88uQwV00G@:?&gt;G1?6600", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.Mmsi is 601391000&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_MmsiIs(601391000) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.SpareBits38 is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.DAC is 1&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_DACIs(1) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.FI is 29&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_FIIs(29) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationDataPadding is 2&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationData is @:?&gt;G1?6600&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataIs("@:?&gt;G1?6600") (0,0s)&#xD;
&#xD;
When I parse '85PH6giKf;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("85PH6giKf;2=fq`s&gt;...", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.Mmsi is 369493695&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_MmsiIs(369493695) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.SpareBits38 is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.DAC is 366&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_DACIs(366) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.FI is 56&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_FIIs(56) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationDataPadding is 2&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationData is ;2=fq`s&gt;8IP:=I4EKA@AUU=KCjl;ndkut;MvLM45ebS&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataIs(";2=fq`s&gt;8IP:=I4EK...") (0,0s)&#xD;
&#xD;
When I parse '84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("84eJBS0j2d&lt;&lt;&lt;&lt;&lt;&lt;&lt;...", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.Mmsi is 316052108&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_MmsiIs(316052108) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.SpareBits38 is 0&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.DAC is 200&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_DACIs(200) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.FI is 10&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_FIIs(10) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationDataPadding is 2&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisBinaryBroadcastMessageParser.ApplicationData is d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_ApplicationDataIs("d&lt;&lt;&lt;&lt;&lt;&lt;&lt;0HPOg`50000") (0,0s)&#xD;
&#xD;
When I parse '8:U&gt;M;P0G@:?&gt;G1?6600' with padding 0 as a Binary Broadcast Message&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisBinaryBroadcastMessageParser("8:U&gt;M;P0G@:?&gt;G1?6600", 0) (0,0s)&#xD;
Then NmeaAisBinaryBroadcastMessageParser.Type is 8&#xD;
-&gt; done: BinaryBroadcastMessageParserSpecsSteps.ThenNmeaAisBinaryBroadcastMessageParser_TypeIs(BinaryBroadcastMe...) (0,0s)&#xD;
&#xD;
When I parse 'F028n@R2N2P3D73EB6`&gt;6bT20000' with padding 0 as a Channel management&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.WhenIParseWithNmeaAisChannelManagementParser("F028n@R2N2P3D73EB...", 0) (0,0s)&#xD;
Then NmeaAisChannelManagementParser.Type is 22&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TypeIs(ChannelManagement) (0,0s)&#xD;
And NmeaAisChannelManagementParser.RepeatIndicator is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Mmsi is 2242114&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MmsiIs(2242114) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits38 is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelA is 2087&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelAIs(2087) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelB is 2088&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBIs(2088) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TxRxMode is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TxRxModeIs(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.LowPower is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_LowPowerIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins1 is 108600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins1Is(108600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins1 is 54600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins1Is(54600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins2 is 108600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins2Is(108600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins2 is 54600&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins2Is(54600) (0,0s)&#xD;
And NmeaAisChannelManagementParser.MessageIndicator is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MessageIndicatorIs(Brocast) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelABandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelABandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelBBandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBBandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TransitionalZoneSize is 4&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TransitionalZoneSizeIs(4) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits145 is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits145Is(0) (0,0s)&#xD;
&#xD;
When I parse 'FM5293Ppsrh1S?SmKP0&gt;0BOkJ0t0' with padding 0 as a Channel management&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.WhenIParseWithNmeaAisChannelManagementParser("FM5293Ppsrh1S?SmK...", 0) (0,0s)&#xD;
Then NmeaAisChannelManagementParser.Type is 22&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TypeIs(ChannelManagement) (0,0s)&#xD;
And NmeaAisChannelManagementParser.RepeatIndicator is 1&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_RepeatIndicatorIs(1) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Mmsi is 877693198&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MmsiIs(877693198) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits38 is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelA is 910&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelAIs(910) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelB is 4012&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBIs(4012) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TxRxMode is 0&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TxRxModeIs(0) (0,0s)&#xD;
And NmeaAisChannelManagementParser.LowPower is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_LowPowerIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins1 is 50812&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins1Is(50812) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins1 is 62830&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins1Is(62830) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Longitude10thMins2 is 56&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Longitude10thMins2Is(56) (0,0s)&#xD;
And NmeaAisChannelManagementParser.Latitude10thMins2 is 2367&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_Latitude10thMins2Is(2367) (0,0s)&#xD;
And NmeaAisChannelManagementParser.MessageIndicator is 1&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_MessageIndicatorIs(Addressed) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelABandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelABandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.ChannelBBandwidth is false&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_ChannelBBandwidthIs(False) (0,0s)&#xD;
And NmeaAisChannelManagementParser.TransitionalZoneSize is 6&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TransitionalZoneSizeIs(6) (0,0s)&#xD;
And NmeaAisChannelManagementParser.SpareBits145 is 6819584&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_SpareBits145Is(6819584) (0,0s)&#xD;
&#xD;
When I parse 'F028n@R2N2P3D73EB6`&gt;6bT20000' with padding 0 as a Channel management&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.WhenIParseWithNmeaAisChannelManagementParser("F028n@R2N2P3D73EB...", 0) (0,0s)&#xD;
Then NmeaAisChannelManagementParser.Type is 22&#xD;
-&gt; done: ChannelManagementParserSpecsSteps.ThenNmeaAisChannelManagementParser_TypeIs(ChannelManagement) (0,0s)&#xD;
&#xD;
When I parse ':815J6hrsEKP' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":815J6hrsEKP", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 538008091&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(538008091) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits38 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.DestinationMmsi is 247158200&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_DestinationMmsiIs(247158200) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits70 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits70Is(0) (0,0s)&#xD;
&#xD;
When I parse ':9NWsc1sgBDL' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":9NWsc1sgBDL", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 636091308&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(636091308) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits38 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.DestinationMmsi is 518998343&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_DestinationMmsiIs(518998343) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits70 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits70Is(0) (0,0s)&#xD;
&#xD;
When I parse ':5Tjij10WiuP' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":5Tjij10WiuP", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 374125000&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(374125000) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits38 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.DestinationMmsi is 271042520&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_DestinationMmsiIs(271042520) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.SpareBits70 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_SpareBits70Is(0) (0,0s)&#xD;
&#xD;
When I parse ':815J6hrsEKP' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":815J6hrsEKP", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Type is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_TypeIs(UTCDateInquiry) (0,0s)&#xD;
&#xD;
When I parse 'K00000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("K00000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse 'K00000@00000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("K00000@00000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse 'K00000P00000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("K00000P00000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.Mmsi is 2&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse ':00000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":00000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse ':@0000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":@0000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse ':P0000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":P0000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 2&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse ':h0000000000' with padding 0 as a Coordinated Universal Time and Date Inquiry&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(":h0000000000", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateInquiryParser.RepeatIndicator is 3&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateInquiryParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateInquiryParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse ';028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Coordinated Universal Time and Date Response&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(";028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Type is 11&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TypeIs(UTCDateResponse) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Mmsi is 2241071&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_MmsiIs(2241071) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcYear is 2003&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcYearIs(2003) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMonth is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMonthIs(1) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcDay is 20&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcDayIs(20) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcHour is 17&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcHourIs(17) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMinute is 37&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMinuteIs(37) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcSecond is 8&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcSecondIs(8) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionAccuracy is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Longitude10000thMins is 3.215745&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Longitude10000thMinsIs(3,215745) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Latitude10000thMins is 41.96259&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Latitude10000thMinsIs(41,96259) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionFixType is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.SpareBits139 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RaimFlag is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.CommunicationState is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(0) (0,0s)&#xD;
&#xD;
When I parse ';4`Uu;AvJEF`g14&gt;V0DV@MQ00000' with padding 0 as a Coordinated Universal Time and Date Response&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(";4`Uu;AvJEF`g14&gt;V...", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Type is 11&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TypeIs(UTCDateResponse) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RepeatIndicator is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Mmsi is 311000365&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_MmsiIs(311000365) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcYear is 2022&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcYearIs(2022) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMonth is 9&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMonthIs(9) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcDay is 10&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcDayIs(10) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcHour is 22&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcHourIs(22) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcMinute is 40&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcMinuteIs(40) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.UtcSecond is 47&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_UtcSecondIs(47) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionAccuracy is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Longitude10000thMins is 14.90464&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Longitude10000thMinsIs(14,90464) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Latitude10000thMins is 35.99721&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_Latitude10000thMinsIs(35,99721) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.PositionFixType is 1&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.TransmissionControlForLongRangeBroadcastMessage is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TransmissionControlForLongRangeBroadcastMessageIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.SpareBits139 is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_SpareBits139Is(0) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.RaimFlag is false&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(False) (0,0s)&#xD;
And NmeaAisCoordinatedUniversalTimeAndDateResponseParser.CommunicationState is 0&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_PositionFixTypeIs(0) (0,0s)&#xD;
&#xD;
When I parse ';028j;iu&lt;JAU80&gt;f7&gt;H0elQ00000' with padding 0 as a Coordinated Universal Time and Date Response&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast(";028j;iu&lt;JAU80&gt;f7...", 0) (0,0s)&#xD;
Then NmeaAisCoordinatedUniversalTimeAndDateResponseParser.Type is 11&#xD;
-&gt; done: CoordinatedUniversalTimeAndDateResponseParserSpecsSteps.ThenNmeaAisCoordinatedUniversalTimeAndDateResponseParser_TypeIs(UTCDateResponse) (0,0s)&#xD;
&#xD;
When I parse 'D02;bMhRl@fq6DA6DB0i6D0' with padding 0 as a Data link management message&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.WhenIParseWithNmeaAisDataLinkManagementMessageParser("D02;bMhRl@fq6DA6D...", 0) (0,0s)&#xD;
Then NmeaAisDataLinkManagementMessageParser.Type is 20&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_TypeIs(DataLinkManagemen...) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Mmsi is 2288247&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_MmsiIs(2288247) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBits38 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset1 is 557&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset1Is(557) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber1 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber1Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout1 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout1Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment1 is 750&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment1Is(750) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset2 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset2Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber2 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber2Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout2 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout2Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment2 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment2Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset3 is 288&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset3Is(288) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber3 is 3&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber3Is(3) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout3 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout3Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment3 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment3Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBitsAtEnd is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBitsAtEndAIs(null) (0,0s)&#xD;
&#xD;
When I parse 'D02;bMR0tLfp00M6EpDu6D0' with padding 0 as a Data link management message&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.WhenIParseWithNmeaAisDataLinkManagementMessageParser("D02;bMR0tLfp00M6E...", 0) (0,0s)&#xD;
Then NmeaAisDataLinkManagementMessageParser.Type is 20&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_TypeIs(DataLinkManagemen...) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Mmsi is 2288246&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_MmsiIs(2288246) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBits38 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset1 is 2063&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset1Is(2063) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber1 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber1Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout1 is 6&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout1Is(6) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment1 is 750&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment1Is(750) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset2 is 0&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset2Is(0) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber2 is 1&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber2Is(1) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout2 is 6&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout2Is(6) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment2 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment2Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset3 is 1925&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset3Is(1925) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber3 is 3&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber3Is(3) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout3 is 6&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout3Is(6) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment3 is 1125&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment3Is(1125) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Offset4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Offset4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SlotNumber4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SlotNumber4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Timeout4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Timeout4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.Increment4 is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_Increment4Is(null) (0,0s)&#xD;
And NmeaAisDataLinkManagementMessageParser.SpareBitsAtEnd is&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_SpareBitsAtEndAIs(null) (0,0s)&#xD;
&#xD;
When I parse 'D02;bMhRl@fq6DA6DB0i6D0' with padding 0 as a Data link management message&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.WhenIParseWithNmeaAisDataLinkManagementMessageParser("D02;bMhRl@fq6DA6D...", 0) (0,0s)&#xD;
Then NmeaAisDataLinkManagementMessageParser.Type is 20&#xD;
-&gt; done: DataLinkManagementMessageParserSpecsSteps.ThenNmeaAisDataLinkManagementMessageParser_TypeIs(DataLinkManagemen...) (0,0s)&#xD;
&#xD;
When I parse 'A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?' with padding 0 as a Differential Correction Data&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.WhenIParseWithNmeaAisDifferentialCorrectionDataParser("A028nBCt@hbs02GvJ...", 0) (0,0s)&#xD;
Then NmeaAisDifferentialCorrectionDataParser.MessageType is 9&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Station is 510&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_StationIs(510) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.ZCount is 3348&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_ZCountIs(3348) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.SequenceNumber is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_SequenceNumberIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.DgnssDataWordCount is 5&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_DgnssDataWordCountIs(5) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Health is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_HealthIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.WriteDgnssDataWord is 1375485,350474,16698374,2427902,13567503&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_Is(System.UInt32[]) (0,0s)&#xD;
&#xD;
When I parse 'A028nBCt@hbs02Gvd0H@2gop2ABb' with padding 0 as a Differential Correction Data&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.WhenIParseWithNmeaAisDifferentialCorrectionDataParser("A028nBCt@hbs02Gvd...", 0) (0,0s)&#xD;
Then NmeaAisDifferentialCorrectionDataParser.MessageType is 9&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Station is 510&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_StationIs(510) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.ZCount is 5632&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_ZCountIs(5632) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.SequenceNumber is 6&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_SequenceNumberIs(6) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.DgnssDataWordCount is 2&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_DgnssDataWordCountIs(2) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Health is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_HealthIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.WriteDgnssDataWord is 720376,595114&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_Is(System.UInt32[]) (0,0s)&#xD;
&#xD;
When I parse 'A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb' with padding 0 as a Differential Correction Data&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.WhenIParseWithNmeaAisDifferentialCorrectionDataParser("A028jQ02QLfep2H&lt;U...", 0) (0,0s)&#xD;
Then NmeaAisDifferentialCorrectionDataParser.MessageType is 9&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Station is 524&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_StationIs(524) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.ZCount is 4832&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_ZCountIs(4832) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.SequenceNumber is 5&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_SequenceNumberIs(5) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.DgnssDataWordCount is 4&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_DgnssDataWordCountIs(4) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.Health is 0&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_HealthIs(0) (0,0s)&#xD;
And NmeaAisDifferentialCorrectionDataParser.WriteDgnssDataWord is 1572403,342810,16584196,567978&#xD;
-&gt; done: DifferentialCorrectionDataParserSpecsSteps.ThenNmeaAisDifferentialCorrectionDataParser_Is(System.UInt32[]) (0,0s)&#xD;
&#xD;
When I parse 'A028nBCt@hbs02GvJ:0`5?ku1ET:wdh69@gvkhH?' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028nBCt@hbs02GvJ...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Mmsi is 2242121&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_MmsiIs(2242121) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits38 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Longitude10thMins is -3828&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Longitude10thMinsIs(-3828) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Latitude10thMins is 21976&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Latitude10thMinsIs(21976) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits75 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits75Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionDataPadding is 2&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionData is 2GvJ:0`5?ku1ET:wdh69@gvkhH?&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataIs("2GvJ:0`5?ku1ET:wd...") (0,0s)&#xD;
&#xD;
When I parse 'A028nBCt@hbs02Gvd0H@2gop2ABb' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028nBCt@hbs02Gvd...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Mmsi is 2242121&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_MmsiIs(2242121) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits38 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Longitude10thMins is -3828&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Longitude10thMinsIs(-3828) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Latitude10thMins is 21976&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Latitude10thMinsIs(21976) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits75 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits75Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionDataPadding is 2&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionData is 2Gvd0H@2gop2ABb&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataIs("2Gvd0H@2gop2ABb") (0,0s)&#xD;
&#xD;
When I parse 'A028jQ02QLfep2H&lt;UhDP5wpk1CdJw@p42:bb' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028jQ02QLfep2H&lt;U...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.RepeatIndicator is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Mmsi is 2241156&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_MmsiIs(2241156) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits38 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Longitude10thMins is 2583&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Longitude10thMinsIs(2583) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Latitude10thMins is 23919&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_Latitude10thMinsIs(23919) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.SpareBits75 is 0&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_SpareBits75Is(0) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionDataPadding is 2&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataPaddingIs(2) (0,0s)&#xD;
And NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.DifferentialCorrectionData is 2H&lt;UhDP5wpk1CdJw@p42:bb&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_DifferentialCorrectionDataIs("2H&lt;UhDP5wpk1CdJw@...") (0,0s)&#xD;
&#xD;
When I parse 'A028nBCt@hbs02Gvd0H@2gop2ABb' with padding 0 as a Global Navigation-Satellite System Broadcast Binary Message&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.WhenIParseWithNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser("A028nBCt@hbs02Gvd...", 0) (0,0s)&#xD;
Then NmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser.Type is 17&#xD;
-&gt; done: GlobalNavigationSatelliteSystemBroadcastBinaryMessageParserSpecsSteps.ThenNmeaAisGlobalNavigationSatelliteSystemBroadcastBinaryMessageParser_TypeIs(DGNSSBroadcastBin...) (0,0s)&#xD;
&#xD;
When I parse '?913QK18Uf;0D00' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?913QK18Uf;0D00", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
And NmeaAisInterrogationParser.RepeatIndicator is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.Mmsi is 605086060&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MmsiIs(605086060) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits38 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi1 is 304462000&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi1Is(304462000) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType11 is 5&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType11Is(5) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset11 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset11Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits88 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits88Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits108 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits108Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi2 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi2Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits158 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits158Is(null) (0,0s)&#xD;
&#xD;
When I parse '?1b60U0kNVOP&lt;005000' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?1b60U0kNVOP&lt;005000", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
And NmeaAisInterrogationParser.RepeatIndicator is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.Mmsi is 111247508&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MmsiIs(111247508) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits38 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi1 is 215915000&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi1Is(215915000) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType11 is 3&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType11Is(3) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset11 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset11Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits88 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits88Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType12 is 5&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType12Is(5) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset12 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset12Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits108 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits108Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi2 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi2Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits158 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits158Is(null) (0,0s)&#xD;
&#xD;
When I parse '?77&gt;7w1iprE@D00' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?77&gt;7w1iprE@D00", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
And NmeaAisInterrogationParser.RepeatIndicator is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.Mmsi is 477333500&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MmsiIs(477333500) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits38 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits38Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi1 is 477686100&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi1Is(477686100) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType11 is 5&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType11Is(5) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset11 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset11Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits88 is 0&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits88Is(0) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset12 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset12Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits108 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits108Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.DestinationMmsi2 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_DestinationMmsi2Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.MessageType21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_MessageType21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SlotOffset21 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SlotOffset21Is(null) (0,0s)&#xD;
And NmeaAisInterrogationParser.SpareBits158 is&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_SpareBits158Is(null) (0,0s)&#xD;
&#xD;
When I parse '?913QK18Uf;0D00' with padding 0 as an Interrogation&#xD;
-&gt; done: InterrogationParserSpecsSteps.WhenIParseWithNmeaAisInterrogationParser("?913QK18Uf;0D00", 0) (0,0s)&#xD;
Then NmeaAisInterrogationParser.Type is 15&#xD;
-&gt; done: InterrogationParserSpecsSteps.ThenNmeaAisInterrogationParser_TypeIs(Interrigation) (0,0s)&#xD;
&#xD;
When I parse 'KC5E2b@U19PFdLbMuc5=ROv62&lt;7m' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("KC5E2b@U19PFdLbMu...", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RepeatIndicator is 1&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RepeatIndicatorIs(1) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Mmsi is 206914217&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_MmsiIs(206914217) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionAccuracy is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RaimFlag is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.NavigationStatus is 2&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_NavigationStatusIs(NotUnderCommand) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Longitude10thMins is 82214&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Longitude10thMinsIs(82214) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Latitude10thMins is 2904&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Latitude10thMinsIs(2904) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpeedOverGround is 57&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpeedOverGroundIs(57) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.CourseOverGround is 167&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_CourseOverGroundIs(167) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionLatency is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionLatencyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpareBit94 is true&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpareBit94Is(True) (0,0s)&#xD;
&#xD;
When I parse 'Kp15Li@1D=MeT5T@' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("Kp15Li@1D=MeT5T@", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RepeatIndicator is 3&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RepeatIndicatorIs(3) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Mmsi is 538008773&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_MmsiIs(538008773) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionAccuracy is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RaimFlag is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.NavigationStatus is 0&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Longitude10thMins is 21557&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Longitude10thMinsIs(21557) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Latitude10thMins is -18744&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Latitude10thMinsIs(-18744) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpeedOverGround is 11&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpeedOverGroundIs(11) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.CourseOverGround is 68&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_CourseOverGroundIs(68) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionLatency is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionLatencyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpareBit94 is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpareBit94Is(False) (0,0s)&#xD;
&#xD;
When I parse 'Kk=&gt;UB03fbh:R`7d' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("Kk=&gt;UB03fbh:R`7d", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RepeatIndicator is 3&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RepeatIndicatorIs(3) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Mmsi is 215197000&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_MmsiIs(215197000) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionAccuracy is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionAccuracyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.RaimFlag is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.NavigationStatus is 0&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Longitude10thMins is 61099&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Longitude10thMinsIs(61099) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.Latitude10thMins is 1349&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_Latitude10thMinsIs(1349) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpeedOverGround is 16&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpeedOverGroundIs(16) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.CourseOverGround is 123&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_CourseOverGroundIs(123) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.PositionLatency is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_PositionLatencyIs(False) (0,0s)&#xD;
And NmeaAisLongRangeBroadcastMessageParser.SpareBit94 is false&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_SpareBit94Is(False) (0,0s)&#xD;
&#xD;
When I parse 'KC5E2b@U19PFdLbMuc5=ROv62&lt;7m' with padding 0 as a Long-range Automatic Identifcation System Broadcast Message&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.WhenIParseWithNmeaAisLongRangeBroadcastMessageParser("KC5E2b@U19PFdLbMu...", 0) (0,0s)&#xD;
Then NmeaAisLongRangeBroadcastMessageParser.Type is 27&#xD;
-&gt; done: LongRangeBroadcastMessageParserSpecsSteps.ThenNmeaAisLongRangeBroadcastMessageParser_TypeIs(PositionReportFor...) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(0) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000@000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(1) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000&gt;40000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(3600) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000?wh000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 4095&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(4095) (0,0s)&#xD;
&#xD;
When I parse '13mSjt7P001KOu6`6:3@0?wJ0&lt;03' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mSjt7P001KOu6`6...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(0) (0,0s)&#xD;
&#xD;
When I parse '13m6;7cP020HJ`JRs9l0A?v`08&lt;9' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m6;7cP020HJ`JRs...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 68&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(68) (0,0s)&#xD;
&#xD;
When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 1601&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(1601) (0,0s)&#xD;
&#xD;
When I parse '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 3562&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(3562) (0,0s)&#xD;
&#xD;
When I parse '13mVWJ2P01P`jBlTMPsN4?v22&lt;0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mVWJ2P01P`jBlTM...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_CourseOverGroundthDegreesIs(3600) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000020000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000200...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(1) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000@00000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(1) (0,0s)&#xD;
&#xD;
When I parse '1000000000Owwwv0000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000000Owwwv00...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(-1) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse '100000000000001wwwwh00000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000000000001ww...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(-1) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 3390490&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(3390490) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 37393824&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(37393824) (0,0s)&#xD;
&#xD;
When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 8107857&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(8107857) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 46103377&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(46103377) (0,0s)&#xD;
&#xD;
When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 5699112&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(5699112) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 38203428&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(38203428) (0,0s)&#xD;
&#xD;
When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Longitude10000thMins is 108600000&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LongitudeIs(108600000) (0,0s)&#xD;
Then AisPositionReportClassAParser.Latitude10000thMins is 54600000&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_LatitudeIs(54600000) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NotAvailable&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NotAvailable) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000000P000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NoSpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NoSpecialManoeuvre) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000010000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is SpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(SpecialManoeuvre) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000001P000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NotDefinedBySpec&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NotDefinedBySpec) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NotAvailable&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NotAvailable) (0,0s)&#xD;
&#xD;
When I parse '13n@kJ0000PIk0@Sc2==PDQd`53L' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13n@kJ0000PIk0@Sc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is NoSpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(NoSpecialManoeuvre) (0,0s)&#xD;
&#xD;
When I parse '13m69r00AfPlnG6U;43aD7MO0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m69r00AfPlnG6U;...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.ManoeuvreIndicator is SpecialManoeuvre&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_ManoeuvreIndicatorIsNotAvailable(SpecialManoeuvre) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Type is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TypeIs(PositionReport1) (0,0s)&#xD;
&#xD;
When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Type is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TypeIs(PositionReport1) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '0'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse '100000@000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '1'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse '100000P000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000P0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '2'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse '1&gt;eq`d@000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '987654321'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(987654321) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '258590000'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(258590000) (0,0s)&#xD;
&#xD;
When I parse '24c`1`001kPEGSLR98IP00462D0s' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("24c`1`001kPEGSLR9...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.Mmsi is '314180000'&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_MmsiIs(314180000) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderwayUsingEngine&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)&#xD;
&#xD;
When I parse '1000001000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000010000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is AtAnchor&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(AtAnchor) (0,0s)&#xD;
&#xD;
When I parse '1000002000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000020000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotUnderCommand&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotUnderCommand) (0,0s)&#xD;
&#xD;
When I parse '1000003000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000030000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is RestrictedManoeuverability&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(RestrictedManoeuv...) (0,0s)&#xD;
&#xD;
When I parse '1000004000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000040000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ConstrainedByHerDraught&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ConstrainedByHerD...) (0,0s)&#xD;
&#xD;
When I parse '1000005000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000050000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is Moored&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(Moored) (0,0s)&#xD;
&#xD;
When I parse '1000006000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000060000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is Aground&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(Aground) (0,0s)&#xD;
&#xD;
When I parse '1000007000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000070000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is EngagedInFishing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(EngagedInFishing) (0,0s)&#xD;
&#xD;
When I parse '1000008000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000080000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderWaySailing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderWaySailing) (0,0s)&#xD;
&#xD;
When I parse '1000009000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000090000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForHsc&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '100000:000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000:0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForWig&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '100000;000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000;0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse11&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '100000&lt;000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000&lt;0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse12&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '100000=000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000=0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse13&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '100000&gt;000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000&gt;0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is AisSartIsActive&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(AisSartIsActive) (0,0s)&#xD;
&#xD;
When I parse '100000?000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("100000?0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotDefined&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotDefined) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderwayUsingEngine&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderwayUsingEngine) (0,0s)&#xD;
&#xD;
When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is AtAnchor&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(AtAnchor) (0,0s)&#xD;
&#xD;
When I parse '13mVWJ2P01P`jBlTMPsN4?v22&lt;0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mVWJ2P01P`jBlTM...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotUnderCommand&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotUnderCommand) (0,0s)&#xD;
&#xD;
When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is RestrictedManoeuverability&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(RestrictedManoeuv...) (0,0s)&#xD;
&#xD;
When I parse '15CIo&gt;401f0jO4hQ0KN&lt;F9n:0D&lt;P' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("15CIo&gt;401f0jO4hQ0...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ConstrainedByHerDraught&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ConstrainedByHerD...) (0,0s)&#xD;
&#xD;
When I parse '13n53M50001P2jv`4iFe@rJ&lt;0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13n53M50001P2jv`4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is Moored&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(Moored) (0,0s)&#xD;
&#xD;
When I parse '13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mTRV701F23hFp`V...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is EngagedInFishing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(EngagedInFishing) (0,0s)&#xD;
&#xD;
When I parse '13B6BP80000jt=tPk:Isf:F@0538' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13B6BP80000jt=tPk...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is UnderWaySailing&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(UnderWaySailing) (0,0s)&#xD;
&#xD;
When I parse '13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m`0o9P4hPTEKLQ&gt;...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForHsc&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mClB:Oi&lt;Pi:U4U5...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureAmendmentOfNavigationalStatusForWig&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '13m6;7cP020HJ`JRs9l0A?v`08&lt;9' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m6;7cP020HJ`JRs...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse11&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '13m9`rdw01QAv`&lt;WiMAbF3ap2H1a' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m9`rdw01QAv`&lt;Wi...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse12&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '13P=N7M1@10Ph14SqI7pAW@j0L0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13P=N7M1@10Ph14Sq...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is ReservedForFutureUse13&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(ReservedForFuture...) (0,0s)&#xD;
&#xD;
When I parse '13@njcg000PeVI&gt;Pu9Hnul9D0D1M' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@njcg000PeVI&gt;Pu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.NavigationStatus is NotDefined&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_NavigationStatusIs(NotDefined) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(False) (0,0s)&#xD;
&#xD;
When I parse '1000000000P00000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000000P000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(True) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(False) (0,0s)&#xD;
&#xD;
When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_PositionAccuracyIsTrue(True) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000400' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(1) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000800' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(2) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000&lt;00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(3) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000@00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 4&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(4) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000D00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(5) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000H00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 6&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(6) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000L00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 7&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(7) (0,0s)&#xD;
&#xD;
When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(0) (0,0s)&#xD;
&#xD;
When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(1) (0,0s)&#xD;
&#xD;
When I parse '13m6;7cP020HJ`JRs9l0A?v`08&lt;9' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m6;7cP020HJ`JRs...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(2) (0,0s)&#xD;
&#xD;
When I parse '13mTRV701F23hFp`VlU4ul&gt;&lt;0&lt;0;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mTRV701F23hFp`V...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(3) (0,0s)&#xD;
&#xD;
When I parse '13`j@B001h0lICBPg476:TlB0@5:' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13`j@B001h0lICBPg...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 4&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(4) (0,0s)&#xD;
&#xD;
When I parse '13@njcg000PeVI&gt;Pu9Hnul9D0D1M' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@njcg000PeVI&gt;Pu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(5) (0,0s)&#xD;
&#xD;
When I parse '13m9`rdw01QAv`&lt;WiMAbF3ap2H1a' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m9`rdw01QAv`&lt;Wi...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 6&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(6) (0,0s)&#xD;
&#xD;
When I parse '13P=N7M1@10Ph14SqI7pAW@j0L0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13P=N7M1@10Ph14Sq...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSlotTimeout is 7&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSlotTimeoutIs(7) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000200' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 8192&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(8192) (0,0s)&#xD;
&#xD;
When I parse '10000000000000000000000003ww' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 16383&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(16383) (0,0s)&#xD;
&#xD;
When I parse '13mClB:Oi&lt;Pi:U4U5n?J;8CD00Rq' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mClB:Oi&lt;Pi:U4U5...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSubMessage is 2233&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSubMessageIs(2233) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcDirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcDirect) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcIndirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcIndirect) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000001000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is ToBaseStation&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(ToBaseStation) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000001P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is ToOtherStation&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(ToOtherStation) (0,0s)&#xD;
&#xD;
When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcDirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcDirect) (0,0s)&#xD;
&#xD;
When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is UtcIndirect&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(UtcIndirect) (0,0s)&#xD;
&#xD;
When I parse '13oaO&lt;5000PG1VhS?rC3ajf&gt;1000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oaO&lt;5000PG1VhS?...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RadioSyncState is ToBaseStation&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RadioSyncStateIsUtcDirect(ToBaseStation) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(False) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000002000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(True) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(False) (0,0s)&#xD;
&#xD;
When I parse '13oHtV7OhN0=B9bQch;WqnCp0W3h' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(False) (0,0s)&#xD;
&#xD;
When I parse '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RaimFlagIs(True) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000wh0000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000wh00000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is -1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(-1) (0,0s)&#xD;
&#xD;
When I parse '1000000Oh0000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000Oh00000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 127&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(127) (0,0s)&#xD;
&#xD;
When I parse '1000000P00000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1000000P000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is -128&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(-128) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(0) (0,0s)&#xD;
&#xD;
When I parse '13oHtV7OhN0=B9bQch;WqnCp0W3h' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 127&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(127) (0,0s)&#xD;
&#xD;
When I parse '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is -128&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(-128) (0,0s)&#xD;
&#xD;
When I parse '13P=N7M1@10Ph14SqI7pAW@j0L0G' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13P=N7M1@10Ph14Sq...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RateOfTurn is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RateOfTurnIs(5) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse '1@00000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1@000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse '1P00000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1P000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse '1h00000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1h000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse '1Co`hD000`0unrRcusDEcTOL0P00' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Co`hD000`0unrRcu...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse '1kmbi20P@10cNiLTKgi6Wld&gt;0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1kmbi20P@10cNiLTK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000004000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(1) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000008000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(2) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000000&lt;000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 3&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(3) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000000@000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 4&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(4) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000000D000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 5&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(5) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000000H000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 6&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(6) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000000L000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 7&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(7) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(0) (0,0s)&#xD;
&#xD;
When I parse '13n@kJ0000PIk0@Sc2==PDQd`53L' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13n@kJ0000PIk0@Sc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpareBits145 is 2&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpareBitsIs(2) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000001000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000010000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1) (0,0s)&#xD;
&#xD;
When I parse '10000000?w000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000?w0000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1023) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(0) (0,0s)&#xD;
&#xD;
When I parse '1kmbi20P@10cNiLTKgi6Wld&gt;0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1kmbi20P@10cNiLTK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1) (0,0s)&#xD;
&#xD;
When I parse '13@oSF101;PTR`fPLn2:U8S`0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13@oSF101;PTR`fPL...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 75&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(75) (0,0s)&#xD;
&#xD;
When I parse '13m`0o9P4hPTEKLQ&gt;f&lt;:ROvb0003' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13m`0o9P4hPTEKLQ&gt;...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 304&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(304) (0,0s)&#xD;
&#xD;
When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_SpeedOverGroundTenthsIs(1023) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000020000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(1) (0,0s)&#xD;
&#xD;
When I parse '10000000000000000000001n0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 59&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(59) (0,0s)&#xD;
&#xD;
When I parse '10000000000000000000001p0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 60&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(60) (0,0s)&#xD;
&#xD;
When I parse '10000000000000000000001v0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 63&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(63) (0,0s)&#xD;
&#xD;
When I parse '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(1) (0,0s)&#xD;
&#xD;
When I parse '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 44&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(44) (0,0s)&#xD;
&#xD;
When I parse '13oHtV7OhN0=B9bQch;WqnCp0W3h' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 60&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(60) (0,0s)&#xD;
&#xD;
When I parse '13oFwV3P?w&lt;tSF0l4Q@&gt;4?wv0PSu' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13oFwV3P?w&lt;tSF0l4...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TimeStampSecond is 63&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TimeStampSecondIs(63) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 0&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(0) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000200000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 1&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(1) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000000v00000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 31&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(31) (0,0s)&#xD;
&#xD;
When I parse '1000000000000000000001000000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 32&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(32) (0,0s)&#xD;
&#xD;
When I parse '100000000000000000000?v00000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("10000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(511) (0,0s)&#xD;
&#xD;
When I parse '1Smbi200020cNi@TKh96@BEL0000' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("1Smbi200020cNi@TK...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 74&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(74) (0,0s)&#xD;
&#xD;
When I parse '13B6BP80000jt=tPk:Isf:F@0538' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13B6BP80000jt=tPk...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 331&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(331) (0,0s)&#xD;
&#xD;
When I parse '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' with padding 0 as a Position Report Class A&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassA("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
Then AisPositionReportClassAParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassAParserSpecsSteps.ThenAisPositionReportClassAParser_TrueHeadingDegreesIs(511) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsAssigned is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsAssigned(False) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000008000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsAssigned is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsAssigned(True) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsAssigned is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsAssigned(False) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanSwitchBands is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanSwitchBands(False) (0,0s)&#xD;
&#xD;
When I parse 'B00000000000000000000000P000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanSwitchBands is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanSwitchBands(True) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanSwitchBands is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanSwitchBands(True) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000040000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000003Pt0000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 3599&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(3599) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000003Q00000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(3600) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 1211&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(1211) (0,0s)&#xD;
&#xD;
When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 1330&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(1330) (0,0s)&#xD;
&#xD;
When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CourseOverGroundIs(3600) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Sotdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Sotdma) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000040000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Cstdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Cstdma) (0,0s)&#xD;
&#xD;
When I parse 'B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m:&lt;b0008&lt;B&lt;s8TO...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Sotdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Sotdma) (0,0s)&#xD;
&#xD;
When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CsUnit is Cstdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CsUnitIsSotdma(Cstdma) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(False) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000020000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(True) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(False) (0,0s)&#xD;
&#xD;
When I parse 'B5RVdt0000;I;08?A&gt;MOKws7kP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B5RVdt0000;I;08?A...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.HasDisplay is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_HasDisplayIs(True) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(False) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000010000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(True) (0,0s)&#xD;
&#xD;
When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(False) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.IsDscAttached is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_IsDscAttached(True) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B0000000000000P0000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000P00...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(1) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000004000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B000000007wwwwP0000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B000000007wwwwP00...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(-1) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B0000000000000Owwwt000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000Oww...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is -1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(-1) (0,0s)&#xD;
&#xD;
When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Longitude10000thMins is 3096645&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LongitudeIs(3096645) (0,0s)&#xD;
Then AisPositionReportClassBParser.Latitude10000thMins is 36216476&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_LatitudeIs(36216476) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(False) (0,0s)&#xD;
&#xD;
When I parse 'B00000000000000000000000@000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(True) (0,0s)&#xD;
&#xD;
When I parse 'B3m&gt;so00088pPR91r=JfOwV5WP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m&gt;so00088pPR91r...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(False) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.CanAcceptMessage22ChannelAssignment is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_CanAcceptMessage22ChannelAssignment(True) (0,0s)&#xD;
&#xD;
When I parse 'B3mR5u000HFQD;av`1arKwt5oP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mR5u000HFQD;av`...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Type is 18&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TypeIs(StandardClassBEqu...) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B00000@000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B00000P000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000P0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse 'B&gt;eq`d@000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 987654321&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(987654321) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 261146000&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(261146000) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.Mmsi is 257149920&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_MmsiIs(257149920) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(False) (0,0s)&#xD;
&#xD;
When I parse 'B000000008000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000080000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(True) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(False) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_PositionAccuracyIs(True) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RadioStatusType is Sotdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RadioStatusTypeIsSOTDMA(Sotdma) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000002000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RadioStatusType is Itdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RadioStatusTypeIsSOTDMA(Itdma) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RadioStatusType is Itdma&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RadioStatusTypeIsSOTDMA(Itdma) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(False) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000004000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(True) (0,0s)&#xD;
&#xD;
When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is false&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(False) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RaimFlag is true&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RaimFlag(True) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000080000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(1) (0,0s)&#xD;
&#xD;
When I parse 'B0000000000000000000000@0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(2) (0,0s)&#xD;
&#xD;
When I parse 'B0000000000000000000000H0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 3&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(3) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved139 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReserved139Is(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000400000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000004000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B000001000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000010000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 16&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(16) (0,0s)&#xD;
&#xD;
When I parse 'B00000?t00000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000?t000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 255&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(255) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RegionalReserved38 is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RegionalReservedIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B@00000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B@000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse 'BP00000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("BP000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse 'Bh00000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("Bh000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'BCm?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("BCm?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse 'BSm?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("BSm?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse 'Bkm?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("Bkm?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B00000000@000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B00000000@0000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B0000003wh000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000003wh0000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(1023) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.SpeedOverGroundTenths is 23&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_SpeedOverGroundTenthsIs(23) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B0000000000000000000000P0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000MP0000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 59&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(59) (0,0s)&#xD;
&#xD;
When I parse 'B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m:&lt;b0008&lt;B&lt;s8TO...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 2&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(2) (0,0s)&#xD;
&#xD;
When I parse 'B3m?;p0008&lt;q:naAtLh03wTUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m?;p0008&lt;q:naAt...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 9&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(9) (0,0s)&#xD;
&#xD;
When I parse 'B3mnUc0000@LTtaWw7CQ3wVTkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3mnUc0000@LTtaWw...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 13&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(13) (0,0s)&#xD;
&#xD;
When I parse 'B3m6D@P0005r0R``WaiC;wgUkP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m6D@P0005r0R``W...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TimeStampSecond is 31&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TimeStampSecondIs(31) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000000000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 0&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(0) (0,0s)&#xD;
&#xD;
When I parse 'B000000000000000000000P00000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 1&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(1) (0,0s)&#xD;
&#xD;
When I parse 'B00000000000000000003wP00000' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B0000000000000000...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(511) (0,0s)&#xD;
&#xD;
When I parse 'B3m:&lt;b0008&lt;B&lt;s8TO0SQ2j11nDeJ' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3m:&lt;b0008&lt;B&lt;s8TO...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 356&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(356) (0,0s)&#xD;
&#xD;
When I parse 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' with padding 0 as a Position Report Class B&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportClassB("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
Then AisPositionReportClassBParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportClassBParserSpecsSteps.ThenAisPositionReportClassBParser_TrueHeadingDegreesIs(511) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.IsAssigned is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_IsAssigned(False) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000000000@' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.IsAssigned is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_IsAssigned(True) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000040000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000003Pt0000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 3599&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(3599) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000003Q00000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.CourseOverGround10thDegrees is 3600&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_CourseOverGroundIs(3600) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToBow is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToBowIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000400000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToBow is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToBowIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000Ot00000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToBow is 511&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToBowIs(511) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToPort is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToPortIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000P00' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToPort is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToPortIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000000OP00' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToPort is 63&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToPortIs(63) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStarboard is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToStarboardIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000000000P0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStarboard is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToStarboardIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000OP0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStarboard is 63&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToStarboardIs(63) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStern is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToSternIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000000P000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStern is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToSternIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000003wP000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DimensionToStern is 511&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DimensionToSternIs(511) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DteNotReady is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DteNotReadyIs(False) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000000000P' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.DteNotReady is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_DteNotReadyIs(True) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000P0000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000P00...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(1) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000004000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C000000007wwwwP0000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C000000007wwwwP00...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is -1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(-1) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000Owwwt000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000Oww...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Longitude10000thMins is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LongitudeIs(0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Latitude10000thMins is -1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_LatitudeIs(-1) (0,0s)&#xD;
&#xD;
When I parse 'C&gt;eq`d@000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Type is 19&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TypeIs(ExtendedClassBEqu...) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C00000@000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000@0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C00000P000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000P0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse 'C&gt;eq`d@000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C&gt;eq`d@0000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Mmsi is 987654321&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_MmsiIs(987654321) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is '@@@@@@@@@@@@@@@@@@@@'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000002000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is 'A@@@@@@@@@@@@@@@@@@@'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("A@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000002468:&lt;&gt;@BDFHJLNPRTV`00000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is 'ABCDEFGHIJKLMNOPQRST'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("ABCDEFGHIJKLMNOPQRST") (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000bdfhjlnprtw13579;=?A00000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is 'UVWXYZ[\]^_ !"#$%&amp;'('&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("UVWXYZ[\]^_ !"#$%&amp;'(") (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000001CEGIKMOQSUWacegikmoq00000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is ')*+,-./0123456789:;&lt;'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs(")*+,-./0123456789:;&lt;") (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000001suv0000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Name is '=&gt;?@@@@@@@@@@@@@@@@@'&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_NameIs("=&gt;?@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionAccuracy is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionAccuracyIs(False) (0,0s)&#xD;
&#xD;
When I parse 'C000000008000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000080000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionAccuracy is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionAccuracyIs(True) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Undefined&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Undefined) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000020' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Gps&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Gps) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000040' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Glonass&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Glonass) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000060' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is CombinedGpsGlonass&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(CombinedGpsGlonass) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000080' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is LoranC&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(LoranC) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000000000:0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Chayka&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Chayka) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000000000&lt;0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is IntegratedNavigationSystem&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(IntegratedNavigat...) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000000000&gt;0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Surveyed&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Surveyed) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000000000@0' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.PositionFixType is Galileo&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_PositionFixTypeIs(Galileo) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RaimFlag is false&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RaimFlagIs(False) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000010' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RaimFlag is true&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RaimFlagIs(True) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000020000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(1) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000040000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(2) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000080000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 4&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(4) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000@0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 8&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(8) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000H0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 12&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(12) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000N0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved139 is 15&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserved139(15) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000400000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000004000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C000001000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000010000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 16&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(16) (0,0s)&#xD;
&#xD;
When I parse 'C00000?t00000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000?t000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RegionalReserved38 is 255&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RegionalReserve38dIs(255) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C@00000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C@000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse 'CP00000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("CP000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse 'Ch00000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("Ch000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.RepeatIndicator is 3&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.ShipType is NotAvailable&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_ShipTypeIs(NotAvailable) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000000000000000000000000:P000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.ShipType is WingInGroundHazardousCategoryA&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_ShipTypeIs(WingInGroundHazar...) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000001' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(1) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000002' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 2&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(2) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000007' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 7&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(7) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000008' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 8&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(8) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000000000&gt;' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 14&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(14) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000000000000000000000000000000000000?' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.Spare308 is 15&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_Spare308(15) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.SpeedOverGroundTenths is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_SpeedOverGroundTenthsIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C00000000@000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C00000000@0000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.SpeedOverGroundTenths is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_SpeedOverGroundTenthsIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C0000003wh000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000003wh0000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.SpeedOverGroundTenths is 1023&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_SpeedOverGroundTenthsIs(1023) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TimeStampSecond is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TimeStampSecondIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C0000000000000000000000P0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TimeStampSecond is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TimeStampSecondIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000MP0000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TimeStampSecond is 59&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TimeStampSecondIs(59) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000000000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TrueHeadingDegrees is 0&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TrueHeadingDegreesIs(0) (0,0s)&#xD;
&#xD;
When I parse 'C000000000000000000000P00000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TrueHeadingDegrees is 1&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TrueHeadingDegreesIs(1) (0,0s)&#xD;
&#xD;
When I parse 'C00000000000000000003wP00000000000000000000000000000' with padding 0 as a Position Report Extended Class B&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.WhenIParseWithPaddingAsAPositionReportExtendedClassB("C0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisPositionReportExtendedClassBParser.TrueHeadingDegrees is 511&#xD;
-&gt; done: PositionReportExtendedClassBParserSpecsSteps.ThenNmeaAisPositionReportExtendedClassBParser_TrueHeadingDegreesIs(511) (0,0s)&#xD;
&#xD;
When I parse '&gt;3@pJu04U&gt;10ib04&lt;f1@qR1&lt;4HF1HuT4LF0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;3@pJu04U&gt;10ib04&lt;...", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.RepeatIndicator is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.Mmsi is 219028212&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_MmsiIs(219028212) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SpareBit38 is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SpareBit38Is(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SafetyRelatedText is "AIS PLZ ACK TNX SAFE VOYAGE "&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SafetyRelatedTextIs(""AIS PLZ ACK TNX ...") (0,0s)&#xD;
&#xD;
When I parse '&gt;&gt;m&gt;cDPp5HTL5@Ttp4j1L58pTpN2ba0EA8tr1&lt;8nbb0U&gt;0H4ThTpL0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;&gt;m&gt;cDPp5HTL5@Ttp...", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.RepeatIndicator is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.Mmsi is 995339090&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_MmsiIs(995339090) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SpareBit38 is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SpareBit38Is(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SafetyRelatedText is "NAVIGATIONAL WARNING **PETRON SBM** IS FAILING@"&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SafetyRelatedTextIs(""NAVIGATIONAL WAR...") (0,0s)&#xD;
&#xD;
When I parse '&gt;8HweV1@E=@m&lt;N0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;8HweV1@E=@m&lt;N0", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.RepeatIndicator is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.Mmsi is 563080600&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_MmsiIs(563080600) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SpareBit38 is 0&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SpareBit38Is(0) (0,0s)&#xD;
And NmeaAisSafetyRelatedBroadcastParser.SafetyRelatedText is "TESTMSG "&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_SafetyRelatedTextIs(""TESTMSG "") (0,0s)&#xD;
&#xD;
When I parse '&gt;&gt;l:N8hp5HTL5@Ttp4j1L58pTpN2b`9Eb37:bb0U&gt;0tHJ10u&lt;U@Ttp0' with padding 0 as a Safety Related Broadcast&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.WhenIParseWithPaddingAsALongRangeAisBroadcast("&gt;&gt;l:N8hp5HTL5@Ttp...", 0) (0,0s)&#xD;
Then NmeaAisSafetyRelatedBroadcastParser.Type is 14&#xD;
-&gt; done: SafetyRelatedBroadcastParserSpecsSteps.ThenNmeaAisSafetyRelatedBroadcastParser_TypeIs(SafetyRelatedBroa...) (0,0s)&#xD;
&#xD;
When I parse 'I&gt;M4ej0' with padding 0 as a Single Slot Binary Message&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.WhenIParseWithNmeaAisSingleSlotBinaryParser("I&gt;M4ej0", 0) (0,0s)&#xD;
Then NmeaAisSingleSlotBinaryParser.Type is 25&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_TypeIs(SingleSlotBinaryM...) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.RepeatIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.Mmsi is 970010056&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_MmsiIs(970010056) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationIndicatorIs(Brocast) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.BinaryDataFlag is false&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_BinaryDataFlagIs(False) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationMmsi is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationMmsiIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.SpareBits70 is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_SpareBits70Is(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DAC is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DACIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.FI is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_FIIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationDataPadding is 4&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationData is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataIs("0") (0,0s)&#xD;
&#xD;
When I parse 'I8;@OB0' with padding 0 as a Single Slot Binary Message&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.WhenIParseWithNmeaAisSingleSlotBinaryParser("I8;@OB0", 0) (0,0s)&#xD;
Then NmeaAisSingleSlotBinaryParser.Type is 25&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_TypeIs(SingleSlotBinaryM...) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.RepeatIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.Mmsi is 548675400&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_MmsiIs(548675400) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationIndicator is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationIndicatorIs(Brocast) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.BinaryDataFlag is false&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_BinaryDataFlagIs(False) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DestinationMmsi is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DestinationMmsiIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.SpareBits70 is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_SpareBits70Is(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.DAC is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_DACIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.FI is&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_FIIs(null) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationDataPadding is 4&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataPaddingIs(4) (0,0s)&#xD;
And NmeaAisSingleSlotBinaryParser.ApplicationData is 0&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_ApplicationDataIs("0") (0,0s)&#xD;
&#xD;
When I parse 'I&gt;M4ej0' with padding 0 as a Single Slot Binary Message&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.WhenIParseWithNmeaAisSingleSlotBinaryParser("I&gt;M4ej0", 0) (0,0s)&#xD;
Then NmeaAisSingleSlotBinaryParser.Type is 25&#xD;
-&gt; done: SingleSlotBinaryParserSpecsSteps.ThenNmeaAisSingleSlotBinaryParser_TypeIs(SingleSlotBinaryM...) (0,0s)&#xD;
&#xD;
When I parse '95M2oQ@41Tr4L4H@eRvQ;2h20000' with padding 0 as a Standard Search and Rescue Aircraft Position Report&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.WhenIParseWithNmeaAisStandardSearchAndRescueAircraftPositionReportParser("95M2oQ@41Tr4L4H@e...", 0) (0,0s)&#xD;
Then NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Type is 9&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.RepeatIndicator is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_RepeatIndicatorIs(0) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Mmsi is 366000005&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_MmsiIs(366000005) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Altitude is 16&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_AltitudeIs(16) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.SpeedOverGround is 100&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_SpeedOverGroundIs(100) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.PositionAccuracy is true&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_PositionAccuracyIs(True) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Longitude10000thMins is -49749876&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_Is(-49749876) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Latitude10000thMins is 17523450&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_Latitude10000thMinsIs(17523450) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.CourseOverGround10thDegrees is 300&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_CourseOverGround10thDegreesIs(300) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.TimeStampSecond is 11&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_TimeStampSecondIs(11) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.AltitudeSensor is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_AltitudeSensorIs(Gnss) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.SpareBits135 is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_SpareBits135Is(0) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.DTE is true&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_DTEIs(True) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.SpareBits143 is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_SpareBits143Is(0) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.AssignedMode is false&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_AssignedModeIs(False) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.RaimFlag is false&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_RaimFlagIs(False) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.CommunicationStateSelector is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_CommunicationStateSelectorIs(Sotdma) (0,0s)&#xD;
And NmeaAisStandardSearchAndRescueAircraftPositionReportParser.CommunicationState is 0&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_CommunicationStateIs(0) (0,0s)&#xD;
&#xD;
When I parse '95M2oQ@41Tr4L4H@eRvQ;2h20000' with padding 0 as a Standard Search and Rescue Aircraft Position Report&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.WhenIParseWithNmeaAisStandardSearchAndRescueAircraftPositionReportParser("95M2oQ@41Tr4L4H@e...", 0) (0,0s)&#xD;
Then NmeaAisStandardSearchAndRescueAircraftPositionReportParser.Type is 9&#xD;
-&gt; done: StandardSearchAndRescueAircraftPositionReportParserSpecsSteps.ThenNmeaAisStandardSearchAndRescueAircraftPositionReportParser_TypeIs(StandardSARAircra...) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000040000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000040000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(1) (0,0s)&#xD;
&#xD;
When I parse '50000080000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000080000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(2) (0,0s)&#xD;
&#xD;
When I parse '500000&lt;0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("500000&lt;0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(3) (0,0s)&#xD;
&#xD;
When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(0) (0,0s)&#xD;
&#xD;
When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(1) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.AisVersion is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_AisVersionIs(2) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is @@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000100000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000100000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is P@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("P@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000300000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000300000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is 0@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("0@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000040000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is @@@@@@A&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("@@@@@@A") (0,0s)&#xD;
&#xD;
When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is OWBY2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("OWBY2") (0,0s)&#xD;
&#xD;
When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is 9HA2986&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("9HA2986") (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is LKLG@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("LKLG@@@") (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.CallSign is @@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_CallSignIs("@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000&lt;00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is 0@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("0@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000000000000000000000000000@' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is @@@@@@@@@@@@@@@@@@@A&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("@@@@@@@@@@@@@@@@@@@A") (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is HARSTAD@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("HARSTAD@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is TRONDHEIM&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("TRONDHEIM") (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Destination is&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DestinationIs("") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000800000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(1) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000wp00000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 511&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(511) (0,0s)&#xD;
&#xD;
When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(0) (0,0s)&#xD;
&#xD;
When I parse '53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m6;7`00000hEAP0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 6&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(6) (0,0s)&#xD;
&#xD;
When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToBow is 162&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToBowIs(162) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000001000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(1) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000w000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 63&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(63) (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(3) (0,0s)&#xD;
&#xD;
When I parse '548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("548dvb02&lt;&lt;pTiT8l0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToPort is 19&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToPortIs(19) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000100000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(1) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000w00000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 63&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(63) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(2) (0,0s)&#xD;
&#xD;
When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStarboard is 18&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToStarboardIs(18) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000010000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(1) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000007w0000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 511&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(511) (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 6&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(6) (0,0s)&#xD;
&#xD;
When I parse '548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("548dvb02&lt;&lt;pTiT8l0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DimensionToStern is 154&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DimensionToSternIs(154) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000@00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(1) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000P00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(2) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(3) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000001000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 4&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(4) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000000P000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 128&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(128) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000000wh00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 255&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(255) (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(0) (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 15&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(15) (0,0s)&#xD;
&#xD;
When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Draught10thMetres is 102&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DraughtthMetresIs(102) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is false&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(False) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000008' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is true&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(True) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is false&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(False) (0,0s)&#xD;
&#xD;
When I parse '53m:&lt;F82FRLThI1:220puH60l5=@E:222222221J0`D460rdR8p88888888888888888888' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m:&lt;F82FRLThI1:2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.DteNotReady is true&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_DteNotReadyIsFalse(True) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000P00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(1) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000001000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(2) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000001P00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(3) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000002000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 4&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(4) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000004000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 8&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(8) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000008000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 16&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(16) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000?000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 30&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(30) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000?P00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 31&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(31) (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(0) (0,0s)&#xD;
&#xD;
When I parse '53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53QI:t02=oDi`@Q3B...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 9&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(9) (0,0s)&#xD;
&#xD;
When I parse '55AQcl42D&gt;PTQ3G7C63NmL5HE&gt;2222222222221J28B545en08im@DQ2CQp43k0D`1CD4cP' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("55AQcl42D&gt;PTQ3G7C...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaDay is 27&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaDayIs(27) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000100000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(1) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000200000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(2) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000@00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 16&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(16) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000G00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 23&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(23) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000H00000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 24&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(24) (0,0s)&#xD;
&#xD;
When I parse '53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mg2o400000hOSGO...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(0) (0,0s)&#xD;
&#xD;
When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 8&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(8) (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 12&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(12) (0,0s)&#xD;
&#xD;
When I parse '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("544MR0827oeaD&lt;u00...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 23&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(23) (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaHour is 24&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaHourIs(24) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000010000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(1) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000000:0000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 10&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(10) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000000s0000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 59&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(59) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000000t0000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 60&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(60) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(0) (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 34&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(34) (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMinute is 60&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMinuteIs(60) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(0) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000@000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(1) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000000P000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(2) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000010000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 4&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(4) (0,0s)&#xD;
&#xD;
When I parse '5000000000000000000000000000000000000000000001@000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 5&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(5) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000020000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 8&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(8) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000030000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 12&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(12) (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(0) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 5&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(5) (0,0s)&#xD;
&#xD;
When I parse '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("544MR0827oeaD&lt;u00...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.EtaMonth is 7&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_EtaMonthIs(7) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000500000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000500000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(1) (0,0s)&#xD;
&#xD;
When I parse '5000003cNJ;500000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5000003cNJ;500000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 987654321&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(987654321) (0,0s)&#xD;
&#xD;
When I parse '53m6;7`00000hEAP000488D0000000000000000l0h&lt;335m907RCQ4QH22PDU23k3@00000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m6;7`00000hEAP0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(0) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ImoNumber is 6522945&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ImoNumberIs(6522945) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Type is 5&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_TypeIs(StaticAndVoyageRe...) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse '500000@0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("500000@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse '500000P0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("500000P0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse '5&gt;eq`d@0000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5&gt;eq`d@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 987654321&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(987654321) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 257034600&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(257034600) (0,0s)&#xD;
&#xD;
When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 219014278&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(219014278) (0,0s)&#xD;
&#xD;
When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Mmsi is 257745000&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_MmsiIs(257745000) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Undefined&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Undefined) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000040000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Gps&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Gps) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000080000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Glonass&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Glonass) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000&lt;0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is CombinedGpsGlonass&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(CombinedGpsGlonass) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000@0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is LoranC&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(LoranC) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000D0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Chayka&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Chayka) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000H0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is IntegratedNavigationSystem&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(IntegratedNavigat...) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000L0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Surveyed&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Surveyed) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000000000P0000000000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Galileo&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Galileo) (0,0s)&#xD;
&#xD;
When I parse '53m8:d`2F;v4hHQR220PE8l4pr0a:2222222221J0`?6600Ht8kCR81RDj1PDSDp8888880' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m8:d`2F;v4hHQR2...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Undefined&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Undefined) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is Gps&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(Gps) (0,0s)&#xD;
&#xD;
When I parse '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is CombinedGpsGlonass&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(CombinedGpsGlonass) (0,0s)&#xD;
&#xD;
When I parse '53mE09400000hoC3301&lt;4pAV222222200000000N0h:23t0Ht6CP@000000000000000000' with padding 0 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mE09400000hoC33...", 0) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.PositionFixType is 15&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_PositionFixTypeIsUndefined(InternalGnss) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse '5@000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5@000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse '5P000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5P000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse '5h000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5h000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 3&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.RepeatIndicator is 2&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is NotAvailable&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(NotAvailable) (0,0s)&#xD;
&#xD;
When I parse '500000000000000000000000000000000000000E0000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is WingInGroundHazardousCategoryA&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(WingInGroundHazar...) (0,0s)&#xD;
&#xD;
When I parse '53mg2o400000hOSGOJ18E=@hE=&gt;0&lt;P4hhDpLE:0Q0H&lt;6640008hj&lt;M`1Sl`2CQSp8888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mg2o400000hOSGO...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is DredgingOrUnderwaterOps&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(DredgingOrUnderwa...) (0,0s)&#xD;
&#xD;
When I parse '53mFoV000000hf3C3S08`u8pH`Dhh0000000000m1@6334rdR0888888888888888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mFoV000000hf3C3...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is PortTender&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(PortTender) (0,0s)&#xD;
&#xD;
When I parse '53JIbD42BlHOTP7;WSIHth622222222222222216D@L;B5n8NITSm51DQ0CH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53JIbD42BlHOTP7;W...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is CargoAll&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(CargoAll) (0,0s)&#xD;
&#xD;
When I parse '548dvb02&lt;&lt;pTiT8l0008DhLT61&lt;D5L5U&lt;00000183jJC65mE0?DiAkm0000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("548dvb02&lt;&lt;pTiT8l0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is CargoHazardousCategoryB&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(CargoHazardousCat...) (0,0s)&#xD;
&#xD;
When I parse '53m7TH800000hS;3?P0Hu&lt;p604ltp0000000001?0P;5340Ht5531Wu=N=eN=u000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m7TH800000hS;3?...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is CargoNoAdditionalInformation&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(CargoNoAdditional...) (0,0s)&#xD;
&#xD;
When I parse '53QI:t02=oDi`@Q3B20dEV0l58Tr22222222221@8PD765lcN&gt;4SkSRCQiC`88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53QI:t02=oDi`@Q3B...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.ShipType is TankerAll&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_ShipTypeIs(TankerAll) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(0) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000004' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(1) (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 0&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(0) (0,0s)&#xD;
&#xD;
When I parse '5=7LHAT000000000000L58A&lt;uT6085B3@000000U0@21140Ht000000000000000000000&lt;' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5=7LHAT0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.Spare423 is 1&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_SpareIs(1) (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000010000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is P@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("P@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000030000000000000000000000000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is 0@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("0@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '50000000000000000000000000000000000000400000000000000000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("50000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is @@@@@@@@@@@@@@@@@@@A&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("@@@@@@@@@@@@@@@@@@@A") (0,0s)&#xD;
&#xD;
When I parse '5C@oTQT2Ad5duL9W:21=@EHq&gt;085A@hE:222220l00P745m&gt;0&gt;S3kQiF@DPVAC`88888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5C@oTQT2Ad5duL9W:...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is STEVNS BATTLER&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("STEVNS BATTLER") (0,0s)&#xD;
&#xD;
When I parse '5SmkPJ02AmrLh=PV2208t60t@Tr222222222220l2@B785j:0BU4SkQ21BCH88888888880' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("5SmkPJ02AmrLh=PV2...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is BOA ODIN&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("BOA ODIN") (0,0s)&#xD;
&#xD;
When I parse '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A00000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53m89J81SR44hdhL0...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is AKVATRANS@@@@@@@@@@@&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("AKVATRANS@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse '53mr4E42EBp00000001HU&lt;Ttr0tJ1@PF0H`u8A&lt;t00b5:40Ht3h00000000000000000000' with padding 2 as Static and Voyage Related Data&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.WhenIParseWithPaddingAsStaticAndVoyageRelatedData("53mr4E42EBp000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticAndVoyageRelatedDataParser.VesselName is VISION OF THE FJORDS&#xD;
-&gt; done: StaticAndVoyageRelatedDataParserSpecsSteps.ThenNmeaAisStaticAndVoyageRelatedDataParser_VesselNameIs("VISION OF THE FJORDS") (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H00000000000000000000000000' with padding 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(0) (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H000000000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(0) (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H000004000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(1) (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H000008000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H0000080000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(2) (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H00000&lt;000000000000000000000' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H00000&lt;0000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(3) (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H3mhO30PDT@V04pU@4000000000' with padding 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(0) (0,0s)&#xD;
&#xD;
When I inspect the Static Data Report part of 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIInspectTheStaticDataReportPartOfWithPadding("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParser.GetPartNumber returns 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParser_GetPartNumberReturns(1) (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartA.PartNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_PartNumberIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartA.PartNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_PartNumberIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartA.PartNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_PartNumberIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H00000@00000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H00000@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H00000P00000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H00000P0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse 'H&gt;eq`d@00000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H&gt;eq`d@0000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 987654321&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(987654321) (0,0s)&#xD;
&#xD;
When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 257695500&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(257695500) (0,0s)&#xD;
&#xD;
When I parse 'H3m8;Q1A8Tt0000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3m8;Q1A8Tt000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Mmsi is 257035140&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_MmsiIs(257035140) (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is @@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("@@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H00000100000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000010000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is P@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("P@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H00000300000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000030000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is 0@@@@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("0@@@@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000010' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is @@@@@@@@@@@@@@@@@@@P&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("@@@@@@@@@@@@@@@@@@@P") (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000004' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is @@@@@@@@@@@@@@@@@@@A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("@@@@@@@@@@@@@@@@@@@A") (0,0s)&#xD;
&#xD;
When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is HEIDI ANITA@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("HEIDI ANITA@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H3m8;Q1A8Tt0000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3m8;Q1A8Tt000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.VesselName is TRIO@@@@@@@@@@@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_VesselNameIs("TRIO@@@@@@@@@@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H@0000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H@000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H@00000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H@000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse 'HP0000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("HP000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse 'Hh0000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("Hh000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000000' with padding 2 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 2) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000000000000000000000000000' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000000000000000000000000001' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000000w' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 63&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(63) (0,0s)&#xD;
&#xD;
When I parse 'H000000000000000000000000010' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 64&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(64) (0,0s)&#xD;
&#xD;
When I parse 'H000000000000000000000000020' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 128&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(128) (0,0s)&#xD;
&#xD;
When I parse 'H00000000000000000000000003w' with padding 0 as Static Data Report Part A&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartA("H0000000000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartA.Spare is 255&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartA_SpareIs(255) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is @@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H00000400000000Q000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000400000000Q0...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is !@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("!@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H00000400000000QPPPPPP000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000400000000QP...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is !&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("!") (0,0s)&#xD;
&#xD;
When I parse 'H000004000000001234567000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000012...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is ABCDEFG&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("ABCDEFG") (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is LJVK@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("LJVK@@@") (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.CallSign is LG9847&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_CallSignIs("LG9847") (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000080000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000wp0000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 511&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(511) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 16&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(16) (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToBow is 10&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToBowIs(10) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000100' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000w00' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 63&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(63) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(2) (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToPort is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToPortIs(4) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000010' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H0000040000000000000000000w0' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 63&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(63) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(4) (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStarboard is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToStarboardIs(3) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000001000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H00000400000000000000007w000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 511&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(511) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(4) (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.DimensionToStern is 4&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_DimensionToSternIs(4) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartB.PartNumber is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_PartNumberIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Type is 24&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_TypeIs(StaticDataReport) (0,0s)&#xD;
And NmeaAisStaticDataReportParserPartB.PartNumber is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_PartNumberIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H00000D000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000D0000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H00000T000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000T0000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(2) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 257104720&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(257104720) (0,0s)&#xD;
&#xD;
When I parse 'H3m76H4N@B?&gt;1F0&lt;;mnoh0107320' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m76H4N@B?&gt;1F0&lt;;...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Mmsi is 257017440&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MmsiIs(257017440) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.MothershipMmsi is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MothershipMmsiIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000010' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.MothershipMmsi is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MothershipMmsiIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000roVRi0' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.MothershipMmsi is 987654321&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_MothershipMmsiIs(987654321) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H@00004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H@000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(1) (0,0s)&#xD;
&#xD;
When I parse 'HP00004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("HP000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(2) (0,0s)&#xD;
&#xD;
When I parse 'Hh00004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("Hh000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(3) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.RepeatIndicator is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_RepeatIndicatorIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000020000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000200000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 524288&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(524288) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000010000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000100...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000020000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000200...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(2) (0,0s)&#xD;
&#xD;
When I parse 'H00000400003www0000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H00000400003www00...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.SerialNumber is 1048575&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SerialNumberIs(1048575) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is NotAvailable&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(NotAvailable) (0,0s)&#xD;
&#xD;
When I parse 'H000004E00000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H000004E000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is WingInGroundHazardousCategoryA&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(WingInGroundHazar...) (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is Fishing&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(Fishing) (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is CargoAll&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(CargoAll) (0,0s)&#xD;
&#xD;
When I parse 'H3uG2nTUCBD5l0Q00000001@4210' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3uG2nTUCBD5l0Q00...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.ShipType is PleasureCraft&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_ShipTypeIs(PleasureCraft) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Spare is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SpareIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000001' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.Spare is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_SpareIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 0&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(0) (0,0s)&#xD;
&#xD;
When I parse 'H000004000040000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000400000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 1&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(1) (0,0s)&#xD;
&#xD;
When I parse 'H000004000080000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000800000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 2&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(2) (0,0s)&#xD;
&#xD;
When I parse 'H0000040000&lt;0000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000&lt;00000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 3&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(3) (0,0s)&#xD;
&#xD;
When I parse 'H0000040000P0000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000P00000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 8&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(8) (0,0s)&#xD;
&#xD;
When I parse 'H0000040000t0000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000t00000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.UnitModelCode is 15&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_UnitModelCodeIs(15) (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is @@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("@@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H0000040Q0000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040Q00000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is !@@@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("!@@@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H0000040QPPPPPP0000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040QPPPPPP00...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is !&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("!") (0,0s)&#xD;
&#xD;
When I parse 'H000004012345670000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040123456700...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is ABCDEFG&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("ABCDEFG") (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is SMTE4PL&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("SMTE4PL") (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev3 is AMC@@@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev3Is("AMC@@@@") (0,0s)&#xD;
&#xD;
When I parse 'H000004000000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040000000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is @@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("@@@") (0,0s)&#xD;
&#xD;
When I parse 'H0000040Q0000000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040Q00000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is !@@&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("!@@") (0,0s)&#xD;
&#xD;
When I parse 'H0000040QPP00000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040QPP000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is !&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("!") (0,0s)&#xD;
&#xD;
When I parse 'H000004012300000000000000000' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H0000040123000000...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is ABC&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("ABC") (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is SMT&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("SMT") (0,0s)&#xD;
&#xD;
When I parse 'H3n0Vd561=30000&lt;7qploP1@4430' with padding 0 as Static Data Report Part B&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartB("H3n0Vd561=30000&lt;7...", 0) (0,0s)&#xD;
Then NmeaAisStaticDataReportParserPartB.VendorIdRev4 is AMC&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenNmeaAisStaticDataReportParserPartB_VendorIdRev4Is("AMC") (0,0s)&#xD;
&#xD;
When I parse 'H3mhO30PDT@V04pU@4000000000' with padding 2 as Static Data Report Part B catching exception&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartBCatchingException("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
Then the constructor throws ArgumentException&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenTheConstructorThrowsArgumentException() (0,0s)&#xD;
&#xD;
When I parse 'H3m&lt;KD4NC=D5l@&lt;&lt;:F;000204240' with padding 0 as Static Data Report Part A catching exception&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.WhenIParseWithPaddingAsStaticDataReportPartACatchingException("H3m&lt;KD4NC=D5l@&lt;&lt;:...", 0) (0,0s)&#xD;
Then the constructor throws ArgumentException&#xD;
-&gt; done: StaticDataReportParserSpecsSteps.ThenTheConstructorThrowsArgumentException() (0,0s)&#xD;
&#xD;
When I convert the AIS character value 0 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(0) (0,0s)&#xD;
Then the converted ASCII value should be '@'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(@) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 1 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(1) (0,0s)&#xD;
Then the converted ASCII value should be 'A'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(A) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 2 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(2) (0,0s)&#xD;
Then the converted ASCII value should be 'B'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(B) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 3 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(3) (0,0s)&#xD;
Then the converted ASCII value should be 'C'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(C) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 4 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(4) (0,0s)&#xD;
Then the converted ASCII value should be 'D'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(D) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 5 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(5) (0,0s)&#xD;
Then the converted ASCII value should be 'E'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(E) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 6 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(6) (0,0s)&#xD;
Then the converted ASCII value should be 'F'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(F) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 7 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(7) (0,0s)&#xD;
Then the converted ASCII value should be 'G'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(G) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 8 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(8) (0,0s)&#xD;
Then the converted ASCII value should be 'H'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(H) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 9 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(9) (0,0s)&#xD;
Then the converted ASCII value should be 'I'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(I) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 10 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(10) (0,0s)&#xD;
Then the converted ASCII value should be 'J'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(J) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 11 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(11) (0,0s)&#xD;
Then the converted ASCII value should be 'K'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(K) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 12 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(12) (0,0s)&#xD;
Then the converted ASCII value should be 'L'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(L) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 13 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(13) (0,0s)&#xD;
Then the converted ASCII value should be 'M'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(M) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 14 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(14) (0,0s)&#xD;
Then the converted ASCII value should be 'N'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(N) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 15 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(15) (0,0s)&#xD;
Then the converted ASCII value should be 'O'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(O) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 16 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(16) (0,0s)&#xD;
Then the converted ASCII value should be 'P'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(P) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 17 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(17) (0,0s)&#xD;
Then the converted ASCII value should be 'Q'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(Q) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 18 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(18) (0,0s)&#xD;
Then the converted ASCII value should be 'R'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(R) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 19 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(19) (0,0s)&#xD;
Then the converted ASCII value should be 'S'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(S) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 20 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(20) (0,0s)&#xD;
Then the converted ASCII value should be 'T'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(T) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 21 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(21) (0,0s)&#xD;
Then the converted ASCII value should be 'U'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(U) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 22 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(22) (0,0s)&#xD;
Then the converted ASCII value should be 'V'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(V) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 23 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(23) (0,0s)&#xD;
Then the converted ASCII value should be 'W'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(W) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 24 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(24) (0,0s)&#xD;
Then the converted ASCII value should be 'X'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(X) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 25 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(25) (0,0s)&#xD;
Then the converted ASCII value should be 'Y'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(Y) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 26 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(26) (0,0s)&#xD;
Then the converted ASCII value should be 'Z'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(Z) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 27 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(27) (0,0s)&#xD;
Then the converted ASCII value should be '['&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe([) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 28 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(28) (0,0s)&#xD;
Then the converted ASCII value should be '\'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(\) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 29 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(29) (0,0s)&#xD;
Then the converted ASCII value should be ']'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(]) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 30 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(30) (0,0s)&#xD;
Then the converted ASCII value should be '^'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(^) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 31 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(31) (0,0s)&#xD;
Then the converted ASCII value should be '_'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(_) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 32 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(32) (0,0s)&#xD;
Then the converted ASCII value should be ' '&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe( ) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 33 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(33) (0,0s)&#xD;
Then the converted ASCII value should be '!'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(!) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 34 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(34) (0,0s)&#xD;
Then the converted ASCII value should be '"'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(") (0,0s)&#xD;
&#xD;
When I convert the AIS character value 35 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(35) (0,0s)&#xD;
Then the converted ASCII value should be '#'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(#) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 36 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(36) (0,0s)&#xD;
Then the converted ASCII value should be '$'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe($) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 37 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(37) (0,0s)&#xD;
Then the converted ASCII value should be '%'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(%) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 38 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(38) (0,0s)&#xD;
Then the converted ASCII value should be '&amp;'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(&amp;) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 39 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(39) (0,0s)&#xD;
Then the converted ASCII value should be '''&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(') (0,0s)&#xD;
&#xD;
When I convert the AIS character value 40 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(40) (0,0s)&#xD;
Then the converted ASCII value should be '('&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(() (0,0s)&#xD;
&#xD;
When I convert the AIS character value 41 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(41) (0,0s)&#xD;
Then the converted ASCII value should be ')'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe()) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 42 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(42) (0,0s)&#xD;
Then the converted ASCII value should be '*'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(*) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 43 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(43) (0,0s)&#xD;
Then the converted ASCII value should be '+'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(+) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 44 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(44) (0,0s)&#xD;
Then the converted ASCII value should be ','&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(,) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 45 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(45) (0,0s)&#xD;
Then the converted ASCII value should be '-'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(-) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 46 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(46) (0,0s)&#xD;
Then the converted ASCII value should be '.'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(.) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 47 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(47) (0,0s)&#xD;
Then the converted ASCII value should be '/'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(/) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 48 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(48) (0,0s)&#xD;
Then the converted ASCII value should be '0'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(0) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 49 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(49) (0,0s)&#xD;
Then the converted ASCII value should be '1'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(1) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 50 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(50) (0,0s)&#xD;
Then the converted ASCII value should be '2'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(2) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 51 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(51) (0,0s)&#xD;
Then the converted ASCII value should be '3'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(3) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 52 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(52) (0,0s)&#xD;
Then the converted ASCII value should be '4'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(4) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 53 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(53) (0,0s)&#xD;
Then the converted ASCII value should be '5'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(5) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 54 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(54) (0,0s)&#xD;
Then the converted ASCII value should be '6'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(6) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 55 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(55) (0,0s)&#xD;
Then the converted ASCII value should be '7'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(7) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 56 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(56) (0,0s)&#xD;
Then the converted ASCII value should be '8'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(8) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 57 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(57) (0,0s)&#xD;
Then the converted ASCII value should be '9'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(9) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 58 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(58) (0,0s)&#xD;
Then the converted ASCII value should be ':'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(:) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 59 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(59) (0,0s)&#xD;
Then the converted ASCII value should be ';'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(;) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 60 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(60) (0,0s)&#xD;
Then the converted ASCII value should be '&lt;'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(&lt;) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 61 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(61) (0,0s)&#xD;
Then the converted ASCII value should be '='&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(=) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 62 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(62) (0,0s)&#xD;
Then the converted ASCII value should be '&gt;'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(&gt;) (0,0s)&#xD;
&#xD;
When I convert the AIS character value 63 to ASCII&#xD;
-&gt; done: AisStringsSpecsSteps.WhenIConvertTheAISCharacterValueToASCII(63) (0,0s)&#xD;
Then the converted ASCII value should be '?'&#xD;
-&gt; done: AisStringsSpecsSteps.ThenTheConvertedASCIIValueShouldBe(?) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000@0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000@00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000h0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000h00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(3) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000100000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000001000000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(4) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000001@0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000001@00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(5) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000Oh0000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000Oh00000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 127&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(127) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000P00000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000P000000000...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -128&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-128) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13oHtV7OhN0=B9bQch;WqnCp0W3h' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13oHtV7OhN0=B9bQc...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 127&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(127) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
When I read a signed 8 bit int at offset 42&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 42) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -128&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-128) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -73&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-73) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 1) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 110&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(110) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 2) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -35&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-35) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -69&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-69) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value 119&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(119) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-17) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read a signed 8 bit int at offset 6&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadASignedBitIntAtOffset(8, 6) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an signed integer with value -34&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnSignedIntegerWithValue(-34) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 1) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 2) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("1000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '2000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("2000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '2000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("2000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '2000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("2000", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000000P' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 59) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000000P' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000000P' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 61&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 61) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '0000000000P00000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("0000000000P000000...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13mCIp0P00PFnJBSHS1&gt;4?wH2@JB' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13mCIp0P00PFnJBSH...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13nW5&lt;00000IoPlSbE`:P8EH0534' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
When I read an unsigned 1 bit int at offset 60&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(1, 60) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13nW5&lt;00000IoPlSbE`:P8EH0534' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '2000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("20000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '24c`1`001kPEGSLR98IP00462D0s' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("24c`1`001kPEGSLR9...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '3000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("30000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(3) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '33n24L00000p3bHUiw&lt;v46`60?Kk' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("33n24L00000p3bHUi...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(3) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '50000000000000000000000000000000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("50000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(5) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '53m89J81SR44hdhL0004eH5A84q&lt;00000000001@4P8825LD08j0DTm0A000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("53m89J81SR44hdhL0...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(5) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'B000000000000000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("B0000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(18) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'B3q35T005h&lt;0h@`Dd:i;gwRUoP06' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("B3q35T005h&lt;0h@`Dd...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(18) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'H00000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("H0000000000000000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 24&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(24) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'H3mhO30PDT@V04pU@4000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("H3mhO30PDT@V04pU@...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 0) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 24&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(24) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '40000000000M0000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("40000000000M00000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 66&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 66) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 29&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(29) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '400000000000c000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("400000000000c0000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 72&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 72) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 43&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(43) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '40000000000O0000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("40000000000O00000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 66&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 66) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 31&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(31) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '400000000000T000000000000000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("400000000000T0000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 72&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 72) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 36&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(36) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABC0' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC0", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABC1' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC1", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABC:' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC:", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 10&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(10) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABCA' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABCA", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(17) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABC`' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABC`", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 40&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(40) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABCa' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABCa", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 41&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(41) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'ABCw' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("ABCw", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 18&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 18) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 63&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(63) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000000000000000000000020000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000000000000000000000040000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000000000000000000000060000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(3) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000000000000000000000100000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 32&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(32) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '1000000000000000000000120000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 33&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(33) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '10000000000000000000001d0000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 54&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(54) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '10000000000000000000001f0000' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("10000000000000000...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13nW5&lt;00000IoPlSbE`:P8EH0534' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 44&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(44) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '13oO7800000FH&gt;&gt;S6rpur`P200S&lt;' and padding 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("13oO7800000FH&gt;&gt;S6...", 0) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 137&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 137) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000000000000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 0&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(0) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000000400000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000400...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(1) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000000800000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000000800...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(2) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000001000000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000001000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 16&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(16) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000001400000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000001400...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(17) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000002000000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000002000...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 32&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(32) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000002H00000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000002H00...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 38&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(38) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of '00000000000003t00000000000000000000000000000000' and padding 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("00000000000003t00...", 2) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 82&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 82) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 63&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(63) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 1) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 27&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(27) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 2&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 2) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 3&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 3) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 46&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(46) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 4&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 4) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 29&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(29) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 5&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 5) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(59) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 7&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 7) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 47&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(47) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 8&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 8) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 30&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(30) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 9&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 9) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 61&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(61) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 10&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 10) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(59) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 11&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 11) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 13&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 13) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 31&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(31) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 14&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 14) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 62&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(62) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 15&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 15) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 61&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(61) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 16&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 16) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 59&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(59) (0,0s)&#xD;
&#xD;
Given an NMEA AIS payload of 'eogf' and padding 1&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.GivenAnNMEAAISPayloadOfAndPadding("eogf", 1) (0,0s)&#xD;
When I read an unsigned 6 bit int at offset 17&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.WhenIReadAnUnsignedBitIntAtOffset(6, 17) (0,0s)&#xD;
Then the NmeaAisBitVectorParser returns an unsigned integer with value 55&#xD;
-&gt; done: NmeaAisBitVectorParserSpecsSteps.ThenTheNmeaAisBitVectorParserReturnsAnUnsignedIntegerWithValue(55) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055&#xD;
&#xD;
When the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 54&#xD;
&#xD;
When the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
And in ais message 1 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 27) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567686150) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,9,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,9,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
And in ais message 1 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 27) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567686150) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27,c:156768615...") (0,0s)&#xD;
And the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
And the line to message adapter receives '\s:27,*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27,*5F\!AIVDM,...") (0,0s)&#xD;
And the line to message adapter receives '\s:99,*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,*55\!AIVDM,...") (0,0s)&#xD;
And the line to message adapter receives '\s:27*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27*5E\!AIVDM,3...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
And in ais message 1 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 27) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567686150) (0,0s)&#xD;
&#xD;
Given I have configured a MaximumUnmatchedFragmentAge of 10&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.GivenIHaveConfiguredAMaximumUnmatchedFragmentAgeOf(10) (0,0s)&#xD;
When the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:3,c:1567692251...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:24,c:156769287...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:67,c:1567693000*34\!AIVDM,1,1,,,3CnWHf50000ga40TCHE0D0@R003B,0*4B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:67,c:156769300...") (0,0s)&#xD;
And the line to message adapter receives '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:772,c:15676932...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:722,c:1567693372*04\!AIVDM,1,1,,A,13m63A?P00P`@GFTK3s&gt;4?wR20Sf,0*71'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:722,c:15676933...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:808,c:1567693618*0A\!AIVDM,1,1,,B,B3o8B&lt;00F8:0h694gOtbgwqUoP06,0*73'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:808,c:15676936...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 10 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(10) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 42) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567684904) (0,0s)&#xD;
And in ais message 2 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the source from the first NMEA line should be 3&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(2, 3) (0,0s)&#xD;
And in ais message 2 the timestamp from the first NMEA line should be 1567692251&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(2, 1567692251) (0,0s)&#xD;
And in ais message 3 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the source from the first NMEA line should be 24&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(3, 24) (0,0s)&#xD;
And in ais message 3 the timestamp from the first NMEA line should be 1567692878&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(3, 1567692878) (0,0s)&#xD;
And in ais message 4 the payload should be '3CnWHf50000ga40TCHE0D0@R003B' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(4, "3CnWHf50000ga40TC...", 0) (0,0s)&#xD;
And in ais message 4 the source from the first NMEA line should be 67&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(4, 67) (0,0s)&#xD;
And in ais message 4 the timestamp from the first NMEA line should be 1567693000&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(4, 1567693000) (0,0s)&#xD;
And in ais message 5 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(5, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And in ais message 5 the source from the first NMEA line should be 772&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(5, 772) (0,0s)&#xD;
And in ais message 5 the timestamp from the first NMEA line should be 1567693246&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(5, 1567693246) (0,0s)&#xD;
And in ais message 6 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(6, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 6 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(6, 99) (0,0s)&#xD;
And in ais message 6 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(6, 1567685556) (0,0s)&#xD;
And in ais message 7 the payload should be '13m63A?P00P`@GFTK3s&gt;4?wR20Sf' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(7, "13m63A?P00P`@GFTK...", 0) (0,0s)&#xD;
And in ais message 7 the source from the first NMEA line should be 722&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(7, 722) (0,0s)&#xD;
And in ais message 7 the timestamp from the first NMEA line should be 1567693372&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(7, 1567693372) (0,0s)&#xD;
And in ais message 8 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(8, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 8 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(8, 27) (0,0s)&#xD;
And in ais message 8 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(8, 1567686150) (0,0s)&#xD;
And in ais message 9 the payload should be 'B3o8B&lt;00F8:0h694gOtbgwqUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(9, "B3o8B&lt;00F8:0h694g...", 0) (0,0s)&#xD;
And in ais message 9 the source from the first NMEA line should be 808&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(9, 808) (0,0s)&#xD;
And in ais message 9 the timestamp from the first NMEA line should be 1567693618&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(9, 1567693618) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,1*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,1*72'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting unexpected padding on a non-terminal message fragment&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingUnexpectedPaddingOnANon_TerminalMessageFragment(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055*55\!AIVDM,2,1,6,B,j`888888880,0*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\g:1-2-8055*55\!AIVDM,2,1,6,B,j`888888880,0*2B'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\g:1-2-8055*55\!A...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that it has received two message fragments with the same group id and position&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatItHasReceivedTwoMessageFragmentsWithTheSameGroupIdAndPosition(0) (0,0s)&#xD;
And the message error report 0 should include the line number 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 2) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055&#xD;
&#xD;
When the line to message adapter receives an error report for content 'foobar' with line number 42&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAnErrorReportForContentWithLineNumber("foobar", 42) (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'foobar'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "foobar") (0,0s)&#xD;
And the message error report 0 should include the exception reported by the line stream parser&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.ThenTheMessageErrorReportShouldIncludeTheExceptionReportedByTheLineStreamParser(0) (0,0s)&#xD;
And the message error report 0 should include the line number 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 42) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 3451&#xD;
&#xD;
When the line to message adapter receives an error report for content 'foobar' with line number 42&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAnErrorReportForContentWithLineNumber("foobar", 42) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'foobar'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "foobar") (0,0s)&#xD;
And the message error report 0 should include the exception reported by the line stream parser&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.ThenTheMessageErrorReportShouldIncludeTheExceptionReportedByTheLineStreamParser(0) (0,0s)&#xD;
And the message error report 0 should include the line number 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 42) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives an error report for content 'foobar' with line number 42&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAnErrorReportForContentWithLineNumber("foobar", 42) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'foobar'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "foobar") (0,0s)&#xD;
And the message error report 0 should include the exception reported by the line stream parser&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.ThenTheMessageErrorReportShouldIncludeTheExceptionReportedByTheLineStreamParser(0) (0,0s)&#xD;
And the message error report 0 should include the line number 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 42) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055&#xD;
&#xD;
When the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
&#xD;
Given I have configured a MaximumUnmatchedFragmentAge of 10&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.GivenIHaveConfiguredAMaximumUnmatchedFragmentAgeOf(10) (0,0s)&#xD;
When the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54,0*63'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:3,c:1567692251...") (0,0s)&#xD;
And the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*07'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:24,c:156769287...") (0,0s)&#xD;
And the line to message adapter receives a progress report of false, 6, 1234, 6, 1234&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAProgressReportOfFalse(False, 6, 1234, 6, 1234) (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:67,c:1567693000*34\!AIVDM,1,1,,,3CnWHf50000ga40TCHE0D0@R003B,0*4B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:67,c:156769300...") (0,0s)&#xD;
And the line to message adapter receives '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:772,c:15676932...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
And the line to message adapter receives a progress report of false, 10, 2345, 4, 1111&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAProgressReportOfFalse(False, 10, 2345, 4, 1111) (0,0s)&#xD;
And the line to message adapter receives '\s:722,c:1567693372*04\!AIVDM,1,1,,A,13m63A?P00P`@GFTK3s&gt;4?wR20Sf,0*71'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:722,c:15676933...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
And the line to message adapter receives '\s:808,c:1567693618*0A\!AIVDM,1,1,,B,B3o8B&lt;00F8:0h694gOtbgwqUoP06,0*73'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:808,c:15676936...") (0,0s)&#xD;
And the line to message adapter receives a progress report of true, 13, 2445, 3, 100&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceivesAProgressReportOfFalse(True, 13, 2445, 3, 100) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.Progress should have been called 3 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveProgressReports(3) (0,0s)&#xD;
And progress report 0 was false, 6, 4, 1234, 6, 4, 1234&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenProgressReportWasFalse(0, False, 6, 4, 1234, 6, 4, 1234) (0,0s)&#xD;
And progress report 1 was false, 10, 7, 2345, 4, 3, 1111&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenProgressReportWasFalse(1, False, 10, 7, 2345, 4, 3, 1111) (0,0s)&#xD;
And progress report 2 was true, 13, 10, 2445, 3, 3, 100&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenProgressReportWasFalse(2, True, 13, 10, 2445, 3, 3, 100) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-3-3451,s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-3-3451,s:27,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-3-3451*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-3-3451*5F\!A...") (0,0s)&#xD;
And the line to message adapter receives '\g:3-3-3451*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:3-3-3451*5E\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 27) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567686150) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\s:27,c:1567686150*40\!AIVDM,3,1,9,A,544MR0827oeaD&lt;u0000lDdP4pTf0duAA,0*17'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27,c:156768615...") (0,0s)&#xD;
And the line to message adapter receives '\s:27*5F\!AIVDM,3,2,9,A,&lt;uH000167pF=2=nG0:0DRj0CQiC4jh00,0*4A'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27*5F\!AIVDM,3...") (0,0s)&#xD;
And the line to message adapter receives '\s:27*5E\!AIVDM,3,3,9,A,0000000,0*2F'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:27*5E\!AIVDM,3...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '544MR0827oeaD&lt;u0000lDdP4pTf0duAA&lt;uH000167pF=2=nG0:0DRj0CQiC4jh000000000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "544MR0827oeaD&lt;u00...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 27&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 27) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567686150&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567686150) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
&#xD;
Given I have configured a MaximumUnmatchedFragmentAge of 1&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.GivenIHaveConfiguredAMaximumUnmatchedFragmentAgeOf(1) (0,0s)&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54,0*63'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:3,c:1567692251...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 3&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 3) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567692251&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567692251) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that it received an incomplete set of fragments for a message&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatItReceivedAnIncompleteSetOfFragmentsForAMessage(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
1 message groups with missing fragments&#xD;
Partial message, group id 8055&#xD;
&#xD;
When the line to message adapter receives '\g:1-2-8055,s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:1-2-8055,s:99,...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\g:2-2-8055*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\g:2-2-8055*55\!A...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 99) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567685556) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
And the line to message adapter receives '\s:99*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99*55\!AIVDM,2...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And in ais message 0 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 99) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567685556) (0,0s)&#xD;
&#xD;
When the line to message adapter receives '\s:99,c:1567685556*4E\!AIVDM,2,1,6,B,53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4l,0*72'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99,c:156768555...") (0,0s)&#xD;
And the line to message adapter receives '\s:42,c:1567684904*38\!AIVDM,1,1,,B,33m9UtPP@50wwE:VJW6LS67H01&lt;@,0*3C'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:42,c:156768490...") (0,0s)&#xD;
And the line to message adapter receives '\s:99*55\!AIVDM,2,2,6,B,j`888888880,2*2B'&#xD;
-&gt; done: NmeaLineToAisStreamAdapterSpecsSteps.WhenTheLineToMessageAdapterReceives("\s:99*55\!AIVDM,2...") (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 2 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(2) (0,0s)&#xD;
And in ais message 0 the payload should be '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
And in ais message 0 the source from the first NMEA line should be 42&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(0, 42) (0,0s)&#xD;
And in ais message 0 the timestamp from the first NMEA line should be 1567684904&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(0, 1567684904) (0,0s)&#xD;
And in ais message 1 the payload should be '53oGfN42=WRDhlHn221&lt;4i@Dr22222222222220`1@O6640Ht50Skp4mR`4lj`888888880' with padding of 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "53oGfN42=WRDhlHn2...", 2) (0,0s)&#xD;
And in ais message 1 the source from the first NMEA line should be 99&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheSourceFromTheFirstNMEALineShouldBe(1, 99) (0,0s)&#xD;
And in ais message 1 the timestamp from the first NMEA line should be 1567685556&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenInAisMessageTheTimestampFromTheFirstNMEALineShouldBe(1, 1567685556) (0,0s)&#xD;
&#xD;
Given no content&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenNoContent() (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,1s)&#xD;
Then INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
&#xD;
Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And an unterminated line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(4) (0,0s)&#xD;
And in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And in ais message 1 the payload should be '13m9WS001d0K==pR=D?HB6WD0pJV' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(1, "13m9WS001d0K==pR=...", 0) (0,0s)&#xD;
And in ais message 2 the payload should be '13o`9@701j1Ej3vc;o3q@7SJ0D02' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(2, "13o`9@701j1Ej3vc;...", 0) (0,0s)&#xD;
And in ais message 3 the payload should be '13o7g2001P0Lv&lt;rSdVHf2h3N0000' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(3, "13o7g2001P0Lv&lt;rSd...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 2&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 2) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the checksum is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheChecksumIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the padding is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatThePaddingIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the padding is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatThePaddingIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the padding is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatThePaddingIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message with exceptions disabled&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageWithExceptionsDisabledAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that an unrecognized field is present&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenTheMessageErrorReportShouldIncludeAnExceptionReportingThatAnUnrecognizedFieldIsPresent(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given an unterminated line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904,n:1*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message with exceptions disabled&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageWithExceptionsDisabledAsync() (0,0s)&#xD;
Then in ais message 0 the payload should be 'B3m:H900AP@b:79ae6:&lt;OwnUoP06' with padding of 0&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenAisPayloadShouldBeWithPaddingOf(0, "B3m:H900AP@b:79ae...", 0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904,n:1*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904,n:1*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that an unsupported field is present&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatAnUnsupportedFieldIsPresent(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line '\s:42,c:1567684904,q:u*38\!AIVDM,1,1,,A,B'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "\s:42,c:156768490...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the message appears to be incomplete&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheMessageAppearsToBeTruncated(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by message&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByMessageAsync() (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveMessages(0) (0,0s)&#xD;
Then INmeaAisMessageStreamProcessor.OnError should have been called 1 time&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheAisMessageProcessorShouldReceiveAnErrorReport(1) (0,0s)&#xD;
And the message error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the message error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheMessageErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the message error report 0 should include the line number 1&#xD;
-&gt; done: NmeaAisMessageStreamProcessorBindings.ThenTheMessageErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaAisMessageStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenINmeaAisMessageStreamProcessor_OnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given no content&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenNoContent() (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
And INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
&#xD;
Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And an unterminated line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line '\s:3,c:1567692251*01\!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:3,c:1567692251...") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a line '\s:24,c:1567692878*35\!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:24,c:156769287...") (0,0s)&#xD;
And a line '\s:772,c:1567693246*07\!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:772,c:15676932...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 4 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(4) (0,0s)&#xD;
And line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
And line 1 should have a tag block of 's:3,c:1567692251*01' and a sentence of '!AIVDM,1,1,,A,13m9WS001d0K==pR=D?HB6WD0pJV,0*54'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(1, "s:3,c:1567692251*01", "!AIVDM,1,1,,A,13m...") (0,0s)&#xD;
And line 2 should have a tag block of 's:24,c:1567692878*35' and a sentence of '!AIVDM,1,1,,B,13o`9@701j1Ej3vc;o3q@7SJ0D02,0*21'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(2, "s:24,c:1567692878*35", "!AIVDM,1,1,,B,13o...") (0,0s)&#xD;
And line 3 should have a tag block of 's:772,c:1567693246*07' and a sentence of '!AIVDM,1,1,,,13o7g2001P0Lv&lt;rSdVHf2h3N0000,0*25'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(3, "s:772,c:156769324...", "!AIVDM,1,1,,,13o7...") (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
And a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
And a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
And a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
Then OnError should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnErrorShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And the line error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the line error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the line error report 0 should include the line number 2&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheLineNumber(0, 2) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a CRLF line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenACrlfLine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line ''&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given an unterminated line '\s:42,c:1567684904*38\!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenAnUnterminatedLine("\s:42,c:156768490...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then line 0 should have a tag block of 's:42,c:1567684904*38' and a sentence of '!AIVDM,1,1,,A,B3m:H900AP@b:79ae6:&lt;OwnUoP06,0*78'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenLineShouldHaveATagBlockOfAndASentenceOf(0, "s:42,c:1567684904*38", "!AIVDM,1,1,,A,B3m...") (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
Given a line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.GivenALine("I am not an NMEA ...") (0,0s)&#xD;
When I parse the content by line&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.WhenIParseTheContentByLineAsync() (0,0s)&#xD;
Then INmeaLineStreamProcessor.OnNext should have been called 0 times&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnNextShouldHaveBeenCalledTimes(0) (0,0s)&#xD;
Then OnError should have been called 1 time&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnErrorShouldHaveBeenCalledTimes(1) (0,0s)&#xD;
And the line error report 0 should include the problematic line 'I am not an NMEA message'&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "I am not an NMEA ...") (0,0s)&#xD;
And the line error report 0 should include an exception reporting that the expected exclamation mark is missing&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeAnExceptionReportingThatTheExpectedExclamationMarkIsMissing(0) (0,0s)&#xD;
And the line error report 0 should include the line number 1&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheLineNumber(0, 1) (0,0s)&#xD;
And INmeaLineStreamProcessor.OnComplete should have been called&#xD;
-&gt; done: NmeaStreamParserSpecsSteps.ThenOnCompleteShouldHaveBeenCalled() (0,0s)&#xD;
&#xD;
When I parse 's:ASS,c:1706745485*72' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:ASS,c:170674548...", False, IEC) (0,0s)&#xD;
Then the Source is ASS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("ASS") (0,0s)&#xD;
And the Timestamp is 1706745485&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706745485) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)&#xD;
&#xD;
When I parse 's:AIS,c:1706800491*63' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:AIS,c:170680049...", False, IEC) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800491&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800491) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)&#xD;
&#xD;
When I parse '1G2:7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("1G2:7764,s:AIS,c:...", False, IEC) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)&#xD;
&#xD;
Given the line '\g:1-2-9628,s:AIS,c:1701650788*13\!AIVDM,2,1,2,B,55Mv3A`00001L=SKOG9@tlmV0F2222222222220l189446lgN5j3mDm3kc56,0*4E'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.GivenALine("\g:1-2-9628,s:AIS...") (0,0s)&#xD;
When I parse the content by message with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 1&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseTheContentByMessageAsync(False, IEC) (0,0s)&#xD;
Then the message error report 0 should include the error message 'Tag block sentence grouping should be &lt;int&gt;G&lt;int&gt;:&lt;int&gt;, but first part was not a decimal integer'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "Tag block sentenc...") (0,0s)&#xD;
&#xD;
Given the line '\1G2:9628,s:AIS,c:1701650788*13\!AIVDM,2,1,2,B,55Mv3A`00001L=SKOG9@tlmV0F2222222222220l189446lgN5j3mDm3kc56,0*4E'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.GivenALine("\1G2:9628,s:AIS,c...") (0,0s)&#xD;
When I parse the content by message with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseTheContentByMessageAsync(False, Nmea) (0,0s)&#xD;
Then the message error report 0 should include the error message 'Tag block sentence grouping should be &lt;int&gt;-&lt;int&gt;-&lt;int&gt;, but first part was not a decimal integer'&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTheLineErrorReportShouldIncludeTheProblematicLine(0, "Tag block sentenc...") (0,0s)&#xD;
&#xD;
When I parse 's:ASS,c:1706745485*72' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:ASS,c:170674548...", False, Nmea) (0,0s)&#xD;
Then the Source is ASS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("ASS") (0,0s)&#xD;
And the Timestamp is 1706745485&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706745485) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)&#xD;
&#xD;
When I parse 's:AIS,c:1706800491*63' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:AIS,c:170680049...", False, Nmea) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800491&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800491) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)&#xD;
&#xD;
When I parse 'g:1-2-7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 2 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("g:1-2-7764,s:AIS,...", False, Nmea) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)&#xD;
&#xD;
When I parse 's:ASS,c:1706745485*72' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:ASS,c:170674548...", False, Unspecified) (0,0s)&#xD;
Then the Source is ASS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("ASS") (0,0s)&#xD;
And the Timestamp is 1706745485&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706745485) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)&#xD;
&#xD;
When I parse 's:AIS,c:1706800491*63' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("s:AIS,c:170680049...", False, Unspecified) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800491&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800491) (0,0s)&#xD;
And the SentenceGrouping is null&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIsNull() (0,0s)&#xD;
&#xD;
When I parse 'g:1-2-7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("g:1-2-7764,s:AIS,...", False, Unspecified) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)&#xD;
&#xD;
When I parse 'g:1-2-7764,s:AIS,c:1706800480*13' with throwWhenTagBlockContainsUnknownFields of false and tagBlockStandard of 0 as a NMEA tag block parser&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.WhenIParseWithThrowWhenTagBlockContainsUnknownFieldsOfAndTagBlockStandardOfAsANMEATagBlockParser("g:1-2-7764,s:AIS,...", False, Unspecified) (0,0s)&#xD;
Then the Source is AIS&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSourceIs("AIS") (0,0s)&#xD;
And the Timestamp is 1706800480&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenTimestampIs(1706800480) (0,0s)&#xD;
And the SentenceGrouping is 1 2 7764&#xD;
-&gt; done: NmeaTagBlockParserSpecsSteps.ThenSentenceGroupingIs(1, 2, 7764) (0,0s)&#xD;
&#xD;
When I peek at the payload '1000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("10000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 1&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(1) (0,0s)&#xD;
&#xD;
When I peek at the payload '13nW5&lt;00000IoPlSbE`:P8EH0534' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("13nW5&lt;00000IoPlSb...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 1&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(1) (0,0s)&#xD;
&#xD;
When I peek at the payload '2000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("20000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(2) (0,0s)&#xD;
&#xD;
When I peek at the payload '24c`1`001pPEGSLR:=df3@4620SQ' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("24c`1`001pPEGSLR:...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(2) (0,0s)&#xD;
&#xD;
When I peek at the payload '3000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("30000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 3&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(3) (0,0s)&#xD;
&#xD;
When I peek at the payload '33m9UtPP@50wwE:VJW6LS67H01&lt;@' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("33m9UtPP@50wwE:VJ...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 3&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(3) (0,0s)&#xD;
&#xD;
When I peek at the payload '50000000000000000000000000000000000000000000000000000000000000000000000' with padding of 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("50000000000000000...", 2) (0,0s)&#xD;
Then the message type returned by peek should be 5&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(5) (0,0s)&#xD;
&#xD;
When I peek at the payload '53m8lk`00000hS;;SP0Hu&lt;p61HTdTpL00000000F0H&lt;654@pt0;@0000000000000000000' with padding of 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("53m8lk`00000hS;;S...", 2) (0,0s)&#xD;
Then the message type returned by peek should be 5&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(5) (0,0s)&#xD;
&#xD;
When I peek at the payload 'B000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("B0000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 18&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(18) (0,0s)&#xD;
&#xD;
When I peek at the payload 'B3o8B&lt;00F8:0h694gOtbgwqUoP06' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("B3o8B&lt;00F8:0h694g...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 18&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(18) (0,0s)&#xD;
&#xD;
When I peek at the payload 'H000000000000000000000000000' with padding of 0&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("H0000000000000000...", 0) (0,0s)&#xD;
Then the message type returned by peek should be 24&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(24) (0,0s)&#xD;
&#xD;
When I peek at the payload 'H3m9b308tL5&lt;d`4E80000000000' with padding of 2&#xD;
-&gt; done: ParsePayloadSpecsSteps.WhenIPeekAtThePayloadWithPaddingOf("H3m9b308tL5&lt;d`4E8...", 2) (0,0s)&#xD;
Then the message type returned by peek should be 24&#xD;
-&gt; done: ParsePayloadSpecsSteps.ThenTheMessageTypeReturnedByPeekShouldBe(24) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'AIVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AIVDM") (0,0s)&#xD;
Then the DataOrigin is 'Vdm'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheDataOriginIs(Vdm) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'AIVDO'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AIVDO") (0,0s)&#xD;
Then the DataOrigin is 'Vdo'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheDataOriginIs(Vdo) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'ABVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ABVDM") (0,0s)&#xD;
Then the AisTalker is 'BaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(BaseStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'ADVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ADVDM") (0,0s)&#xD;
Then the AisTalker is 'DependentBaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(DependentBaseStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'AIVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AIVDM") (0,0s)&#xD;
Then the AisTalker is 'MobileStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(MobileStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'ANVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ANVDM") (0,0s)&#xD;
Then the AisTalker is 'AidToNavigationStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(AidToNavigationSt...) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'ARVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ARVDM") (0,0s)&#xD;
Then the AisTalker is 'ReceivingStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(ReceivingStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'ASVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ASVDM") (0,0s)&#xD;
Then the AisTalker is 'LimitedBaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(LimitedBaseStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'ATVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("ATVDM") (0,0s)&#xD;
Then the AisTalker is 'TransmittingStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(TransmittingStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'AXVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("AXVDM") (0,0s)&#xD;
Then the AisTalker is 'RepeaterStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(RepeaterStation) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'BSVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("BSVDM") (0,0s)&#xD;
Then the AisTalker is 'DeprecatedBaseStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(DeprecatedBaseSta...) (0,0s)&#xD;
&#xD;
When I parse a message with a packet tag field of 'SAVDM'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPacketTagFieldOf("SAVDM") (0,0s)&#xD;
Then the AisTalker is 'PhysicalShoreStation'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheAisTalkerIs(PhysicalShoreStation) (0,0s)&#xD;
&#xD;
When I parse a message fragment part 1 of 2 with message id 6 and sentence group id 8055&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(1, 2, "6", "8055") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)&#xD;
And the SentenceGroupId is '8055'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(8055) (0,0s)&#xD;
&#xD;
When I parse a message fragment part 2 of 2 with message id 6 and sentence group id 8055&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(2, 2, "6", "8055") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)&#xD;
And the SentenceGroupId is '8055'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(8055) (0,0s)&#xD;
&#xD;
When I parse a message fragment part 1 of 3 with message id 0 and sentence group id 3451&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(1, 3, "0", "3451") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
And the SentenceGroupId is '3451'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(3451) (0,0s)&#xD;
&#xD;
When I parse a message fragment part 2 of 3 with message id 0 and sentence group id 3451&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(2, 3, "0", "3451") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
And the SentenceGroupId is '3451'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(3451) (0,0s)&#xD;
&#xD;
When I parse a message fragment part 3 of 3 with message id 0 and sentence group id 3451&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndSentenceGroupId(3, 3, "0", "3451") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(3) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
And the SentenceGroupId is '3451'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheSentenceGroupIdIs(3451) (0,0s)&#xD;
&#xD;
When I parse a message fragment part 1 of 2 with message id 6 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(1, 2, "6") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)&#xD;
&#xD;
When I parse a message fragment part 2 of 2 with message id 6 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(2, 2, "6") (0,0s)&#xD;
Then the TotalFragmentCount is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(2) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '6'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("6") (0,0s)&#xD;
&#xD;
When I parse a message fragment part 1 of 3 with message id 0 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(1, 3, "0") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
&#xD;
When I parse a message fragment part 2 of 3 with message id 0 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(2, 3, "0") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(2) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
&#xD;
When I parse a message fragment part 3 of 3 with message id 0 and no sentence group id&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageFragmentPartOfWithMessageIdAndNoSentenceGroupId(3, 3, "0") (0,0s)&#xD;
Then the TotalFragmentCount is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(3) (0,0s)&#xD;
And the FragmentNumberOneBased is '3'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(3) (0,0s)&#xD;
And the MultiSequenceMessageId is '0'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIs("0") (0,0s)&#xD;
&#xD;
When I parse a non-fragmented message&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseANon_FragmentedMessage() (0,0s)&#xD;
Then the TotalFragmentCount is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTotalFragmentCountIs(1) (0,0s)&#xD;
And the FragmentNumberOneBased is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheFragmentNumberOneBasedIs(1) (0,0s)&#xD;
And the MultiSequenceMessageId is empty&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheMultiSequenceMessageIdIsEmpty() (0,0s)&#xD;
And the TagBlockSentenceGrouping is not present&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTagBlockSentenceGroupingIsNotPresent() (0,0s)&#xD;
&#xD;
When I parse a message with padding of 3&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPaddingOf(3) (0,0s)&#xD;
Then the padding is 3&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenThePaddingIs(3) (0,0s)&#xD;
&#xD;
When I parse a message with a payload of 'B3m:H900AP@b:79ae6:&lt;OwnUoP06'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithAPayloadOf("B3m:H900AP@b:79ae...") (0,0s)&#xD;
Then the payload is 'B3m:H900AP@b:79ae6:&lt;OwnUoP06'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenThePayloadIs("B3m:H900AP@b:79ae...") (0,0s)&#xD;
&#xD;
When I parse a message with a radio channel code of 'A'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("A") (0,0s)&#xD;
Then the ChannelCode is 'A'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(A) (0,0s)&#xD;
&#xD;
When I parse a message with a radio channel code of 'B'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("B") (0,0s)&#xD;
Then the ChannelCode is 'B'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(B) (0,0s)&#xD;
&#xD;
When I parse a message with a radio channel code of '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("1") (0,0s)&#xD;
Then the ChannelCode is '1'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(1) (0,0s)&#xD;
&#xD;
When I parse a message with a radio channel code of '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithARadioChannelCodeOf("2") (0,0s)&#xD;
Then the ChannelCode is '2'&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheChannelCodeIs(2) (0,0s)&#xD;
&#xD;
When I parse a message with no tag block&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithNoTagBlock() (0,0s)&#xD;
Then the TagBlockWithoutDelimiters property's Length should be 0&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTagBlockWithoutDelimitersLengthShouldBe(0) (0,0s)&#xD;
&#xD;
When I parse a message with a tag block&#xD;
-&gt; done: SentenceLayerSpecsSteps.WhenIParseAMessageWithATagBlock() (0,0s)&#xD;
Then the TagBlockWithoutDelimiters property should match the tag block without the delimiters&#xD;
-&gt; done: SentenceLayerSpecsSteps.ThenTheTagBlockWithoutDelimitersPropertyShouldMatchTheTagBlockWithoutTheDelimiters() (0,0s)&#xD;
&#xD;
NUnit Adapter 3.17.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>